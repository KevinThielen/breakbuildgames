function closeSearchNow(){document.querySelector("main").innerHTML=window.main}function goSearchNow(){var e=document.querySelector("main"),d=(window.main||(window.main=e.innerHTML),document.getElementById("suggestions")),t=d.cloneNode(!0),r=(t.id="results",document.createElement("div")),o='<form name="closeSearch"><h2><button type="submit" title="Close Search"><i class="svgs x"></i></button> Results For: '.concat(document.getElementById("searchinput").value,"</h2></form>");return r.innerHTML=o,t.insertBefore(r,t.firstChild),e.innerHTML=t.outerHTML,d.innerHTML="",document.getElementById("searchinput").value="",document.body.contains(document.closeSearch)&&(document.closeSearch.onsubmit=function(){closeSearchNow()}),!1}window.searchIndex={fields:["title","body"],pipeline:["trimmer","stopWordFilter","stemmer"],ref:"id",version:"0.9.5",index:{body:{root:{docs:{},df:0,0:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:4.123105625617661},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:5.385164807134504},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.7320508075688772}},df:11,".":{docs:{},df:0,0:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:2},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:2.449489742783178},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:2.449489742783178},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:3.1622776601683795},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:2.23606797749979}},df:7,1:{docs:{},df:0,6:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:1}}},1:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1}},df:1,".":{docs:{},df:0,0:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1}},df:1}},2:{docs:{},df:0,9:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:1}},4:{docs:{},df:0,1:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:1}}},3:{docs:{},df:0,0:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:1}},5:{docs:{},df:0,"(":{docs:{},df:0,g:{docs:{},df:0,l:{docs:{},df:0,_:{docs:{},df:0,t:{docs:{},df:0,r:{docs:{},df:0,u:{docs:{},df:0,e:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1}},df:1}}}}}}}}},8:{docs:{},df:0,2:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1}},df:1},6:{docs:{},df:0,s:{docs:{},df:0,4:{docs:{},df:0,".":{docs:{},df:0,9:{docs:{},df:0,m:{docs:{},df:0,b:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:1}}}}},5:{docs:{},df:0,".":{docs:{},df:0,2:{docs:{},df:0,m:{docs:{},df:0,b:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:1}}}}}}},7:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:1}},9:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:2.8284271247461903},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:2.8284271247461903},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:2.8284271247461903},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:2.8284271247461903}},df:4,2:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.4142135623730951}},df:1}}},_:{docs:{},df:0,i:{docs:{},df:0,3:{docs:{},df:0,2:{docs:{},df:0,".":{docs:{},df:0,b:{docs:{},df:0,a:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}}}},x:{docs:{},df:0,0:{docs:{},df:0,0:{docs:{},df:0,0:{docs:{},df:0,0:{docs:{},df:0,0:{docs:{},df:0,1:{docs:{},df:0,0:{docs:{},df:0,0:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1.4142135623730951}},df:1}}},4:{docs:{},df:0,0:{docs:{},df:0,0:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1.4142135623730951}},df:1}}}},4:{docs:{},df:0,0:{docs:{},df:0,0:{docs:{},df:0,0:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1.4142135623730951}},df:1}}}}}}}}}},1:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:3},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1},"https://breakbuild.dev/support/":{tf:1}},df:9,".":{docs:{},df:0,0:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:2.449489742783178},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:2.8284271247461903},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:3},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.7320508075688772}},df:8},6:{docs:{},df:0,m:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:1}}},0:{docs:{"https://breakbuild.dev/devlog/motivation/":{tf:1}},df:1,0:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1}},df:2,k:{docs:{},df:0,b:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:1}}}},2:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:1,8:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1}},df:1,".":{docs:{},df:0,0:{docs:{},df:0,"(":{docs:{},df:0,g:{docs:{},df:0,l:{docs:{},df:0,_:{docs:{},df:0,f:{docs:{},df:0,a:{docs:{},df:0,l:{docs:{},df:0,s:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1}},df:1}}}}}}}}}}}},3:{docs:{},df:0,0:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1}},df:1}},5:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1}},df:1},6:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:2.23606797749979}},df:1},8:{docs:{},df:0,".":{docs:{},df:0,7:{docs:{},df:0,4:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1}},df:1}}}},9:{docs:{},df:0,5:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1}},df:1}}},2:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:6,"'":{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1.7320508075688772}},df:1},".":{docs:{},df:0,0:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951}},df:1},1:{docs:{},df:0,6:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1}},df:1}}},0:{docs:{},df:0,0:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1,0:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:1}},1:{docs:{},df:0,4:{docs:{"https://breakbuild.dev/":{tf:1}},df:1},8:{docs:{"https://breakbuild.dev/":{tf:1}},df:1}},2:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1}},df:1,1:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1}},df:1}},3:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1}},df:1},4:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1}},df:1}},5:{docs:{},df:0,5:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:1}},7:{docs:{},df:0,k:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:1}},d:{docs:{"https://breakbuild.dev/devlog/motivation/":{tf:1}},df:1},k:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:1}},3:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:3.4641016151377544},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:4},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:2}},df:8,".":{docs:{},df:0,0:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.4142135623730951}},df:1},3:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:2.23606797749979}},df:4}},0:{docs:{"https://breakbuild.dev/":{tf:1}},df:1,0:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1}},df:1}},2:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:2},d:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:2},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1}},df:5}},4:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:2},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.7320508075688772}},df:8,".":{docs:{},df:0,1:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:1},3:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:2.449489742783178},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:2}},df:5,0:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1}},df:1}},4:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:1},5:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.7320508075688772}},df:2},6:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.4142135623730951}},df:2}},0:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1},3:{docs:{},df:0,0:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.7320508075688772}},df:1}},8:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1}},df:1},t:{docs:{},df:0,h:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1}},df:1}},x:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:1}},5:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1}},df:2,".":{docs:{},df:0,1:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:1}},4:{docs:{},df:0,".":{docs:{},df:0,7:{docs:{},df:0,1:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1}},df:1}}}}},6:{docs:{},df:0,3:{docs:{},df:0,9:{docs:{},df:0,k:{docs:{},df:0,b:{docs:{},df:0,7:{docs:{},df:0,".":{docs:{},df:0,6:{docs:{},df:0,"µ":{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:1}}}}}}}}},7:{docs:{},df:0,5:{docs:{},df:0,4:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:1},5:{docs:{},df:0,k:{docs:{},df:0,b:{docs:{},df:0,1:{docs:{},df:0,".":{docs:{},df:0,6:{docs:{},df:0,m:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:1}}}}}}}},6:{docs:{},df:0,8:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}},9:{docs:{},df:0,2:{docs:{},df:0,6:{docs:{},df:0,0:{docs:{},df:0,0:{docs:{},df:0,3:{docs:{},df:0,4:{docs:{},df:0,9:{docs:{"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1}},df:1}}}}}}}}},8:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:1,0:{docs:{},df:0,0:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:1}}},9:{docs:{},df:0,0:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:1}},_:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:2.449489742783178},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.4142135623730951}},df:6,l:{docs:{},df:0,e:{docs:{},df:0,n:{docs:{},df:0,g:{docs:{},df:0,t:{docs:{},df:0,h:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:1}}}}}},u:{docs:{},df:0,s:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{},df:0,_:{docs:{},df:0,p:{docs:{},df:0,a:{docs:{},df:0,r:{docs:{},df:0,a:{docs:{},df:0,m:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:1}}}}}}}}}}},a:{docs:{},df:0,1:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1},2:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1},b:{docs:{},df:0,a:{docs:{},df:0,n:{docs:{},df:0,d:{docs:{},df:0,o:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:2}}}}},i:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1,l:{docs:{"https://breakbuild.dev/devlog/renderer/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1}},df:3}},o:{docs:{},df:0,v:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.4142135623730951}},df:5}},r:{docs:{},df:0,i:{docs:{},df:0,d:{docs:{},df:0,g:{docs:{"https://breakbuild.dev/":{tf:1}},df:1}}}},s:{docs:{},df:0,o:{docs:{},df:0,l:{docs:{},df:0,u:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}},t:{docs:{},df:0,r:{docs:{},df:0,a:{docs:{},df:0,c:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/renderer/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/chapter/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:2.8284271247461903},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:2},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:11}}}}}},u:{docs:{},df:0,s:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1}},df:1}}},c:{docs:{},df:0,c:{docs:{},df:0,e:{docs:{},df:0,p:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1.7320508075688772},"https://breakbuild.dev/support/":{tf:1}},df:5}},s:{docs:{},df:0,s:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:2}},df:4,'"':{docs:{},df:0,"(":{docs:{},df:0,d:{docs:{},df:0,s:{docs:{},df:0,a:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:1}}}}}}}},i:{docs:{},df:0,d:{docs:{},df:0,e:{docs:{},df:0,n:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:4}}}}},o:{docs:{},df:0,r:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:1}}},u:{docs:{},df:0,m:{docs:{},df:0,u:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/devlog/motivation/":{tf:1}},df:1}}},r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1}},df:2}}},t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1}},df:1,i:{docs:{},df:0,o:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:2,":":{docs:{},df:0,":":{docs:{},df:0,p:{docs:{},df:0,r:{docs:{},df:0,e:{docs:{},df:0,s:{docs:{},df:0,s:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1.4142135623730951}},df:1}}}}}}}}},v:{docs:{"https://breakbuild.dev/devlog/motivation/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.4142135623730951}},df:3}},u:{docs:{},df:0,a:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/":{tf:1},"https://breakbuild.dev/blog/my-year-with-rust/":{tf:5},"https://breakbuild.dev/devlog/motivation/":{tf:1},"https://breakbuild.dev/devlog/renderer/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:2.449489742783178},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:2},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:2},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:4.242640687119285},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:2.449489742783178},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:2},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:2.23606797749979}},df:15}}}}},d:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.6457513110645907},"https://breakbuild.dev/devlog/motivation/":{tf:1},"https://breakbuild.dev/devlog/renderer/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:2},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.7320508075688772},"https://breakbuild.dev/support/":{tf:1}},df:12,a:{docs:{},df:0,p:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951}},df:1}}},d:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.8284271247461903},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:2},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:2},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:4.47213595499958},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:2.449489742783178}},df:11,i:{docs:{},df:0,c:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/":{tf:1}},df:1}},t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:7,i:{docs:{},df:0,o:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:2}}}}},r:{docs:{},df:0,e:{docs:{},df:0,s:{docs:{},df:0,s:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:2}}}}},j:{docs:{},df:0,u:{docs:{},df:0,s:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:5}}}},m:{docs:{},df:0,i:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951}},df:1}}},v:{docs:{},df:0,a:{docs:{},df:0,n:{docs:{},df:0,c:{docs:{"https://breakbuild.dev/devlog/motivation/":{tf:1},"https://breakbuild.dev/devlog/renderer/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1}},df:4},t:{docs:{},df:0,a:{docs:{},df:0,g:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:3}}}}},i:{docs:{},df:0,c:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:1},s:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}},e:{docs:{},df:0,s:{docs:{},df:0,t:{docs:{},df:0,h:{docs:{},df:0,e:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:2}}}}}},f:{docs:{},df:0,f:{docs:{},df:0,e:{docs:{},df:0,c:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1}},df:2}}},i:{docs:{},df:0,l:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/support/":{tf:1}},df:1}}}},o:{docs:{},df:0,r:{docs:{},df:0,e:{docs:{},df:0,m:{docs:{},df:0,e:{docs:{},df:0,n:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1}},df:3}}}}}}},r:{docs:{},df:0,a:{docs:{},df:0,i:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951}},df:1}}}},t:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{},df:0,w:{docs:{},df:0,a:{docs:{},df:0,r:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:3}}}}}}}},g:{docs:{},df:0,a:{docs:{},df:0,i:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/motivation/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:2},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1}},df:9,"(":{docs:{},df:0,u:{docs:{},df:0,n:{docs:{},df:0,l:{docs:{},df:0,e:{docs:{},df:0,s:{docs:{},df:0,s:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1}},df:1}}}}}}},s:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/":{tf:1},"https://breakbuild.dev/devlog/":{tf:1}},df:2}}}}},e:{docs:{},df:0,n:{docs:{},df:0,d:{docs:{},df:0,a:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:1}}}},g:{docs:{},df:0,r:{docs:{},df:0,e:{docs:{},df:0,s:{docs:{},df:0,s:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}},n:{docs:{},df:0,o:{docs:{},df:0,s:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:2}}}},o:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/motivation/":{tf:1}},df:2},r:{docs:{},df:0,e:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:2,e:{docs:{},df:0,m:{docs:{},df:0,e:{docs:{},df:0,n:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}}}},i:{docs:{},df:0,m:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:1},n:{docs:{},df:0,"'":{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}},l:{docs:{},df:0,b:{docs:{},df:0,e:{docs:{},df:0,i:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:2}}}},e:{docs:{},df:0,r:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:1}}},i:{docs:{},df:0,a:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:1,s:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}},g:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1}},df:1}}},l:{docs:{},df:0,e:{docs:{},df:0,v:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}},o:{docs:{},df:0,c:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1}},df:3},w:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.7320508075688772}},df:10,"(":{docs:{},df:0,c:{docs:{},df:0,l:{docs:{},df:0,i:{docs:{},df:0,p:{docs:{},df:0,p:{docs:{},df:0,y:{docs:{},df:0,":":{docs:{},df:0,":":{docs:{},df:0,a:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.4142135623730951}},df:1}},m:{docs:{},df:0,i:{docs:{},df:0,s:{docs:{},df:0,s:{docs:{},df:0,i:{docs:{},df:0,n:{docs:{},df:0,g:{docs:{},df:0,_:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{},df:0,r:{docs:{},df:0,o:{docs:{},df:0,r:{docs:{},df:0,s:{docs:{},df:0,_:{docs:{},df:0,d:{docs:{},df:0,o:{docs:{},df:0,c:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:1}}}}}}}}}}}}}}}}}},n:{docs:{},df:0,u:{docs:{},df:0,r:{docs:{},df:0,s:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:1}}}}}}},p:{docs:{},df:0,e:{docs:{},df:0,d:{docs:{},df:0,a:{docs:{},df:0,n:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:1}}}}}}}}}}}}}}}}}},o:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772}},df:1,g:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}},p:{docs:{},df:0,h:{docs:{},df:0,a:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:2.6457513110645907},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.7320508075688772}},df:3,_:{docs:{},df:0,b:{docs:{},df:0,i:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.4142135623730951}},df:4}}}}}}},r:{docs:{},df:0,e:{docs:{},df:0,a:{docs:{},df:0,d:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:7}}}}},t:{docs:{},df:0,_:{docs:{},df:0,k:{docs:{},df:0,e:{docs:{},df:0,y:{docs:{},df:0,_:{docs:{},df:0,a:{docs:{},df:0,r:{docs:{},df:0,g:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}}}},e:{docs:{},df:0,r:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/":{tf:1},"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2},"https://breakbuild.dev/devlog/motivation/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.7320508075688772}},df:10}}},o:{docs:{},df:0,g:{docs:{},df:0,e:{docs:{},df:0,t:{docs:{},df:0,h:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:3}}}}}},w:{docs:{},df:0,a:{docs:{},df:0,y:{docs:{"https://breakbuild.dev/":{tf:1},"https://breakbuild.dev/blog/my-year-with-rust/":{tf:3.3166247903554},"https://breakbuild.dev/devlog/motivation/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:8}}}},m:{docs:{},df:0,a:{docs:{},df:0,z:{docs:{"https://breakbuild.dev/":{tf:1},"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2},"https://breakbuild.dev/devlog/renderer/hello_triangle/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:9}},o:{docs:{},df:0,n:{docs:{},df:0,g:{docs:{},df:0,s:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}},u:{docs:{},df:0,n:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1}},df:2}}}},p:{docs:{"https://breakbuild.dev/":{tf:1},"https://breakbuild.dev/support/":{tf:1}},df:2,";":{docs:{},df:0,"&":{docs:{},df:0,a:{docs:{},df:0,m:{docs:{},df:0,p:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:1}}}},"'":{docs:{},df:0,s:{docs:{},df:0,t:{docs:{},df:0,a:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:2}},df:3}}}}},"[":{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1}},df:2},u:{docs:{},df:0,8:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1}},df:1}}},b:{docs:{},df:0,u:{docs:{},df:0,f:{docs:{},df:0,f:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1}},df:1}}}},m:{docs:{},df:0,u:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.8284271247461903},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:2},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:9}}},r:{docs:{},df:0,e:{docs:{},df:0,n:{docs:{},df:0,d:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{},df:0,_:{docs:{},df:0,t:{docs:{},df:0,a:{docs:{},df:0,r:{docs:{},df:0,g:{docs:{},df:0,e:{docs:{},df:0,t:{docs:{},df:0,":":{docs:{},df:0,":":{docs:{},df:0,r:{docs:{},df:0,e:{docs:{},df:0,n:{docs:{},df:0,d:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{},df:0,t:{docs:{},df:0,a:{docs:{},df:0,r:{docs:{},df:0,g:{docs:{},df:0,e:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.4142135623730951}},df:1}}}}}}}}}}}}}}}}}}}}},t:{docs:{},df:0,a:{docs:{},df:0,r:{docs:{},df:0,g:{docs:{},df:0,e:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:1}}}}}}}}}}}},s:{docs:{},df:0,e:{docs:{},df:0,l:{docs:{},df:0,f:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1,".":{docs:{},df:0,d:{docs:{},df:0,a:{docs:{},df:0,t:{docs:{},df:0,a:{docs:{},df:0,"[":{docs:{},df:0,s:{docs:{},df:0,e:{docs:{},df:0,l:{docs:{},df:0,f:{docs:{},df:0,".":{docs:{},df:0,d:{docs:{},df:0,a:{docs:{},df:0,t:{docs:{},df:0,a:{docs:{},df:0,".":{docs:{},df:0,l:{docs:{},df:0,e:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}}}}}}}}}}}}}}}}}},t:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:2}},df:2,"'":{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:1}}}},w:{docs:{},df:0,i:{docs:{},df:0,n:{docs:{},df:0,d:{docs:{},df:0,o:{docs:{},df:0,w:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.4142135623730951}},df:4}}}}}}}}},n:{docs:{},df:0,a:{docs:{},df:0,l:{docs:{},df:0,y:{docs:{},df:0,z:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}},d:{docs:{},df:0,"/":{docs:{},df:0,o:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:2}}}},g:{docs:{},df:0,r:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1}},df:1}}},i:{docs:{},df:0,m:{docs:{"https://breakbuild.dev/devlog/renderer/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1}},df:2}},n:{docs:{},df:0,o:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1},u:{docs:{},df:0,n:{docs:{},df:0,c:{docs:{"https://breakbuild.dev/devlog/motivation/":{tf:1}},df:1}}},y:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1}},df:3}}},o:{docs:{},df:0,t:{docs:{},df:0,h:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:3.3166247903554},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.7320508075688772}},df:9}}},s:{docs:{},df:0,w:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1}},df:2}}}},y:{docs:{},df:0,h:{docs:{},df:0,o:{docs:{},df:0,w:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1.4142135623730951}},df:2,"'":{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:1},":":{docs:{},df:0,":":{docs:{},df:0,e:{docs:{},df:0,r:{docs:{},df:0,r:{docs:{},df:0,o:{docs:{},df:0,r:{docs:{},df:0,"&":{docs:{},df:0,g:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1}},df:1}}}}}}}},r:{docs:{},df:0,e:{docs:{},df:0,s:{docs:{},df:0,u:{docs:{},df:0,l:{docs:{},df:0,t:{docs:{},df:0,"&":{docs:{},df:0,l:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1}},df:1,";":{docs:{},df:0,"(":{docs:{},df:0,")":{docs:{},df:0,"&":{docs:{},df:0,g:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1.4142135623730951}},df:1}}}}}}}}}}}}}}}}}}}},m:{docs:{},df:0,o:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.449489742783178},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1}},df:4}}},o:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:2}},t:{docs:{},df:0,h:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:2},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1},"https://breakbuild.dev/support/":{tf:1}},df:8}},w:{docs:{},df:0,a:{docs:{},df:0,y:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:7}},h:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:1}}}}}},p:{docs:{},df:0,a:{docs:{},df:0,r:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}},i:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:2}},df:8,"'":{docs:{"https://breakbuild.dev/devlog/renderer/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:3}},p:{docs:{},df:0,e:{docs:{},df:0,a:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1}},df:1}}},l:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:1,i:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:3,c:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:2}}},r:{docs:{},df:0,e:{docs:{},df:0,c:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1},"https://breakbuild.dev/support/":{tf:1}},df:3}}},o:{docs:{},df:0,a:{docs:{},df:0,c:{docs:{},df:0,h:{docs:{"https://breakbuild.dev/":{tf:1.7320508075688772},"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:4,b:{docs:{},df:0,u:{docs:{},df:0,i:{docs:{},df:0,l:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:1}}}}}}}}}}}},r:{docs:{},df:0,b:{docs:{},df:0,_:{docs:{},df:0,d:{docs:{},df:0,e:{docs:{},df:0,b:{docs:{},df:0,u:{docs:{},df:0,g:{docs:{},df:0,_:{docs:{},df:0,o:{docs:{},df:0,u:{docs:{},df:0,t:{docs:{},df:0,p:{docs:{},df:0,u:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:1}}}}}}}}}}}}},i:{docs:{},df:0,t:{docs:{},df:0,r:{docs:{},df:0,a:{docs:{},df:0,r:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.7320508075688772}},df:2}}}}}}},c:{docs:{},df:0,h:{docs:{"https://breakbuild.dev/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1}},df:3,i:{docs:{},df:0,t:{docs:{},df:0,e:{docs:{},df:0,c:{docs:{},df:0,t:{docs:{},df:0,u:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1}},df:2}}}}}},v:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1}},df:2}}}},e:{docs:{},df:0,a:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.4142135623730951}},df:1},n:{docs:{},df:0,"'":{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1}},df:1}}}},g:{docs:{"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1}},df:1,u:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.6457513110645907}},df:1,a:{docs:{},df:0,b:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:3}}},m:{docs:{},df:0,e:{docs:{},df:0,n:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/motivation/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1.7320508075688772}},df:10}}}}}},m:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1}},df:1},o:{docs:{},df:0,u:{docs:{},df:0,n:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.8284271247461903},"https://breakbuild.dev/devlog/motivation/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:2},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.4142135623730951}},df:8}}}},r:{docs:{},df:0,a:{docs:{},df:0,y:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:5,_:{docs:{},df:0,b:{docs:{},df:0,u:{docs:{},df:0,f:{docs:{},df:0,f:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1}},df:1}}}}}}},i:{docs:{},df:0,v:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}},t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:2,i:{docs:{},df:0,c:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/blog/":{tf:1},"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951}},df:2}},f:{docs:{},df:0,a:{docs:{},df:0,c:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}},s:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1}},df:1}}}}},s:{docs:{},df:0,_:{docs:{},df:0,c:{docs:{},df:0,h:{docs:{},df:0,u:{docs:{},df:0,n:{docs:{},df:0,k:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}},r:{docs:{},df:0,g:{docs:{},df:0,b:{docs:{},df:0,"(":{docs:{},df:0,"&":{docs:{},df:0,a:{docs:{},df:0,m:{docs:{},df:0,p:{docs:{},df:0,";":{docs:{},df:0,s:{docs:{},df:0,e:{docs:{},df:0,l:{docs:{},df:0,f:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:1}}}}}}}}}},a:{docs:{},df:0,"(":{docs:{},df:0,"&":{docs:{},df:0,a:{docs:{},df:0,m:{docs:{},df:0,p:{docs:{},df:0,";":{docs:{},df:0,s:{docs:{},df:0,e:{docs:{},df:0,l:{docs:{},df:0,f:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:1}}}}}}}}}}}}}}},i:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951}},df:1}},k:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772},"https://breakbuild.dev/support/":{tf:1}},df:2},p:{docs:{},df:0,e:{docs:{},df:0,c:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}},i:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/motivation/":{tf:1}},df:1}}},s:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{},df:0,t:{docs:{},df:0,s:{docs:{},df:0,"(":{docs:{},df:0,w:{docs:{},df:0,i:{docs:{},df:0,t:{docs:{},df:0,h:{docs:{},df:0,o:{docs:{},df:0,u:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}}}}}}},t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:4}},i:{docs:{},df:0,s:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/":{tf:1}},df:1}}},o:{docs:{},df:0,c:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.4142135623730951}},df:3}}},u:{docs:{},df:0,m:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:3,p:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:2}}}}},y:{docs:{},df:0,n:{docs:{},df:0,c:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951}},df:1,h:{docs:{},df:0,r:{docs:{},df:0,o:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1}},df:1}}}}}}}},t:{docs:{},df:0,t:{docs:{},df:0,a:{docs:{},df:0,c:{docs:{},df:0,h:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1}},df:1}}},e:{docs:{},df:0,n:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1}},df:2}}},r:{docs:{},df:0,a:{docs:{},df:0,c:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}},i:{docs:{},df:0,b:{docs:{},df:0,u:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:3.1622776601683795},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:6.164414002968976},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.4142135623730951}},df:5,e:{docs:{},df:0,"(":{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1}},df:1,l:{docs:{},df:0,i:{docs:{},df:0,k:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1}},df:1}}}}}}}}}}}},u:{docs:{},df:0,d:{docs:{},df:0,i:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}},t:{docs:{},df:0,o:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1,m:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:1,a:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:6}}}}}},v:{docs:{},df:0,a:{docs:{},df:0,i:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/devlog/motivation/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:4}}},e:{docs:{},df:0,r:{docs:{},df:0,a:{docs:{},df:0,g:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:1}}}},o:{docs:{},df:0,i:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/motivation/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:8}}}},w:{docs:{},df:0,a:{docs:{},df:0,y:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/motivation/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:6}},f:{docs:{},df:0,u:{docs:{},df:0,l:{docs:{},df:0,l:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1}},df:1}}}}},k:{docs:{},df:0,w:{docs:{},df:0,a:{docs:{},df:0,r:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1}},df:1,l:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1}},df:1}}}}}}}},x:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1.7320508075688772}},df:1,i:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1.4142135623730951}},df:1}}},b:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:3},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:2.6457513110645907}},df:3,'"':{docs:{},df:0,s:{docs:{},df:0,o:{docs:{},df:0,u:{docs:{},df:0,r:{docs:{},df:0,c:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1}},df:1}}}}}},1:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1},2:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1},a:{docs:{},df:0,c:{docs:{},df:0,k:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.6457513110645907},"https://breakbuild.dev/devlog/motivation/":{tf:2},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.4142135623730951}},df:8,e:{docs:{},df:0,n:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:2.449489742783178},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:2}},df:6}}},g:{docs:{},df:0,r:{docs:{},df:0,o:{docs:{},df:0,u:{docs:{},df:0,n:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:4}}}}}},l:{docs:{},df:0,a:{docs:{},df:0,s:{docs:{},df:0,h:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}},d:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:4.242640687119285},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1}},df:2,_:{docs:{},df:0,g:{docs:{},df:0,e:{docs:{},df:0,n:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{},df:0,i:{docs:{},df:0,c:{docs:{},df:0,"&":{docs:{},df:0,l:{docs:{},df:0,t:{docs:{},df:0,";":{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}}}}}}}}}},l:{docs:{},df:0,a:{docs:{},df:0,n:{docs:{},df:0,c:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}},n:{docs:{},df:0,i:{docs:{},df:0,s:{docs:{},df:0,h:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:1}}}},r:{docs:{},df:0,"(":{docs:{},df:0,"&":{docs:{},df:0,a:{docs:{},df:0,m:{docs:{},df:0,p:{docs:{},df:0,";":{docs:{},df:0,s:{docs:{},df:0,e:{docs:{},df:0,l:{docs:{},df:0,f:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772}},df:1}}}}}}}}}},e:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:2}},s:{docs:{},df:0,e:{docs:{"https://breakbuild.dev/":{tf:1},"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.4142135623730951}},df:9,l:{docs:{},df:0,i:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}},h:{docs:{"https://breakbuild.dev/devlog/motivation/":{tf:1}},df:1},i:{docs:{},df:0,c:{docs:{"https://breakbuild.dev/":{tf:1},"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.6457513110645907},"https://breakbuild.dev/devlog/":{tf:1},"https://breakbuild.dev/devlog/renderer/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:2},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:2},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.4142135623730951}},df:11}},t:{docs:{},df:0,i:{docs:{},df:0,o:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/devlog/motivation/":{tf:1}},df:1}}}}}},e:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:4.123105625617661},"https://breakbuild.dev/devlog/motivation/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:2},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:7,a:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:2,d:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/motivation/":{tf:1}},df:2}},u:{docs:{},df:0,t:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1}},df:2}}}},c:{docs:{},df:0,a:{docs:{},df:0,m:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}},o:{docs:{},df:0,m:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.6457513110645907},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:4}}},f:{docs:{},df:0,o:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2},"https://breakbuild.dev/devlog/renderer/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:2.449489742783178},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:2},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:2},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:2.449489742783178}},df:14}}},g:{docs:{},df:0,i:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:3,n:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772}},df:1}}}},h:{docs:{},df:0,a:{docs:{},df:0,v:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:1,i:{docs:{},df:0,o:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:1,"(":{docs:{},df:0,m:{docs:{},df:0,i:{docs:{},df:0,r:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}},w:{docs:{},df:0,i:{docs:{},df:0,t:{docs:{},df:0,h:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}},u:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:1}}}}}},i:{docs:{},df:0,n:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/":{tf:1},"https://breakbuild.dev/devlog/motivation/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1},"https://breakbuild.dev/support/":{tf:1}},df:8}}},o:{docs:{},df:0,l:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1}},df:1}}}},l:{docs:{},df:0,o:{docs:{},df:0,n:{docs:{},df:0,g:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:3}},w:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/support/":{tf:1.7320508075688772}},df:2}}},n:{docs:{},df:0,c:{docs:{},df:0,h:{docs:{},df:0,m:{docs:{},df:0,a:{docs:{},df:0,r:{docs:{},df:0,k:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}},d:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1},e:{docs:{},df:0,f:{docs:{},df:0,i:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1.4142135623730951}},df:4}}}}},s:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/motivation/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:7}},t:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:1,t:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/chapter/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:9}}},w:{docs:{},df:0,e:{docs:{},df:0,e:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:2.6457513110645907},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.4142135623730951}},df:6}}}}},v:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1}},df:1}},y:{docs:{},df:0,o:{docs:{},df:0,n:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2},"https://breakbuild.dev/devlog/renderer/":{tf:1}},df:2}}}}},i:{docs:{},df:0,g:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:2,g:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772}},df:1},s:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:3}}}}},k:{docs:{},df:0,e:{docs:{},df:0,s:{docs:{},df:0,h:{docs:{},df:0,e:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}},l:{docs:{},df:0,l:{docs:{},df:0,i:{docs:{},df:0,o:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2}},df:1}}}}},n:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:2,a:{docs:{},df:0,r:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:2.449489742783178}},df:4},y:{docs:{},df:0,"(":{docs:{},df:0,u:{docs:{},df:0,s:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}},d:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:3.605551275463989},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:2.8284271247461903},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:3.7416573867739413}},df:8,i:{docs:{},df:0,n:{docs:{},df:0,g:{docs:{},df:0,i:{docs:{},df:0,n:{docs:{},df:0,d:{docs:{},df:0,e:{docs:{},df:0,x:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1.7320508075688772}},df:1}}}}}}}},l:{docs:{},df:0,e:{docs:{},df:0,s:{docs:{},df:0,s:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:2.23606797749979}},df:2}}}}}},r:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1}},df:1}},t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:2.449489742783178},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.7320508075688772}},df:9,e:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1}},df:1},f:{docs:{},df:0,i:{docs:{},df:0,e:{docs:{},df:0,l:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:1}}}}},w:{docs:{},df:0,i:{docs:{},df:0,s:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1.4142135623730951}},df:1}}}}},l:{docs:{},df:0,a:{docs:{},df:0,c:{docs:{},df:0,k:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:3}},m:{docs:{},df:0,e:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}},n:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}},s:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/motivation/":{tf:1}},df:1}},z:{docs:{},df:0,i:{docs:{},df:0,n:{docs:{},df:0,g:{docs:{},df:0,l:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/devlog/motivation/":{tf:1}},df:1}}}}}}},e:{docs:{},df:0,n:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1}},df:1}}},i:{docs:{},df:0,n:{docs:{},df:0,d:{docs:{},df:0,l:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1}},df:1}}}},s:{docs:{},df:0,s:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/motivation/":{tf:1}},df:2}}},o:{docs:{},df:0,a:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:3}},b:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:2},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1}},df:3},c:{docs:{},df:0,k:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.4142135623730951}},df:4}},g:{docs:{"https://breakbuild.dev/":{tf:1},"https://breakbuild.dev/blog/":{tf:1},"https://breakbuild.dev/support/":{tf:1}},df:3},w:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}},u:{docs:{},df:0,e:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:2.6457513110645907}},df:4}}},o:{docs:{},df:0,i:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/motivation/":{tf:1}},df:2,e:{docs:{},df:0,r:{docs:{},df:0,p:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:3}}}}}},o:{docs:{},df:0,k:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1}},df:3},l:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.449489742783178}},df:1},m:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:2},s:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}},r:{docs:{},df:0,d:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1}},df:1}}},e:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:3},i:{docs:{},df:0,n:{docs:{},df:0,g:{docs:{},df:0,l:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:1}}}}},r:{docs:{},df:0,o:{docs:{},df:0,w:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:6.164414002968976},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1.7320508075688772}},df:2}}}},t:{docs:{},df:0,h:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.4142135623730951}},df:5},t:{docs:{},df:0,o:{docs:{},df:0,m:{docs:{"https://breakbuild.dev/":{tf:1},"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:2},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:2},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1}},df:8}}}},u:{docs:{},df:0,n:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.4142135623730951}},df:7}}},x:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1},y:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}},r:{docs:{},df:0,a:{docs:{},df:0,n:{docs:{},df:0,c:{docs:{},df:0,h:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}},e:{docs:{},df:0,a:{docs:{},df:0,k:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.8284271247461903}},df:1}},v:{docs:{},df:0,i:{docs:{},df:0,t:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}},i:{docs:{},df:0,d:{docs:{},df:0,g:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951}},df:1}},g:{docs:{},df:0,h:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:1}}},n:{docs:{},df:0,g:{docs:{"https://breakbuild.dev/devlog/motivation/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:2}}},o:{docs:{},df:0,w:{docs:{},df:0,s:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:1,i:{docs:{},df:0,n:{docs:{},df:0,o:{docs:{"https://breakbuild.dev/devlog/motivation/":{tf:1.4142135623730951}},df:1}}}}}}}},u:{docs:{},df:0,t:{docs:{},df:0,a:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}},t:{docs:{},df:0,w:{docs:{"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1}},df:1}},u:{docs:{},df:0,b:{docs:{},df:0,b:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1}},df:2}}},c:{docs:{},df:0,k:{docs:{},df:0,e:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:1}}}},f:{docs:{},df:0,f:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:6.164414002968976},"https://breakbuild.dev/devlog/renderer/hello_triangle/chapter/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:2.6457513110645907},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:5.916079783099616},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:2}},df:10,"(":{docs:{},df:0,n:{docs:{},df:0,o:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1}},df:1}}},"=":{docs:{},df:0,g:{docs:{},df:0,l:{docs:{},df:0,b:{docs:{},df:0,u:{docs:{},df:0,f:{docs:{},df:0,f:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/chapter/":{tf:1}},df:1}}}}}}},_:{docs:{},df:0,c:{docs:{},df:0,r:{docs:{},df:0,e:{docs:{},df:0,a:{docs:{},df:0,t:{docs:{},df:0,e:{docs:{},df:0,_:{docs:{},df:0,v:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{},df:0,t:{docs:{},df:0,e:{docs:{},df:0,x:{docs:{},df:0,_:{docs:{},df:0,b:{docs:{},df:0,u:{docs:{},df:0,f:{docs:{},df:0,f:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{},df:0,_:{docs:{},df:0,f:{docs:{},df:0,r:{docs:{},df:0,o:{docs:{},df:0,m:{docs:{},df:0,_:{docs:{},df:0,s:{docs:{},df:0,l:{docs:{},df:0,i:{docs:{},df:0,c:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},s:{docs:{},df:0,"(":{docs:{},df:0,e:{docs:{},df:0,".":{docs:{},df:0,g:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:1}}}}}}}}},g:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1},i:{docs:{},df:0,l:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:3.3166247903554},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:2.6457513110645907},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:2.23606797749979}},df:5,".":{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:2}},df:1}},e:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951}},df:1}},s:{docs:{},df:0,"(":{docs:{},df:0,d:{docs:{},df:0,e:{docs:{},df:0,v:{docs:{"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1}},df:1}}}}}},t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1}},df:2}}},l:{docs:{},df:0,l:{docs:{},df:0,e:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1}},df:1}}}},m:{docs:{},df:0,m:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:2}}}},n:{docs:{},df:0,c:{docs:{},df:0,h:{docs:{"https://breakbuild.dev/blog/":{tf:1},"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:4}},d:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1}},df:2}}},r:{docs:{},df:0,d:{docs:{},df:0,e:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:1}}}},s:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/devlog/motivation/":{tf:1}},df:1}},t:{docs:{},df:0,t:{docs:{},df:0,o:{docs:{},df:0,n:{docs:{},df:0,_:{docs:{},df:0,a:{docs:{},df:0,r:{docs:{},df:0,g:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}}}},y:{docs:{},df:0,m:{docs:{},df:0,e:{docs:{},df:0,a:{docs:{},df:0,c:{docs:{},df:0,o:{docs:{},df:0,f:{docs:{},df:0,f:{docs:{},df:0,e:{docs:{"https://breakbuild.dev/support/":{tf:1}},df:1}}}}}}}}},z:{docs:{},df:0,z:{docs:{},df:0,w:{docs:{},df:0,o:{docs:{},df:0,r:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951}},df:1}}}}}}},y:{docs:{},df:0,p:{docs:{},df:0,a:{docs:{},df:0,s:{docs:{},df:0,s:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:1}}}},t:{docs:{},df:0,e:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:3.3166247903554}},df:3,_:{docs:{},df:0,o:{docs:{},df:0,f:{docs:{},df:0,f:{docs:{},df:0,s:{docs:{},df:0,e:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1}},df:1}}}}}}}}}}},c:{docs:{"https://breakbuild.dev/":{tf:1.4142135623730951},"https://breakbuild.dev/blog/my-year-with-rust/":{tf:3.7416573867739413},"https://breakbuild.dev/devlog/motivation/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:2},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:13,"(":{docs:{},df:0,a:{docs:{},df:0,n:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1}},df:1}}}},a:{docs:{},df:0,c:{docs:{"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1}},df:1,_:{docs:{},df:0,g:{docs:{},df:0,r:{docs:{},df:0,a:{docs:{},df:0,p:{docs:{},df:0,h:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1}},df:2,i:{docs:{},df:0,c:{docs:{},df:0,s:{docs:{},df:0,"/":{docs:{},df:0,c:{docs:{},df:0,a:{docs:{},df:0,r:{docs:{},df:0,g:{docs:{},df:0,o:{docs:{},df:0,".":{docs:{},df:0,t:{docs:{},df:0,o:{docs:{},df:0,m:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1}},df:3}}}}}}}}},o:{docs:{},df:0,n:{docs:{},df:0,t:{docs:{},df:0,e:{docs:{},df:0,s:{docs:{},df:0,t:{docs:{},df:0,"/":{docs:{},df:0,s:{docs:{},df:0,r:{docs:{},df:0,c:{docs:{},df:0,"/":{docs:{},df:0,o:{docs:{},df:0,p:{docs:{},df:0,e:{docs:{},df:0,n:{docs:{},df:0,g:{docs:{},df:0,l:{docs:{},df:0,".":{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1}},df:1}}}}}}}}}}}}}}},x:{docs:{},df:0,t:{docs:{},df:0,"/":{docs:{},df:0,c:{docs:{},df:0,a:{docs:{},df:0,r:{docs:{},df:0,g:{docs:{},df:0,o:{docs:{},df:0,".":{docs:{},df:0,t:{docs:{},df:0,o:{docs:{},df:0,m:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1}},df:3}}}}}}}}}},e:{docs:{},df:0,x:{docs:{},df:0,a:{docs:{},df:0,m:{docs:{},df:0,p:{docs:{},df:0,l:{docs:{},df:0,e:{docs:{},df:0,s:{docs:{},df:0,"/":{docs:{},df:0,p:{docs:{},df:0,l:{docs:{},df:0,a:{docs:{},df:0,y:{docs:{},df:0,g:{docs:{},df:0,r:{docs:{},df:0,o:{docs:{},df:0,u:{docs:{},df:0,n:{docs:{},df:0,d:{docs:{},df:0,".":{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.4142135623730951}},df:6}}}}}}}}}}}}}}}}}}}}},s:{docs:{},df:0,r:{docs:{},df:0,c:{docs:{},df:0,"/":{docs:{},df:0,e:{docs:{},df:0,r:{docs:{},df:0,r:{docs:{},df:0,o:{docs:{},df:0,r:{docs:{},df:0,".":{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:1}}}}}}},g:{docs:{},df:0,l:{docs:{},df:0,4:{docs:{},df:0,3:{docs:{},df:0,_:{docs:{},df:0,c:{docs:{},df:0,o:{docs:{},df:0,r:{docs:{},df:0,e:{docs:{},df:0,".":{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:1}}}}}}}}}}},l:{docs:{},df:0,i:{docs:{},df:0,b:{docs:{},df:0,".":{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:3}}}}},o:{docs:{},df:0,p:{docs:{},df:0,e:{docs:{},df:0,n:{docs:{},df:0,g:{docs:{},df:0,l:{docs:{},df:0,".":{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.4142135623730951}},df:4}}}}}}}},r:{docs:{},df:0,e:{docs:{},df:0,n:{docs:{},df:0,d:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{},df:0,_:{docs:{},df:0,t:{docs:{},df:0,a:{docs:{},df:0,r:{docs:{},df:0,g:{docs:{},df:0,e:{docs:{},df:0,t:{docs:{},df:0,".":{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.4142135623730951}},df:1}}}}}}}}}}}}}}}}}}}}}}}}},r:{docs:{},df:0,e:{docs:{},df:0,"/":{docs:{},df:0,s:{docs:{},df:0,r:{docs:{},df:0,c:{docs:{},df:0,"/":{docs:{},df:0,l:{docs:{},df:0,i:{docs:{},df:0,b:{docs:{},df:0,".":{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:1}}}}}}}}}}}}}}}}}}}}}}}},a:{docs:{},df:0,t:{docs:{},df:0,u:{docs:{},df:0,i:{docs:{},df:0,d:{docs:{},df:0,a:{docs:{"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1}},df:1}}}}}},h:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:2}},l:{docs:{},df:0,c:{docs:{},df:0,u:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:2.23606797749979}},df:1}}},l:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.449489742783178},"https://breakbuild.dev/devlog/renderer/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:3},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:2},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:3},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:2.449489742783178},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:3.3166247903554},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:4},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:2},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:3}},df:14,"(":{docs:{},df:0,w:{docs:{},df:0,h:{docs:{},df:0,i:{docs:{},df:0,c:{docs:{},df:0,h:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:1}}}}}},b:{docs:{},df:0,a:{docs:{},df:0,c:{docs:{},df:0,k:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:2},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.4142135623730951}},df:4}}}},e:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.7320508075688772}},df:3}}}},m:{docs:{},df:0,e:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:2,r:{docs:{},df:0,a:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.4142135623730951}},df:3}}}},n:{docs:{},df:0,"'":{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.8284271247461903},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:7}},_:{docs:{},df:0,b:{docs:{},df:0,u:{docs:{},df:0,b:{docs:{},df:0,b:{docs:{},df:0,l:{docs:{},df:0,e:{docs:{},df:0,_:{docs:{},df:0,a:{docs:{},df:0,r:{docs:{},df:0,g:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}}}}}}},c:{docs:{},df:0,e:{docs:{},df:0,l:{docs:{},df:0,a:{docs:{},df:0,b:{docs:{},df:0,l:{docs:{},df:0,e:{docs:{},df:0,_:{docs:{},df:0,a:{docs:{},df:0,r:{docs:{},df:0,g:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}}}}}}},d:{docs:{},df:0,i:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:2}}},t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1},v:{docs:{},df:0,a:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.4142135623730951}},df:2}}},p:{docs:{},df:0,a:{docs:{},df:0,b:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:1}},c:{docs:{"https://breakbuild.dev/support/":{tf:1.4142135623730951}},df:1}}},r:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/":{tf:1},"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:2},e:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.8284271247461903},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/chapter/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.4142135623730951}},df:8},g:{docs:{},df:0,o:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.6457513110645907},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:2.449489742783178},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.4142135623730951}},df:6,".":{docs:{},df:0,l:{docs:{},df:0,o:{docs:{},df:0,c:{docs:{},df:0,k:{docs:{"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1}},df:1}}}},t:{docs:{},df:0,o:{docs:{},df:0,m:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:5}}}}},"/":{docs:{},df:0,c:{docs:{},df:0,o:{docs:{},df:0,n:{docs:{},df:0,f:{docs:{},df:0,i:{docs:{},df:0,g:{docs:{"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1}},df:1,".":{docs:{},df:0,t:{docs:{},df:0,o:{docs:{},df:0,m:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1}},df:1}}}}}}}}}}}}}},r:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}},t:{docs:{},df:0,o:{docs:{},df:0,o:{docs:{},df:0,n:{docs:{},df:0,s:{docs:{},df:0,"(":{docs:{},df:0,m:{docs:{},df:0,y:{docs:{},df:0,a:{docs:{},df:0,n:{docs:{},df:0,i:{docs:{},df:0,m:{docs:{},df:0,e:{docs:{},df:0,l:{docs:{},df:0,i:{docs:{},df:0,s:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/":{tf:1}},df:1}}}}}}}}}}}}}}}}}},s:{docs:{},df:0,e:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:4},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1},"https://breakbuild.dev/support/":{tf:1}},df:9},t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:2},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1.7320508075688772}},df:5}},t:{docs:{},df:0,c:{docs:{},df:0,h:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:2}}},u:{docs:{},df:0,g:{docs:{},df:0,h:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951}},df:1}}},s:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:3.4641016151377544},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:3}},v:{docs:{},df:0,e:{docs:{},df:0,a:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:2}}}}},e:{docs:{},df:0,m:{docs:{},df:0,e:{docs:{},df:0,n:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/motivation/":{tf:1}},df:1}}}},n:{docs:{},df:0,t:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1}},df:2}}}},r:{docs:{},df:0,t:{docs:{},df:0,a:{docs:{},df:0,i:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1},"https://breakbuild.dev/support/":{tf:1}},df:6}}}}}},h:{docs:{},df:0,a:{docs:{},df:0,i:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951}},df:1}},n:{docs:{},df:0,c:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:1},g:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:3.872983346207417},"https://breakbuild.dev/devlog/motivation/":{tf:1},"https://breakbuild.dev/devlog/renderer/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:2},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:2},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.7320508075688772}},df:13,e:{docs:{},df:0,"/":{docs:{},df:0,r:{docs:{},df:0,e:{docs:{},df:0,w:{docs:{},df:0,r:{docs:{},df:0,i:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:1}}}}}},y:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:1}},r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}},n:{docs:{},df:0,e:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:2},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1},"https://breakbuild.dev/support/":{tf:1.7320508075688772}},df:5}}}},p:{docs:{},df:0,t:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:2}},df:5}}}},r:{docs:{},df:0,a:{docs:{},df:0,c:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}},g:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1},m:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}},s:{docs:{},df:0,e:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/motivation/":{tf:1}},df:2}}},e:{docs:{},df:0,a:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1}},df:1}},c:{docs:{},df:0,k:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.449489742783178},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:2.8284271247461903},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1}},df:9,e:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:4}},df:1}}}},r:{docs:{},df:0,r:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}},o:{docs:{},df:0,i:{docs:{},df:0,c:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/motivation/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.4142135623730951}},df:3}}},u:{docs:{},df:0,n:{docs:{},df:0,k:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1,s:{docs:{},df:0,"(":{docs:{},df:0,4:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}},t:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:1}}}}}},r:{docs:{},df:0,c:{docs:{},df:0,h:{docs:{"https://breakbuild.dev/devlog/motivation/":{tf:1}},df:1}}}}},l:{docs:{},df:0,a:{docs:{},df:0,n:{docs:{},df:0,g:{docs:{"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1}},df:1}},r:{docs:{},df:0,i:{docs:{},df:0,f:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1}},df:2}},t:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}},s:{docs:{},df:0,h:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.4142135623730951}},df:2},s:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:2,i:{docs:{},df:0,c:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951}},df:1}}}}},e:{docs:{},df:0,a:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:6,e:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1}},df:5}},l:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}},r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:4.358898943540674},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:3.1622776601683795},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:2.23606797749979}},df:6,"&":{docs:{},df:0,g:{docs:{},df:0,t:{docs:{},df:0,";":{docs:{},df:0,"(":{docs:{},df:0,f:{docs:{},df:0,n:{docs:{},df:0,_:{docs:{},df:0,p:{docs:{},df:0,t:{docs:{},df:0,r:{docs:{},df:0,s:{docs:{},df:0,":":{docs:{},df:0,":":{docs:{},df:0,c:{docs:{},df:0,l:{docs:{},df:0,e:{docs:{},df:0,a:{docs:{},df:0,r:{docs:{},df:0,".":{docs:{},df:0,p:{docs:{},df:0,t:{docs:{},df:0,r:{docs:{},df:0,")":{docs:{},df:0,"(":{docs:{},df:0,b:{docs:{},df:0,i:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:1}}}}}}}}}}}}}}}}}}}}}}}}}}},l:{docs:{},df:0,t:{docs:{},df:0,";":{docs:{},df:0,c:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:1}}}}},"(":{docs:{},df:0,"&":{docs:{},df:0,a:{docs:{},df:0,m:{docs:{},df:0,p:{docs:{},df:0,";":{docs:{},df:0,m:{docs:{},df:0,u:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.7320508075688772}},df:1}}},s:{docs:{},df:0,e:{docs:{},df:0,l:{docs:{},df:0,f:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:1}}}}}}}}},b:{docs:{},df:0,i:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1.4142135623730951}},df:1}}}},_:{docs:{},df:0,c:{docs:{},df:0,o:{docs:{},df:0,l:{docs:{},df:0,o:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1.7320508075688772}},df:2}}}}}},c:{docs:{},df:0,o:{docs:{},df:0,l:{docs:{},df:0,o:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:2.23606797749979}},df:1,"&":{docs:{},df:0,g:{docs:{},df:0,t:{docs:{},df:0,";":{docs:{},df:0,"(":{docs:{},df:0,f:{docs:{},df:0,n:{docs:{},df:0,_:{docs:{},df:0,p:{docs:{},df:0,t:{docs:{},df:0,r:{docs:{},df:0,s:{docs:{},df:0,":":{docs:{},df:0,":":{docs:{},df:0,c:{docs:{},df:0,l:{docs:{},df:0,e:{docs:{},df:0,a:{docs:{},df:0,r:{docs:{},df:0,_:{docs:{},df:0,c:{docs:{},df:0,o:{docs:{},df:0,l:{docs:{},df:0,o:{docs:{},df:0,r:{docs:{},df:0,".":{docs:{},df:0,p:{docs:{},df:0,t:{docs:{},df:0,r:{docs:{},df:0,")":{docs:{},df:0,"(":{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},t:{docs:{},df:0,y:{docs:{},df:0,p:{docs:{},df:0,e:{docs:{},df:0,"&":{docs:{},df:0,g:{docs:{},df:0,t:{docs:{},df:0,";":{docs:{},df:0,"(":{docs:{},df:0,f:{docs:{},df:0,n:{docs:{},df:0,_:{docs:{},df:0,p:{docs:{},df:0,t:{docs:{},df:0,r:{docs:{},df:0,s:{docs:{},df:0,":":{docs:{},df:0,":":{docs:{},df:0,c:{docs:{},df:0,l:{docs:{},df:0,e:{docs:{},df:0,a:{docs:{},df:0,r:{docs:{},df:0,_:{docs:{},df:0,c:{docs:{},df:0,o:{docs:{},df:0,l:{docs:{},df:0,o:{docs:{},df:0,r:{docs:{},df:0,".":{docs:{},df:0,p:{docs:{},df:0,t:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},l:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:1}},t:{docs:{},df:0,y:{docs:{},df:0,p:{docs:{},df:0,e:{docs:{},df:0,"&":{docs:{},df:0,g:{docs:{},df:0,t:{docs:{},df:0,";":{docs:{},df:0,"(":{docs:{},df:0,f:{docs:{},df:0,n:{docs:{},df:0,_:{docs:{},df:0,p:{docs:{},df:0,t:{docs:{},df:0,r:{docs:{},df:0,s:{docs:{},df:0,":":{docs:{},df:0,":":{docs:{},df:0,c:{docs:{},df:0,l:{docs:{},df:0,e:{docs:{},df:0,a:{docs:{},df:0,r:{docs:{},df:0,".":{docs:{},df:0,p:{docs:{},df:0,t:{docs:{},df:0,r:{docs:{},df:0,")":{docs:{},df:0,"(":{docs:{},df:0,b:{docs:{},df:0,i:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},i:{docs:{},df:0,e:{docs:{},df:0,n:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/motivation/":{tf:1}},df:2,_:{docs:{},df:0,x:{docs:{},df:0,_:{docs:{},df:0,a:{docs:{},df:0,r:{docs:{},df:0,g:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}},y:{docs:{},df:0,_:{docs:{},df:0,a:{docs:{},df:0,r:{docs:{},df:0,g:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}}}}},p:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.7320508075688772}},df:1,p:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.4142135623730951}},df:4},y:{docs:{},df:0,"'":{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:1}}}}},o:{docs:{},df:0,n:{docs:{},df:0,e:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.4142135623730951}},df:1}},s:{docs:{},df:0,e:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1.4142135623730951}},df:4,r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/motivation/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:2.449489742783178}},df:3}},u:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:1}}}},u:{docs:{},df:0,e:{docs:{"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1}},df:1},s:{docs:{},df:0,t:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{},df:0,e:{docs:{},df:0,d:{docs:{},df:0,"/":{docs:{},df:0,t:{docs:{},df:0,i:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/devlog/renderer/":{tf:1}},df:1}}}}}}}}}},t:{docs:{},df:0,t:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:1}}}}}},m:{docs:{},df:0,a:{docs:{},df:0,k:{docs:{},df:0,e:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951}},df:1}}}},o:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1}},df:1,c:{docs:{},df:0,k:{docs:{},df:0,a:{docs:{},df:0,t:{docs:{},df:0,i:{docs:{},df:0,e:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1}},df:1}}},o:{docs:{},df:0,o:{docs:{"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1}},df:1}}}}}},d:{docs:{},df:0,e:{docs:{"https://breakbuild.dev/":{tf:1.4142135623730951},"https://breakbuild.dev/blog/my-year-with-rust/":{tf:6.557438524302},"https://breakbuild.dev/devlog/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:3},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/chapter/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:2},"https://breakbuild.dev/support/":{tf:1}},df:15,"(":{docs:{},df:0,n:{docs:{},df:0,a:{docs:{},df:0,m:{docs:{},df:0,e:{docs:{},df:0,"=":{docs:{},df:0,'"':{docs:{},df:0,c:{docs:{},df:0,a:{docs:{},df:0,c:{docs:{},df:0,_:{docs:{},df:0,g:{docs:{},df:0,r:{docs:{},df:0,a:{docs:{},df:0,p:{docs:{},df:0,h:{docs:{},df:0,i:{docs:{},df:0,c:{docs:{},df:0,s:{docs:{},df:0,"/":{docs:{},df:0,c:{docs:{},df:0,o:{docs:{},df:0,n:{docs:{},df:0,t:{docs:{},df:0,e:{docs:{},df:0,x:{docs:{},df:0,t:{docs:{},df:0,"/":{docs:{},df:0,e:{docs:{},df:0,x:{docs:{},df:0,a:{docs:{},df:0,m:{docs:{},df:0,p:{docs:{},df:0,l:{docs:{},df:0,e:{docs:{},df:0,s:{docs:{},df:0,"/":{docs:{},df:0,p:{docs:{},df:0,l:{docs:{},df:0,a:{docs:{},df:0,y:{docs:{},df:0,g:{docs:{},df:0,r:{docs:{},df:0,o:{docs:{},df:0,u:{docs:{},df:0,n:{docs:{},df:0,d:{docs:{},df:0,".":{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1}},df:1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},g:{docs:{},df:0,e:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:1}}}}},g:{docs:{},df:0,n:{docs:{},df:0,i:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}},i:{docs:{},df:0,n:{docs:{},df:0,c:{docs:{},df:0,i:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}},l:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1}},df:1},l:{docs:{},df:0,e:{docs:{},df:0,c:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}},o:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:2.449489742783178},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:5.830951894845301},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.7320508075688772}},df:8,".":{docs:{},df:0,1:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:1},2:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:1},3:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:1},a:{docs:{},df:0,s:{docs:{},df:0,_:{docs:{},df:0,r:{docs:{},df:0,g:{docs:{},df:0,b:{docs:{},df:0,a:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:1}}}}}}}},0:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1.4142135623730951}},df:1},1:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1.4142135623730951}},df:1},3:{docs:{},df:0,2:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:2.6457513110645907}},df:1,":":{docs:{},df:0,":":{docs:{},df:0,c:{docs:{},df:0,o:{docs:{},df:0,l:{docs:{},df:0,o:{docs:{},df:0,r:{docs:{},df:0,3:{docs:{},df:0,2:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:1}}}}}}}}}}},8:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:1},":":{docs:{},df:0,":":{docs:{},df:0,r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}},_:{docs:{},df:0,b:{docs:{},df:0,u:{docs:{},df:0,f:{docs:{},df:0,f:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{},df:0,_:{docs:{},df:0,b:{docs:{},df:0,i:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:2}}}}}}}}}}}}}},m:{docs:{},df:0,b:{docs:{},df:0,i:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1}},df:3}}},e:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:3.3166247903554},"https://breakbuild.dev/devlog/renderer/hello_triangle/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:10},f:{docs:{},df:0,o:{docs:{},df:0,r:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1}},df:2}}}},i:{docs:{},df:0,c:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}},m:{docs:{},df:0,a:{docs:{},df:0,n:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1}},df:3}}},e:{docs:{},df:0,n:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1}},df:2}},r:{docs:{},df:0,c:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/motivation/":{tf:1},"https://breakbuild.dev/support/":{tf:1}},df:3}}}},o:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.8284271247461903},"https://breakbuild.dev/devlog/renderer/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.4142135623730951}},df:8,l:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.7320508075688772}},df:2}}}},u:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.6457513110645907},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1}},df:2}}},p:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1,".":{docs:{},df:0,m:{docs:{},df:0,e:{docs:{},df:0,s:{docs:{},df:0,s:{docs:{},df:0,a:{docs:{},df:0,g:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}}},a:{docs:{},df:0,n:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951}},df:1}},r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:4},t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.4142135623730951}},df:6}},i:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:4},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:2},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:2},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1}},df:6}},l:{docs:{},df:0,a:{docs:{},df:0,i:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772}},df:1}}}},e:{docs:{},df:0,m:{docs:{},df:0,e:{docs:{},df:0,n:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1.7320508075688772}},df:1}}}},t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1}},df:4},x:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2}},df:1}},i:{docs:{},df:0,c:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1}},df:1}}},o:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:2.23606797749979}},df:3,e:{docs:{},df:0,n:{docs:{},df:0,t:{docs:{},df:0,s:{docs:{},df:0,"(":{docs:{},df:0,i:{docs:{},df:0,t:{docs:{},df:0,"'":{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1}},df:1}}},x:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1}},df:1}}}}}}},s:{docs:{},df:0,i:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2}},df:1}}}},u:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.4142135623730951}},df:1}}}},n:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1,c:{docs:{},df:0,e:{docs:{},df:0,p:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}},r:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}},i:{docs:{},df:0,s:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:1}},l:{docs:{},df:0,u:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1}},df:1},s:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:2}}},r:{docs:{},df:0,e:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1.4142135623730951}},df:3}}}},d:{docs:{},df:0,i:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:2,i:{docs:{},df:0,o:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:1}}}}}},f:{docs:{},df:0,i:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1},g:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1.7320508075688772}},df:2,u:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1}},df:2}}}},o:{docs:{},df:0,r:{docs:{},df:0,m:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1.4142135623730951}},df:1}}},u:{docs:{},df:0,s:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:2,i:{docs:{},df:0,n:{docs:{},df:0,g:{docs:{},df:0,l:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1}},df:1}}}}}}}},n:{docs:{},df:0,e:{docs:{},df:0,c:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:1}}}},q:{docs:{},df:0,u:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1}},df:1}}}},s:{docs:{},df:0,c:{docs:{},df:0,i:{docs:{},df:0,o:{docs:{},df:0,u:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}},i:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/":{tf:1},"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:5},s:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}},o:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:1}},t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:2.6457513110645907},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:3.872983346207417},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:3.7416573867739413}},df:9,_:{docs:{},df:0,f:{docs:{},df:0,n:{docs:{},df:0,_:{docs:{},df:0,f:{docs:{},df:0,l:{docs:{},df:0,o:{docs:{},df:0,a:{docs:{},df:0,t:{docs:{},df:0,i:{docs:{},df:0,n:{docs:{},df:0,g:{docs:{},df:0,_:{docs:{},df:0,p:{docs:{},df:0,o:{docs:{},df:0,i:{docs:{},df:0,n:{docs:{},df:0,t:{docs:{},df:0,_:{docs:{},df:0,a:{docs:{},df:0,r:{docs:{},df:0,i:{docs:{},df:0,t:{docs:{},df:0,h:{docs:{},df:0,m:{docs:{},df:0,e:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}}}}}}}}}}}}}}}}}}}}}}},a:{docs:{},df:0,n:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:2},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:2.8284271247461903}},df:5,"(":{docs:{},df:0,s:{docs:{},df:0,o:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}},l:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:4}},s:{docs:{},df:0,"(":{docs:{},df:0,w:{docs:{},df:0,h:{docs:{},df:0,i:{docs:{},df:0,c:{docs:{},df:0,h:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:1}}}}}}}}}},r:{docs:{},df:0,u:{docs:{},df:0,c:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:2,o:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:2}},df:2}}}}}}}},t:{docs:{},df:0,a:{docs:{},df:0,c:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/":{tf:1}},df:1}},i:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:2},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1}},df:7,e:{docs:{},df:0,r:{docs:{},df:0,"(":{docs:{},df:0,l:{docs:{},df:0,i:{docs:{},df:0,k:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}},".":{docs:{},df:0,g:{docs:{},df:0,e:{docs:{},df:0,t:{docs:{},df:0,"(":{docs:{},df:0,i:{docs:{},df:0,n:{docs:{},df:0,d:{docs:{},df:0,e:{docs:{},df:0,x:{docs:{},df:0,")":{docs:{},df:0,".":{docs:{},df:0,u:{docs:{},df:0,n:{docs:{},df:0,w:{docs:{},df:0,r:{docs:{},df:0,a:{docs:{},df:0,p:{docs:{},df:0,_:{docs:{},df:0,o:{docs:{},df:0,r:{docs:{},df:0,"(":{docs:{},df:0,d:{docs:{},df:0,e:{docs:{},df:0,f:{docs:{},df:0,a:{docs:{},df:0,u:{docs:{},df:0,l:{docs:{},df:0,t:{docs:{},df:0,_:{docs:{},df:0,v:{docs:{},df:0,a:{docs:{},df:0,l:{docs:{},df:0,u:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},e:{docs:{},df:0,n:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.4142135623730951},"https://breakbuild.dev/support/":{tf:1}},df:6}},x:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:4.123105625617661},"https://breakbuild.dev/devlog/renderer/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:4.358898943540674},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:4.58257569495584},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:5.916079783099616},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:5.5677643628300215},"https://breakbuild.dev/devlog/renderer/the_context/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:3.3166247903554},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:5.291502622129181}},df:15,'"':{docs:{},df:0,"(":{docs:{},df:0,o:{docs:{},df:0,u:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:1}}}}},"&":{docs:{},df:0,g:{docs:{},df:0,t:{docs:{},df:0,";":{docs:{},df:0,"(":{docs:{},df:0,"&":{docs:{},df:0,a:{docs:{},df:0,m:{docs:{},df:0,p:{docs:{},df:0,";":{docs:{},df:0,s:{docs:{},df:0,e:{docs:{},df:0,l:{docs:{},df:0,f:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:1}}}}}}}}}}}}},l:{docs:{},df:0,t:{docs:{},df:0,";":{docs:{},df:0,c:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1}},df:1,"&":{docs:{},df:0,g:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.7320508075688772}},df:3}}}}}}}},".":{docs:{},df:0,c:{docs:{},df:0,r:{docs:{},df:0,e:{docs:{},df:0,a:{docs:{},df:0,t:{docs:{},df:0,e:{docs:{},df:0,_:{docs:{},df:0,s:{docs:{},df:0,h:{docs:{},df:0,a:{docs:{},df:0,d:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{},df:0,"(":{docs:{},df:0,f:{docs:{},df:0,a:{docs:{},df:0,n:{docs:{},df:0,c:{docs:{},df:0,y:{docs:{},df:0,_:{docs:{},df:0,s:{docs:{},df:0,o:{docs:{},df:0,u:{docs:{},df:0,r:{docs:{},df:0,c:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}}}}}}}}}}}}}}}}}}}}},g:{docs:{},df:0,e:{docs:{},df:0,t:{docs:{},df:0,_:{docs:{},df:0,p:{docs:{},df:0,r:{docs:{},df:0,o:{docs:{},df:0,c:{docs:{},df:0,_:{docs:{},df:0,a:{docs:{},df:0,d:{docs:{},df:0,d:{docs:{},df:0,r:{docs:{},df:0,e:{docs:{},df:0,s:{docs:{},df:0,s:{docs:{},df:0,"(":{docs:{},df:0,'"':{docs:{},df:0,e:{docs:{},df:0,v:{docs:{},df:0,e:{docs:{},df:0,n:{docs:{},df:0,s:{docs:{},df:0,p:{docs:{},df:0,e:{docs:{},df:0,e:{docs:{},df:0,d:{docs:{},df:0,w:{docs:{},df:0,a:{docs:{},df:0,g:{docs:{},df:0,o:{docs:{},df:0,n:{docs:{},df:0,i:{docs:{},df:0,s:{docs:{},df:0,a:{docs:{},df:0,f:{docs:{},df:0,r:{docs:{},df:0,a:{docs:{},df:0,i:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:1}}}}}}}}}}}}}}}}}}}}}}},n:{docs:{},df:0,a:{docs:{},df:0,m:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1}},df:2}}},s:{docs:{},df:0,y:{docs:{},df:0,m:{docs:{},df:0,b:{docs:{},df:0,o:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.4142135623730951}},df:3}}}}}}}}}}}}}}}}}}},s:{docs:{},df:0,h:{docs:{},df:0,a:{docs:{},df:0,d:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{},df:0,_:{docs:{},df:0,m:{docs:{},df:0,u:{docs:{},df:0,t:{docs:{},df:0,"(":{docs:{},df:0,f:{docs:{},df:0,a:{docs:{},df:0,n:{docs:{},df:0,c:{docs:{},df:0,y:{docs:{},df:0,_:{docs:{},df:0,s:{docs:{},df:0,h:{docs:{},df:0,a:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951}},df:1}}}}}}}}}}}}}}}}}}}}},t:{docs:{},df:0,e:{docs:{},df:0,x:{docs:{},df:0,t:{docs:{},df:0,u:{docs:{},df:0,r:{docs:{},df:0,e:{docs:{},df:0,"(":{docs:{},df:0,a:{docs:{},df:0,m:{docs:{},df:0,a:{docs:{},df:0,z:{docs:{},df:0,i:{docs:{},df:0,n:{docs:{},df:0,g:{docs:{},df:0,_:{docs:{},df:0,t:{docs:{},df:0,e:{docs:{},df:0,x:{docs:{},df:0,t:{docs:{},df:0,u:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}}}}}}}}}}}}}}}}}}}}}},m:{docs:{},df:0,a:{docs:{},df:0,k:{docs:{},df:0,e:{docs:{},df:0,_:{docs:{},df:0,c:{docs:{},df:0,u:{docs:{},df:0,r:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.7320508075688772}},df:3}}}}}}}}},r:{docs:{},df:0,a:{docs:{},df:0,w:{docs:{},df:0,_:{docs:{},df:0,c:{docs:{},df:0,o:{docs:{},df:0,n:{docs:{},df:0,t:{docs:{},df:0,e:{docs:{},df:0,x:{docs:{},df:0,t:{docs:{},df:0,"(":{docs:{},df:0,")":{docs:{},df:0,".":{docs:{},df:0,0:{docs:{},df:0,".":{docs:{},df:0,s:{docs:{},df:0,e:{docs:{},df:0,t:{docs:{},df:0,_:{docs:{},df:0,s:{docs:{},df:0,h:{docs:{},df:0,o:{docs:{},df:0,u:{docs:{},df:0,l:{docs:{},df:0,d:{docs:{},df:0,_:{docs:{},df:0,c:{docs:{},df:0,l:{docs:{},df:0,o:{docs:{},df:0,s:{docs:{},df:0,e:{docs:{},df:0,"(":{docs:{},df:0,t:{docs:{},df:0,r:{docs:{},df:0,u:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1}},df:1}}}}}}}}}}}}}}}}}}},h:{docs:{},df:0,o:{docs:{},df:0,u:{docs:{},df:0,l:{docs:{},df:0,d:{docs:{},df:0,_:{docs:{},df:0,c:{docs:{},df:0,l:{docs:{},df:0,o:{docs:{},df:0,s:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1}},df:1}}}}}}}}}}}}}}}}}}}}}}}}}}},s:{docs:{},df:0,h:{docs:{},df:0,a:{docs:{},df:0,d:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{},df:0,s:{docs:{},df:0,".":{docs:{},df:0,g:{docs:{},df:0,e:{docs:{},df:0,t:{docs:{},df:0,_:{docs:{},df:0,m:{docs:{},df:0,u:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}}}}}}}}}},w:{docs:{},df:0,a:{docs:{},df:0,p:{docs:{},df:0,_:{docs:{},df:0,b:{docs:{},df:0,u:{docs:{},df:0,f:{docs:{},df:0,f:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.4142135623730951}},df:3}}}}}}}}},t:{docs:{},df:0,e:{docs:{},df:0,x:{docs:{},df:0,t:{docs:{},df:0,u:{docs:{},df:0,r:{docs:{},df:0,e:{docs:{},df:0,s:{docs:{},df:0,".":{docs:{},df:0,g:{docs:{},df:0,e:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}}}}}}}},u:{docs:{},df:0,p:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1}},df:2}}}},"/":{docs:{},df:0,c:{docs:{},df:0,a:{docs:{},df:0,r:{docs:{},df:0,g:{docs:{},df:0,o:{docs:{},df:0,".":{docs:{},df:0,t:{docs:{},df:0,o:{docs:{},df:0,m:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1}},df:1}}}}}}}}}},e:{docs:{},df:0,x:{docs:{},df:0,a:{docs:{},df:0,m:{docs:{},df:0,p:{docs:{},df:0,l:{docs:{},df:0,e:{docs:{},df:0,s:{docs:{},df:0,"/":{docs:{},df:0,p:{docs:{},df:0,l:{docs:{},df:0,a:{docs:{},df:0,y:{docs:{},df:0,g:{docs:{},df:0,r:{docs:{},df:0,o:{docs:{},df:0,u:{docs:{},df:0,n:{docs:{},df:0,d:{docs:{},df:0,".":{docs:{},df:0,r:{docs:{},df:0,s:{docs:{},df:0,":":{docs:{},df:0,2:{docs:{},df:0,0:{docs:{},df:0,4:{docs:{},df:0,":":{docs:{},df:0,1:{docs:{},df:0,2:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1}},df:1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},":":{docs:{},df:0,":":{docs:{},df:0,g:{docs:{},df:0,l:{docs:{},df:0,4:{docs:{},df:0,3:{docs:{},df:0,_:{docs:{},df:0,c:{docs:{},df:0,o:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.4142135623730951}},df:1}}}}}}}},o:{docs:{},df:0,p:{docs:{},df:0,e:{docs:{},df:0,n:{docs:{},df:0,g:{docs:{},df:0,l:{docs:{},df:0,":":{docs:{},df:0,":":{docs:{},df:0,g:{docs:{},df:0,l:{docs:{},df:0,c:{docs:{},df:0,o:{docs:{},df:0,n:{docs:{},df:0,t:{docs:{},df:0,e:{docs:{},df:0,x:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1}},df:1}}}}}}}}}}}}}}}}},"{":{docs:{},df:0,g:{docs:{},df:0,l:{docs:{},df:0,4:{docs:{},df:0,3:{docs:{},df:0,_:{docs:{},df:0,c:{docs:{},df:0,o:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:3}}}}}}}}}}},t:{docs:{},df:0,r:{docs:{},df:0,a:{docs:{},df:0,i:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:1}}}}}}}},r:{docs:{},df:0,a:{docs:{},df:0,c:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951}},df:1}}},i:{docs:{},df:0,b:{docs:{},df:0,u:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/":{tf:1.7320508075688772},"https://breakbuild.dev/support/":{tf:2.6457513110645907}},df:2,o:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/support/":{tf:1}},df:1}}}}}},o:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/devlog/motivation/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1}},df:3,_:{docs:{},df:0,f:{docs:{},df:0,l:{docs:{},df:0,o:{docs:{},df:0,w:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.7320508075688772}},df:3}}}}},f:{docs:{},df:0,l:{docs:{},df:0,o:{docs:{},df:0,w:{docs:{},df:0,":":{docs:{},df:0,":":{docs:{},df:0,e:{docs:{},df:0,x:{docs:{},df:0,i:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:3}}}},p:{docs:{},df:0,o:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:3}}}}}}}}}}}}},v:{docs:{},df:0,e:{docs:{},df:0,n:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1.4142135623730951}},df:2},t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:2}},r:{docs:{},df:0,s:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:4},t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/motivation/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:2},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:2},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:5}}},i:{docs:{},df:0,n:{docs:{},df:0,c:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}},o:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1}},df:1},r:{docs:{},df:0,d:{docs:{},df:0,i:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1}},df:3}}}}},p:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.4142135623730951}},df:6}},r:{docs:{},df:0,e:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:2.449489742783178},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:2}},df:7,":":{docs:{},df:0,":":{docs:{},df:0,c:{docs:{},df:0,o:{docs:{},df:0,l:{docs:{},df:0,o:{docs:{},df:0,r:{docs:{},df:0,3:{docs:{},df:0,2:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:1}}}}}}},f:{docs:{},df:0,f:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1.4142135623730951}},df:1,":":{docs:{},df:0,":":{docs:{},df:0,c:{docs:{},df:0,_:{docs:{},df:0,v:{docs:{},df:0,o:{docs:{},df:0,i:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:2.449489742783178}},df:1}}}}}}}}}}},m:{docs:{},df:0,e:{docs:{},df:0,m:{docs:{},df:0,":":{docs:{},df:0,":":{docs:{},df:0,t:{docs:{},df:0,r:{docs:{},df:0,a:{docs:{},df:0,n:{docs:{},df:0,s:{docs:{},df:0,m:{docs:{},df:0,u:{docs:{},df:0,t:{docs:{},df:0,e:{docs:{},df:0,":":{docs:{},df:0,":":{docs:{},df:0,"&":{docs:{},df:0,l:{docs:{},df:0,t:{docs:{},df:0,";":{docs:{},df:0,_:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:2}},df:1}}}}}}}}}}}}}}}}}}}}},p:{docs:{},df:0,t:{docs:{},df:0,r:{docs:{},df:0,":":{docs:{},df:0,":":{docs:{},df:0,n:{docs:{},df:0,u:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1.4142135623730951}},df:1}}}}}}}}}}},p:{docs:{},df:0,o:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}},r:{docs:{},df:0,e:{docs:{},df:0,c:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:3.3166247903554},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:3,l:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1}},df:1}}}}}}},s:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.6457513110645907}},df:1,"(":{docs:{},df:0,m:{docs:{},df:0,o:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}},u:{docs:{},df:0,n:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:2},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:4,l:{docs:{},df:0,e:{docs:{},df:0,s:{docs:{},df:0,s:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/motivation/":{tf:1}},df:2}}}}}},p:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772}},df:1}},r:{docs:{},df:0,s:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1}},df:2}}},v:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.7320508075688772}},df:1}}},w:{docs:{},df:0,a:{docs:{},df:0,r:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/devlog/motivation/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1}},df:2}}}}},r:{docs:{},df:0,a:{docs:{},df:0,s:{docs:{},df:0,h:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1}},df:2}},t:{docs:{},df:0,e:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:4.47213595499958},"https://breakbuild.dev/devlog/renderer/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:2.6457513110645907},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:2.449489742783178},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:2.449489742783178},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.4142135623730951}},df:7,":":{docs:{},df:0,":":{docs:{},df:0,c:{docs:{},df:0,o:{docs:{},df:0,n:{docs:{},df:0,t:{docs:{},df:0,e:{docs:{},df:0,x:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:1}}}}}}},g:{docs:{},df:0,l:{docs:{},df:0,4:{docs:{},df:0,3:{docs:{},df:0,_:{docs:{},df:0,c:{docs:{},df:0,o:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1}},df:1}}}}}}}}}},s:{docs:{},df:0,"(":{docs:{},df:0,t:{docs:{},df:0,o:{docs:{},df:0,g:{docs:{},df:0,e:{docs:{},df:0,t:{docs:{},df:0,h:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}}},".":{docs:{},df:0,i:{docs:{},df:0,o:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1}},df:2}}}}}},w:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:3,e:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951}},df:1}}}}},e:{docs:{},df:0,a:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:2.8284271247461903},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:2.6457513110645907},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:2.449489742783178},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:2.449489742783178},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:3.1622776601683795},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:3.4641016151377544}},df:13,e:{docs:{},df:0,"(":{docs:{},df:0,d:{docs:{},df:0,i:{docs:{},df:0,m:{docs:{},df:0,e:{docs:{},df:0,n:{docs:{},df:0,s:{docs:{},df:0,i:{docs:{},df:0,o:{docs:{},df:0,n:{docs:{},df:0,":":{docs:{},df:0,":":{docs:{},df:0,n:{docs:{},df:0,e:{docs:{},df:0,w:{docs:{},df:0,"(":{docs:{},df:0,1:{docs:{},df:0,0:{docs:{},df:0,2:{docs:{},df:0,4:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}}}}}}}}}}}}}}}},_:{docs:{},df:0,b:{docs:{},df:0,u:{docs:{},df:0,f:{docs:{},df:0,f:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{},df:0,_:{docs:{},df:0,w:{docs:{},df:0,i:{docs:{},df:0,t:{docs:{},df:0,h:{docs:{},df:0,_:{docs:{},df:0,f:{docs:{},df:0,3:{docs:{},df:0,2:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:1}}}}}}}}}}}}}}},s:{docs:{},df:0,h:{docs:{},df:0,a:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:2},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1}},df:2}}}},v:{docs:{},df:0,a:{docs:{},df:0,o:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1}},df:1,"(":{docs:{},df:0,v:{docs:{},df:0,b:{docs:{},df:0,o:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1}},df:3}}}}}},b:{docs:{},df:0,o:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1.4142135623730951}},df:1,"&":{docs:{},df:0,l:{docs:{},df:0,t:{docs:{},df:0,";":{docs:{},df:0,t:{docs:{},df:0,"&":{docs:{},df:0,g:{docs:{},df:0,t:{docs:{},df:0,";":{docs:{},df:0,"(":{docs:{},df:0,d:{docs:{},df:0,a:{docs:{},df:0,t:{docs:{},df:0,a:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1}},df:2}}}}}}}}}}}}}},"(":{docs:{},df:0,"&":{docs:{},df:0,a:{docs:{},df:0,m:{docs:{},df:0,p:{docs:{},df:0,";":{docs:{},df:0,q:{docs:{},df:0,u:{docs:{},df:0,a:{docs:{},df:0,d:{docs:{},df:0,_:{docs:{},df:0,v:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{},df:0,t:{docs:{},df:0,i:{docs:{},df:0,c:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1}},df:4}}}}}}}}}}}}}}}}}}},e:{docs:{},df:0,r:{docs:{},df:0,t:{docs:{},df:0,e:{docs:{},df:0,x:{docs:{},df:0,_:{docs:{},df:0,b:{docs:{},df:0,u:{docs:{},df:0,f:{docs:{},df:0,f:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{},df:0,_:{docs:{},df:0,f:{docs:{},df:0,r:{docs:{},df:0,o:{docs:{},df:0,m:{docs:{},df:0,_:{docs:{},df:0,s:{docs:{},df:0,l:{docs:{},df:0,i:{docs:{},df:0,c:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:1}}}}}}}}}}}}}}}}}}}}}}},w:{docs:{},df:0,i:{docs:{},df:0,n:{docs:{},df:0,d:{docs:{},df:0,o:{docs:{},df:0,w:{docs:{},df:0,"(":{docs:{},df:0,3:{docs:{},df:0,0:{docs:{},df:0,0:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1}},df:1}}}}}}}}}}}},i:{docs:{},df:0,o:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:2},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.4142135623730951}},df:7}},v:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:1}}}}},i:{docs:{},df:0,t:{docs:{},df:0,i:{docs:{},df:0,c:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}},o:{docs:{},df:0,s:{docs:{},df:0,s:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/motivation/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:4}}},u:{docs:{},df:0,s:{docs:{},df:0,h:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:2}}}},s:{docs:{},df:0,t:{docs:{},df:0,r:{docs:{},df:0,":":{docs:{},df:0,":":{docs:{},df:0,f:{docs:{},df:0,r:{docs:{},df:0,o:{docs:{},df:0,m:{docs:{},df:0,_:{docs:{},df:0,p:{docs:{},df:0,t:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:1}}}}}}}}}},i:{docs:{},df:0,n:{docs:{},df:0,g:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:2}},df:1,":":{docs:{},df:0,":":{docs:{},df:0,n:{docs:{},df:0,e:{docs:{},df:0,w:{docs:{},df:0,"(":{docs:{},df:0,f:{docs:{},df:0,s:{docs:{},df:0,_:{docs:{},df:0,s:{docs:{},df:0,o:{docs:{},df:0,u:{docs:{},df:0,r:{docs:{},df:0,c:{docs:{},df:0,e:{docs:{},df:0,")":{docs:{},df:0,".":{docs:{},df:0,u:{docs:{},df:0,n:{docs:{},df:0,w:{docs:{},df:0,r:{docs:{},df:0,a:{docs:{},df:0,p:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.7320508075688772}},df:1}}}}}}}}}}}}}}}}},v:{docs:{},df:0,s:{docs:{},df:0,_:{docs:{},df:0,s:{docs:{},df:0,o:{docs:{},df:0,u:{docs:{},df:0,r:{docs:{},df:0,c:{docs:{},df:0,e:{docs:{},df:0,")":{docs:{},df:0,".":{docs:{},df:0,u:{docs:{},df:0,n:{docs:{},df:0,w:{docs:{},df:0,r:{docs:{},df:0,a:{docs:{},df:0,p:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.7320508075688772}},df:1}}}}}}}}}}}}}}}}}}}}}}}}}}}}},t:{docs:{},df:0,r:{docs:{},df:0,l:{docs:{},df:0,_:{docs:{},df:0,k:{docs:{},df:0,e:{docs:{},df:0,y:{docs:{},df:0,_:{docs:{},df:0,a:{docs:{},df:0,r:{docs:{},df:0,g:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}}}}}},x:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:2.23606797749979}},df:1,".":{docs:{},df:0,c:{docs:{},df:0,l:{docs:{},df:0,e:{docs:{},df:0,a:{docs:{},df:0,r:{docs:{},df:0,"(":{docs:{},df:0,s:{docs:{},df:0,e:{docs:{},df:0,l:{docs:{},df:0,f:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:1}}}}}}}}}}}}},u:{docs:{},df:0,l:{docs:{},df:0,p:{docs:{},df:0,r:{docs:{},df:0,i:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:1}}}},t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1,u:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}},m:{docs:{},df:0,b:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{},df:0,s:{docs:{},df:0,o:{docs:{},df:0,m:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1}},df:2}}}}}}},r:{docs:{},df:0,r:{docs:{},df:0,e:{docs:{},df:0,n:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.7320508075688772}},df:9}}}}},s:{docs:{},df:0,t:{docs:{},df:0,o:{docs:{},df:0,m:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/motivation/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1}},df:5}}}},t:{docs:{},df:0,e:{docs:{"https://breakbuild.dev/devlog/motivation/":{tf:1.4142135623730951}},df:1}}}},d:{docs:{},df:0,a:{docs:{},df:0,n:{docs:{},df:0,d:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1}},df:1}},g:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1}},df:2,e:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:2}}}},r:{docs:{},df:0,k:{docs:{"https://breakbuild.dev/devlog/motivation/":{tf:1}},df:1,_:{docs:{},df:0,j:{docs:{},df:0,u:{docs:{},df:0,n:{docs:{},df:0,g:{docs:{},df:0,l:{docs:{},df:0,e:{docs:{},df:0,_:{docs:{},df:0,g:{docs:{},df:0,r:{docs:{},df:0,e:{docs:{},df:0,e:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:1}}}}}}}}}}}}},e:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1}},df:1}}}},t:{docs:{},df:0,a:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.8284271247461903},"https://breakbuild.dev/devlog/renderer/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:5.0990195135927845},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:4.358898943540674},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.4142135623730951},"https://breakbuild.dev/support/":{tf:1}},df:10,".":{docs:{},df:0,a:{docs:{},df:0,s:{docs:{},df:0,_:{docs:{},df:0,p:{docs:{},df:0,t:{docs:{},df:0,r:{docs:{},df:0,"(":{docs:{},df:0,")":{docs:{},df:0,".":{docs:{},df:0,c:{docs:{},df:0,a:{docs:{},df:0,s:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1}},df:2}}}}}}}}}}}}},l:{docs:{},df:0,e:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1}},df:2}}}},_:{docs:{},df:0,s:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1}},df:2,i:{docs:{},df:0,z:{docs:{},df:0,e:{docs:{},df:0,".":{docs:{},df:0,t:{docs:{},df:0,r:{docs:{},df:0,y:{docs:{},df:0,_:{docs:{},df:0,i:{docs:{},df:0,n:{docs:{},df:0,t:{docs:{},df:0,o:{docs:{},df:0,"(":{docs:{},df:0,")":{docs:{},df:0,".":{docs:{},df:0,u:{docs:{},df:0,n:{docs:{},df:0,w:{docs:{},df:0,r:{docs:{},df:0,a:{docs:{},df:0,p:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1}},df:2}}}}}}}}}}}}}}}}}}}}}}}}},y:{docs:{"https://breakbuild.dev/blog/":{tf:1},"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1},"https://breakbuild.dev/support/":{tf:1}},df:6}},e:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1}},df:2,a:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.8284271247461903},"https://breakbuild.dev/devlog/renderer/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.7320508075688772}},df:8}},b:{docs:{},df:0,a:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951}},df:1}},u:{docs:{},df:0,g:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:2.6457513110645907},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.4142135623730951}},df:6,_:{docs:{},df:0,c:{docs:{},df:0,a:{docs:{},df:0,l:{docs:{},df:0,l:{docs:{},df:0,b:{docs:{},df:0,a:{docs:{},df:0,c:{docs:{},df:0,k:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:1}}}}}}}}}}}},c:{docs:{},df:0,a:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/":{tf:1},"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:5}},i:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/":{tf:1.4142135623730951},"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/motivation/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1}},df:6},m:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:1},s:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/":{tf:1},"https://breakbuild.dev/devlog/motivation/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1}},df:5}},l:{docs:{},df:0,a:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:2}},i:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/devlog/motivation/":{tf:1}},df:1}}},o:{docs:{},df:0,u:{docs:{},df:0,p:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1}},df:1}}}}},d:{docs:{},df:0,i:{docs:{},df:0,c:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:4}}},e:{docs:{},df:0,p:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}},f:{docs:{},df:0,a:{docs:{},df:0,u:{docs:{},df:0,l:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:3.605551275463989},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:9,":":{docs:{},df:0,":":{docs:{},df:0,d:{docs:{},df:0,e:{docs:{},df:0,f:{docs:{},df:0,a:{docs:{},df:0,u:{docs:{},df:0,l:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.4142135623730951}},df:4}}}}}}}}}}}}},e:{docs:{},df:0,a:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}},r:{docs:{"https://breakbuild.dev/devlog/renderer/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1}},df:2}},i:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:2.449489742783178},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:4}},df:6,i:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1.7320508075688772}},df:7,i:{docs:{},df:0,o:{docs:{},df:0,n:{docs:{},df:0,"(":{docs:{},df:0,a:{docs:{},df:0,n:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}}}}}}}},l:{docs:{},df:0,a:{docs:{},df:0,y:{docs:{"https://breakbuild.dev/devlog/motivation/":{tf:1}},df:1}},e:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:4,e:{docs:{},df:0,"(":{docs:{},df:0,c:{docs:{},df:0,o:{docs:{},df:0,p:{docs:{},df:0,y:{docs:{},df:0,"/":{docs:{},df:0,a:{docs:{},df:0,s:{docs:{},df:0,s:{docs:{},df:0,i:{docs:{},df:0,g:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}}}}}}}}}}}},m:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1}},df:1,a:{docs:{},df:0,n:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:1}}}},n:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}},p:{docs:{},df:0,e:{docs:{},df:0,n:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:5.477225575051661},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:2.449489742783178},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:2.8284271247461903}},df:9}}},r:{docs:{},df:0,e:{docs:{},df:0,c:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:2}}},t:{docs:{},df:0,h:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:3,_:{docs:{},df:0,b:{docs:{},df:0,u:{docs:{},df:0,f:{docs:{},df:0,f:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{},df:0,_:{docs:{},df:0,b:{docs:{},df:0,i:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:1}}}}}}}}}}}}}},r:{docs:{},df:0,e:{docs:{},df:0,f:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1}},df:1,e:{docs:{},df:0,r:{docs:{},df:0,e:{docs:{},df:0,n:{docs:{},df:0,c:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}}},i:{docs:{},df:0,v:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:2,e:{docs:{},df:0,"(":{docs:{},df:0,c:{docs:{},df:0,o:{docs:{},df:0,p:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:1}}}},d:{docs:{},df:0,e:{docs:{},df:0,b:{docs:{},df:0,u:{docs:{},df:0,g:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:3}}}}},e:{docs:{},df:0,r:{docs:{},df:0,r:{docs:{},df:0,o:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}}}}}},s:{docs:{},df:0,c:{docs:{},df:0,r:{docs:{},df:0,i:{docs:{},df:0,b:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:5},p:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:2}}}}},e:{docs:{},df:0,r:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}},i:{docs:{},df:0,g:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.449489742783178},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/chapter/":{tf:1}},df:2}}},k:{docs:{},df:0,t:{docs:{},df:0,o:{docs:{},df:0,p:{docs:{"https://breakbuild.dev/devlog/renderer/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.4142135623730951}},df:2}}}},p:{docs:{},df:0,i:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}},t:{docs:{},df:0,r:{docs:{},df:0,o:{docs:{},df:0,y:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1}},df:2}},u:{docs:{},df:0,c:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}},t:{docs:{},df:0,a:{docs:{},df:0,c:{docs:{},df:0,h:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1}},df:1}},i:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/motivation/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:8,_:{docs:{},df:0,a:{docs:{},df:0,r:{docs:{},df:0,g:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}}},e:{docs:{},df:0,c:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}},o:{docs:{},df:0,u:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:1}}}},v:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:4,e:{docs:{},df:0,l:{docs:{},df:0,o:{docs:{},df:0,p:{docs:{"https://breakbuild.dev/":{tf:1},"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.449489742783178},"https://breakbuild.dev/devlog/motivation/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.4142135623730951}},df:4}}}},i:{docs:{},df:0,c:{docs:{"https://breakbuild.dev/devlog/renderer/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.4142135623730951}},df:5,e:{docs:{},df:0,s:{docs:{},df:0,"/":{docs:{},df:0,w:{docs:{},df:0,i:{docs:{},df:0,t:{docs:{},df:0,h:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:1}}}}}}}}},l:{docs:{},df:0,o:{docs:{},df:0,g:{docs:{"https://breakbuild.dev/":{tf:1},"https://breakbuild.dev/blog/":{tf:1},"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/motivation/":{tf:1}},df:5,"(":{docs:{},df:0,"/":{docs:{},df:0,d:{docs:{},df:0,e:{docs:{},df:0,v:{docs:{},df:0,l:{docs:{},df:0,o:{docs:{},df:0,g:{docs:{"https://breakbuild.dev/support/":{tf:1}},df:1}}}}}}}}}}}}},i:{docs:{},df:0,d:{docs:{},df:0,n:{docs:{},df:0,"'":{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/motivation/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1},"https://breakbuild.dev/support/":{tf:1}},df:6}}}},f:{docs:{},df:0,f:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:4.358898943540674},"https://breakbuild.dev/devlog/renderer/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:2.6457513110645907},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:3.3166247903554},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:2.449489742783178},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:2.8284271247461903},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.7320508075688772}},df:13,e:{docs:{},df:0,n:{docs:{},df:0,t:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:1}}}}}},i:{docs:{},df:0,c:{docs:{},df:0,u:{docs:{},df:0,l:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:2}}}}}}},l:{docs:{},df:0,i:{docs:{},df:0,g:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951}},df:1}}},m:{docs:{},df:0,e:{docs:{},df:0,n:{docs:{},df:0,s:{docs:{},df:0,i:{docs:{},df:0,o:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1}},df:1}}}}}}},r:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.4142135623730951}},df:1,e:{docs:{},df:0,c:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:4,3:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/devlog/motivation/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1}},df:3}},l:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1}},df:4}},o:{docs:{},df:0,r:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.4142135623730951}},df:3,e:{docs:{},df:0,s:{docs:{},df:0,"(":{docs:{},df:0,a:{docs:{},df:0,n:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1}},df:1}}}}}}}}}}}},t:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:3}}},s:{docs:{},df:0,a:{docs:{},df:0,b:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.4142135623730951}},df:5}},g:{docs:{},df:0,r:{docs:{},df:0,e:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951}},df:1}}},p:{docs:{},df:0,p:{docs:{},df:0,o:{docs:{},df:0,i:{docs:{},df:0,n:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}}},c:{docs:{},df:0,a:{docs:{},df:0,r:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1}},df:2}}},l:{docs:{},df:0,a:{docs:{},df:0,i:{docs:{},df:0,m:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}},o:{docs:{},df:0,n:{docs:{},df:0,t:{docs:{},df:0,i:{docs:{},df:0,n:{docs:{},df:0,u:{docs:{"https://breakbuild.dev/devlog/motivation/":{tf:1}},df:1}}}}}},u:{docs:{},df:0,s:{docs:{},df:0,s:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/support/":{tf:1}},df:3}}}},l:{docs:{},df:0,i:{docs:{},df:0,k:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951}},df:1}}},p:{docs:{},df:0,a:{docs:{},df:0,t:{docs:{},df:0,c:{docs:{},df:0,h:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1}},df:1}}}},l:{docs:{},df:0,a:{docs:{},df:0,y:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:2},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:5}}}},s:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{},df:0,v:{docs:{},df:0,i:{docs:{},df:0,c:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}},t:{docs:{},df:0,a:{docs:{},df:0,n:{docs:{},df:0,c:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1.4142135623730951}},df:2}}},o:{docs:{},df:0,r:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1}},df:1}}},r:{docs:{},df:0,a:{docs:{},df:0,c:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/motivation/":{tf:1}},df:2,e:{docs:{},df:0,d:{docs:{},df:0,"(":{docs:{},df:0,w:{docs:{},df:0,h:{docs:{},df:0,o:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}}}}}}}},t:{docs:{},df:0,c:{docs:{},df:0,h:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951}},df:1}}},v:{docs:{},df:0,e:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:3,r:{docs:{},df:0,g:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}},i:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.4142135623730951}},df:1}}}},o:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.449489742783178},"https://breakbuild.dev/devlog/motivation/":{tf:2},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:4,c:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.4142135623730951}},df:6,s:{docs:{},df:0,"(":{docs:{},df:0,m:{docs:{},df:0,o:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1}},df:1}}}},".":{docs:{},df:0,g:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:1}},r:{docs:{},df:0,s:{docs:{},df:0,"(":{docs:{},df:0,s:{docs:{},df:0,c:{docs:{},df:0,r:{docs:{},df:0,o:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}}}}}},u:{docs:{},df:0,m:{docs:{},df:0,e:{docs:{},df:0,n:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:3}}}}}},e:{docs:{},df:0,s:{docs:{},df:0,n:{docs:{},df:0,"'":{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.6457513110645907},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.4142135623730951}},df:9}}}}},n:{docs:{},df:0,"'":{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/":{tf:1},"https://breakbuild.dev/blog/my-year-with-rust/":{tf:3.605551275463989},"https://breakbuild.dev/devlog/motivation/":{tf:1},"https://breakbuild.dev/devlog/renderer/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:2.6457513110645907},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:2.8284271247461903},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.7320508075688772},"https://breakbuild.dev/support/":{tf:1}},df:15}},a:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/support/":{tf:1.4142135623730951}},df:1}},e:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1},"https://breakbuild.dev/support/":{tf:1}},df:6}},o:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}},u:{docs:{},df:0,b:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:2},t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951}},df:1}}},v:{docs:{},df:0,e:{docs:{"https://breakbuild.dev/devlog/motivation/":{tf:1}},df:1}},w:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/":{tf:1},"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/":{tf:1},"https://breakbuild.dev/devlog/motivation/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/support/":{tf:1}},df:6,l:{docs:{},df:0,o:{docs:{},df:0,a:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:1}}}}}},z:{docs:{},df:0,e:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:5}}}},p:{docs:{},df:0,i:{docs:{},df:0,":":{docs:{},df:0,":":{docs:{},df:0,l:{docs:{},df:0,o:{docs:{},df:0,g:{docs:{},df:0,i:{docs:{},df:0,c:{docs:{},df:0,a:{docs:{},df:0,l:{docs:{},df:0,s:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1}},df:1}}}}}}}}}}}},r:{docs:{},df:0,a:{docs:{},df:0,g:{docs:{"https://breakbuild.dev/devlog/motivation/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:2},w:{docs:{"https://breakbuild.dev/devlog/renderer/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle/chapter/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:2.6457513110645907},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:2.449489742783178},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:2},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.4142135623730951}},df:8,a:{docs:{},df:0,r:{docs:{},df:0,r:{docs:{},df:0,a:{docs:{},df:0,y:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:1}}}}},b:{docs:{},df:0,a:{docs:{},df:0,c:{docs:{},df:0,k:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:2}}}},n:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.4142135623730951}},df:1}}},e:{docs:{},df:0,a:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:1},m:{docs:{"https://breakbuild.dev/devlog/motivation/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1}},df:2}}},i:{docs:{},df:0,v:{docs:{},df:0,e:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:1,r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.7320508075688772}},df:4}}}},o:{docs:{},df:0,p:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:1}}},s:{docs:{},df:0,a:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1}},df:1}},u:{docs:{},df:0,c:{docs:{},df:0,k:{docs:{},df:0,d:{docs:{},df:0,u:{docs:{},df:0,c:{docs:{},df:0,k:{docs:{},df:0,g:{docs:{},df:0,o:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1}},df:2}}}}}}}},e:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1},m:{docs:{},df:0,b:{docs:{"https://breakbuild.dev/devlog/renderer/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1}},df:2},p:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1}},df:1}},r:{docs:{},df:0,a:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}},e:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:5}}},x:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:1},y:{docs:{},df:0,n:{docs:{},df:0,a:{docs:{},df:0,m:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1},"https://breakbuild.dev/support/":{tf:1}},df:3,i:{docs:{},df:0,c:{docs:{},df:0,_:{docs:{},df:0,c:{docs:{},df:0,o:{docs:{},df:0,p:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1}},df:1}}}}}},t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:1}}}}}}},e:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1}},df:2,".":{docs:{},df:0,g:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:2}},a:{docs:{},df:0,c:{docs:{},df:0,h:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1.4142135623730951}},df:5}},r:{docs:{},df:0,l:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772}},df:1}}},s:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:4,e:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.449489742783178},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.7320508075688772}},df:4},s:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:2}}},l:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}},c:{docs:{},df:0,o:{docs:{},df:0,s:{docs:{},df:0,y:{docs:{},df:0,s:{docs:{},df:0,t:{docs:{},df:0,e:{docs:{},df:0,m:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/motivation/":{tf:1}},df:2}}}}}}}},d:{docs:{},df:0,i:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1}},df:2,o:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:3}}}},u:{docs:{},df:0,c:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}},f:{docs:{},df:0,f:{docs:{},df:0,e:{docs:{},df:0,c:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1}},df:4}}},i:{docs:{},df:0,c:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.4142135623730951}},df:1,e:{docs:{},df:0,n:{docs:{},df:0,c:{docs:{},df:0,y:{docs:{},df:0,"(":{docs:{},df:0,n:{docs:{},df:0,o:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:1}}}}}}}}}},o:{docs:{},df:0,r:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1}},df:2}}}}},l:{docs:{},df:0,e:{docs:{},df:0,m:{docs:{},df:0,e:{docs:{},df:0,n:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1.7320508075688772}},df:3,"(":{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1}},df:2}}}}}}}},m:{docs:{},df:0,a:{docs:{},df:0,i:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/support/":{tf:1}},df:1}}},b:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1,a:{docs:{},df:0,r:{docs:{},df:0,k:{docs:{},df:0,s:{docs:{},df:0,t:{docs:{},df:0,u:{docs:{},df:0,d:{docs:{},df:0,i:{docs:{},df:0,o:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:1}}}}}}}}},r:{docs:{},df:0,a:{docs:{},df:0,c:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:2}}}},p:{docs:{},df:0,t:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:2}}},u:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1}},df:1}}},n:{docs:{},df:0,a:{docs:{},df:0,b:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:2},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.4142135623730951}},df:7}}},c:{docs:{},df:0,o:{docs:{},df:0,u:{docs:{},df:0,n:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/":{tf:1},"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2}},df:2}},r:{docs:{},df:0,a:{docs:{},df:0,g:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1},"https://breakbuild.dev/support/":{tf:1}},df:5}}}}}},d:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:3.3166247903554},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/chapter/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:8,e:{docs:{},df:0,a:{docs:{},df:0,v:{docs:{},df:0,o:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/motivation/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1},"https://breakbuild.dev/support/":{tf:1}},df:3}}}}}},f:{docs:{},df:0,o:{docs:{},df:0,r:{docs:{},df:0,c:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951}},df:1}}}},g:{docs:{},df:0,a:{docs:{},df:0,g:{docs:{"https://breakbuild.dev/support/":{tf:1}},df:1}},i:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/":{tf:1},"https://breakbuild.dev/devlog/motivation/":{tf:2.6457513110645907},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1}},df:4}}},h:{docs:{},df:0,a:{docs:{},df:0,n:{docs:{},df:0,c:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:1}}}},j:{docs:{},df:0,o:{docs:{},df:0,y:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/support/":{tf:1}},df:2}}},o:{docs:{},df:0,u:{docs:{},df:0,g:{docs:{},df:0,h:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1}},df:4}}}},t:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/motivation/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:3}},h:{docs:{},df:0,u:{docs:{},df:0,s:{docs:{},df:0,i:{docs:{},df:0,a:{docs:{},df:0,s:{docs:{},df:0,m:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1},t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951}},df:1}}}}}}},i:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/":{tf:1},"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.6457513110645907},"https://breakbuild.dev/devlog/motivation/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:6,e:{docs:{},df:0,t:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951}},df:1}}}}},r:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/motivation/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:3}}},u:{docs:{},df:0,m:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.6457513110645907},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:2}},df:4,a:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:1}}}},v:{docs:{},df:0,_:{docs:{},df:0,l:{docs:{},df:0,o:{docs:{},df:0,g:{docs:{},df:0,g:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1.7320508075688772}},df:2,e:{docs:{},df:0,r:{docs:{},df:0,":":{docs:{},df:0,":":{docs:{},df:0,b:{docs:{},df:0,u:{docs:{},df:0,i:{docs:{},df:0,l:{docs:{},df:0,d:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{},df:0,":":{docs:{},df:0,":":{docs:{},df:0,f:{docs:{},df:0,r:{docs:{},df:0,o:{docs:{},df:0,m:{docs:{},df:0,_:{docs:{},df:0,e:{docs:{},df:0,n:{docs:{},df:0,v:{docs:{},df:0,"(":{docs:{},df:0,e:{docs:{},df:0,n:{docs:{},df:0,v:{docs:{},df:0,_:{docs:{},df:0,l:{docs:{},df:0,o:{docs:{},df:0,g:{docs:{},df:0,g:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{},df:0,":":{docs:{},df:0,":":{docs:{},df:0,e:{docs:{},df:0,n:{docs:{},df:0,v:{docs:{},df:0,":":{docs:{},df:0,":":{docs:{},df:0,d:{docs:{},df:0,e:{docs:{},df:0,f:{docs:{},df:0,a:{docs:{},df:0,u:{docs:{},df:0,l:{docs:{},df:0,t:{docs:{},df:0,"(":{docs:{},df:0,")":{docs:{},df:0,".":{docs:{},df:0,d:{docs:{},df:0,e:{docs:{},df:0,f:{docs:{},df:0,a:{docs:{},df:0,u:{docs:{},df:0,l:{docs:{},df:0,t:{docs:{},df:0,_:{docs:{},df:0,f:{docs:{},df:0,i:{docs:{},df:0,l:{docs:{},df:0,t:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{},df:0,_:{docs:{},df:0,o:{docs:{},df:0,r:{docs:{},df:0,"(":{docs:{},df:0,'"':{docs:{},df:0,w:{docs:{},df:0,a:{docs:{},df:0,r:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},i:{docs:{},df:0,r:{docs:{},df:0,o:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/devlog/motivation/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:3}}}}}},p:{docs:{},df:0,i:{docs:{},df:0,s:{docs:{},df:0,o:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1}},df:1}}}}},q:{docs:{},df:0,u:{docs:{},df:0,a:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1.4142135623730951}},df:1}}}},r:{docs:{},df:0,g:{docs:{},df:0,o:{docs:{},df:0,n:{docs:{},df:0,o:{docs:{},df:0,m:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:6}}}}},r:{docs:{},df:0,"(":{docs:{},df:0,e:{docs:{},df:0,r:{docs:{},df:0,r:{docs:{},df:0,o:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1,":":{docs:{},df:0,":":{docs:{},df:0,i:{docs:{},df:0,n:{docs:{},df:0,v:{docs:{},df:0,a:{docs:{},df:0,l:{docs:{},df:0,i:{docs:{},df:0,d:{docs:{},df:0,c:{docs:{},df:0,o:{docs:{},df:0,n:{docs:{},df:0,t:{docs:{},df:0,e:{docs:{},df:0,x:{docs:{},df:0,t:{docs:{},df:0,"(":{docs:{},df:0,f:{docs:{},df:0,o:{docs:{},df:0,r:{docs:{},df:0,m:{docs:{},df:0,a:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:1}}}}}},s:{docs:{},df:0,t:{docs:{},df:0,r:{docs:{},df:0,i:{docs:{},df:0,n:{docs:{},df:0,g:{docs:{},df:0,":":{docs:{},df:0,":":{docs:{},df:0,f:{docs:{},df:0,r:{docs:{},df:0,o:{docs:{},df:0,m:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},o:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/":{tf:1},"https://breakbuild.dev/blog/my-year-with-rust/":{tf:5.291502622129181},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:5.744562646538029},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1},"https://breakbuild.dev/support/":{tf:1}},df:13,"&":{docs:{},df:0,g:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1.4142135623730951}},df:1}}},"(":{docs:{},df:0,'"':{docs:{},df:0,f:{docs:{},df:0,a:{docs:{},df:0,i:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}},s:{docs:{},df:0,h:{docs:{},df:0,a:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}},u:{docs:{},df:0,n:{docs:{},df:0,k:{docs:{},df:0,n:{docs:{},df:0,o:{docs:{},df:0,w:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}}}}},"[":{docs:{},df:0,e:{docs:{},df:0,0:{docs:{},df:0,3:{docs:{},df:0,8:{docs:{},df:0,2:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1}},df:1}}}}}},_:{docs:{},df:0,m:{docs:{},df:0,e:{docs:{},df:0,s:{docs:{},df:0,s:{docs:{},df:0,a:{docs:{},df:0,g:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:2.449489742783178}},df:1}}}}}}}}}}},s:{docs:{},df:0,c:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1}},df:1},o:{docs:{},df:0,t:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1}},df:1}}}},p:{docs:{},df:0,e:{docs:{},df:0,c:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:3.872983346207417},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:6}}}},s:{docs:{},df:0,e:{docs:{},df:0,n:{docs:{},df:0,c:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1},t:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/motivation/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1}},df:4}}}}}},t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1}},df:1,c:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:7,".":{docs:{},df:0,"(":{docs:{},df:0,n:{docs:{},df:0,o:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}}},v:{docs:{},df:0,a:{docs:{},df:0,n:{docs:{},df:0,g:{docs:{},df:0,e:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}},e:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:5.477225575051661},"https://breakbuild.dev/devlog/motivation/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:2},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1},"https://breakbuild.dev/support/":{tf:1.7320508075688772}},df:10,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:2.8284271247461903},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.7320508075688772}},df:5,":":{docs:{},df:0,":":{docs:{},df:0,m:{docs:{},df:0,a:{docs:{},df:0,i:{docs:{},df:0,n:{docs:{},df:0,e:{docs:{},df:0,v:{docs:{},df:0,e:{docs:{},df:0,n:{docs:{},df:0,t:{docs:{},df:0,s:{docs:{},df:0,c:{docs:{},df:0,l:{docs:{},df:0,e:{docs:{},df:0,a:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:3}}}}}}}}}}}}}}},w:{docs:{},df:0,i:{docs:{},df:0,n:{docs:{},df:0,d:{docs:{},df:0,o:{docs:{},df:0,w:{docs:{},df:0,e:{docs:{},df:0,v:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:3}}}}}}}},"{":{docs:{},df:0,e:{docs:{},df:0,v:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:3}}}}},_:{docs:{},df:0,l:{docs:{},df:0,o:{docs:{},df:0,o:{docs:{},df:0,p:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.4142135623730951}},df:4,".":{docs:{},df:0,r:{docs:{},df:0,u:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:2,"(":{docs:{},df:0,m:{docs:{},df:0,o:{docs:{},df:0,v:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:3}}}}}}}},":":{docs:{},df:0,":":{docs:{},df:0,"{":{docs:{},df:0,c:{docs:{},df:0,o:{docs:{},df:0,n:{docs:{},df:0,t:{docs:{},df:0,r:{docs:{},df:0,o:{docs:{},df:0,l:{docs:{},df:0,f:{docs:{},df:0,l:{docs:{},df:0,o:{docs:{},df:0,w:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:3}}}}}}}}}}}}}}}}}}},l:{docs:{},df:0,o:{docs:{},df:0,o:{docs:{},df:0,p:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:3,":":{docs:{},df:0,":":{docs:{},df:0,n:{docs:{},df:0,e:{docs:{},df:0,w:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:3}}}}}}}}},u:{docs:{"https://breakbuild.dev/support/":{tf:1}},df:1}}},r:{docs:{},df:0,y:{docs:{},df:0,o:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.6457513110645907},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1},"https://breakbuild.dev/support/":{tf:1}},df:3}},t:{docs:{},df:0,h:{docs:{"https://breakbuild.dev/":{tf:1},"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.8284271247461903},"https://breakbuild.dev/devlog/renderer/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:10}},w:{docs:{},df:0,h:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:1}}}}}}},i:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951}},df:1}}},x:{docs:{},df:0,a:{docs:{},df:0,c:{docs:{},df:0,t:{docs:{},df:0,l:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/devlog/motivation/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1}},df:2}}}},g:{docs:{},df:0,g:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}},m:{docs:{},df:0,p:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.8284271247461903},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:2},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:2.449489742783178},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.7320508075688772}},df:10,e:{docs:{},df:0,s:{docs:{},df:0,"/":{docs:{},df:0,p:{docs:{},df:0,l:{docs:{},df:0,a:{docs:{},df:0,y:{docs:{},df:0,g:{docs:{},df:0,r:{docs:{},df:0,o:{docs:{},df:0,u:{docs:{},df:0,n:{docs:{},df:0,d:{docs:{},df:0,".":{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:1}}}}}}}}}}}}}}}}}}},c:{docs:{},df:0,e:{docs:{},df:0,p:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1},"https://breakbuild.dev/support/":{tf:1}},df:5}}},l:{docs:{},df:0,u:{docs:{},df:0,s:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772}},df:1}}},u:{docs:{},df:0,r:{docs:{},df:0,s:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1.7320508075688772}},df:1}},s:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1}},df:1}}},e:{docs:{},df:0,c:{docs:{},df:0,u:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:5}}},r:{docs:{},df:0,c:{docs:{},df:0,i:{docs:{},df:0,s:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:1}}}}},h:{docs:{},df:0,a:{docs:{},df:0,u:{docs:{},df:0,s:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:2}}}}},i:{docs:{},df:0,s:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:2}},df:8}}},o:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}},p:{docs:{},df:0,a:{docs:{},df:0,n:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}},e:{docs:{},df:0,c:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/":{tf:1},"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2}},df:2,"(":{docs:{},df:0,'"':{docs:{},df:0,f:{docs:{},df:0,a:{docs:{},df:0,i:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1}},df:1}}}}},a:{docs:{},df:0,n:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}},n:{docs:{},df:0,s:{docs:{"https://breakbuild.dev/devlog/motivation/":{tf:1}},df:1}},r:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.449489742783178},"https://breakbuild.dev/devlog/motivation/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:3,e:{docs:{},df:0,n:{docs:{},df:0,c:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772}},df:1}}},m:{docs:{},df:0,e:{docs:{},df:0,n:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:2}}}}}}},l:{docs:{},df:0,a:{docs:{},df:0,i:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1}},df:3}},n:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:3}},i:{docs:{},df:0,c:{docs:{},df:0,i:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:2,l:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1}},df:1}}}}}},o:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/chapter/":{tf:1}},df:3,a:{docs:{},df:0,t:{docs:{},df:0,o:{docs:{},df:0,r:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1}},df:1}}}}}}}},o:{docs:{},df:0,r:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:3}},s:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:2},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.4142135623730951}},df:5}},r:{docs:{},df:0,e:{docs:{},df:0,s:{docs:{},df:0,s:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772}},df:1}}}}},t:{docs:{},df:0,e:{docs:{},df:0,n:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1}},df:2},s:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:2}},df:3},t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1}},df:2,"(":{docs:{},df:0,e:{docs:{},df:0,s:{docs:{},df:0,p:{docs:{},df:0,e:{docs:{},df:0,c:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}}}}},r:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:2.6457513110645907}},df:3}}},r:{docs:{},df:0,a:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:2,c:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:1}}}}}},y:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:1}},f:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:2,".":{docs:{},df:0,a:{docs:{},df:0,".":{docs:{},df:0,q:{docs:{},df:0,"'":{docs:{"https://breakbuild.dev/blog/":{tf:1}},df:1}}}}},3:{docs:{},df:0,2:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:2},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:4.898979485566356}},df:5,")":{docs:{},df:0,"&":{docs:{},df:0,g:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:1}}}}}},a:{docs:{},df:0,c:{docs:{},df:0,e:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1}},df:2},t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2},"https://breakbuild.dev/devlog/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:5,o:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1}},df:2},u:{docs:{},df:0,a:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/":{tf:1},"https://breakbuild.dev/support/":{tf:1}},df:2}}}}},d:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1},i:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:4,e:{docs:{},df:0,d:{docs:{},df:0,t:{docs:{},df:0,o:{docs:{},df:0,c:{docs:{},df:0,r:{docs:{},df:0,e:{docs:{},df:0,a:{docs:{},df:0,t:{docs:{},df:0,e:{docs:{},df:0,c:{docs:{},df:0,o:{docs:{},df:0,n:{docs:{},df:0,t:{docs:{},df:0,e:{docs:{},df:0,x:{docs:{},df:0,t:{docs:{},df:0,"(":{docs:{},df:0,s:{docs:{},df:0,t:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951}},df:1}}}}}}}}}}}}}}}}}}}}},u:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1.4142135623730951}},df:1}}},r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1,l:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:2}}}},l:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1,b:{docs:{},df:0,a:{docs:{},df:0,c:{docs:{},df:0,k:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:3,s:{docs:{},df:0,":":{docs:{},df:0,":":{docs:{},df:0,a:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:1}}}}}}}}},i:{docs:{},df:0,b:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:1,e:{docs:{},df:0,_:{docs:{},df:0,f:{docs:{},df:0,u:{docs:{},df:0,n:{docs:{},df:0,c:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}}}}}},t:{docs:{},df:0,h:{docs:{},df:0,r:{docs:{},df:0,o:{docs:{},df:0,u:{docs:{},df:0,g:{docs:{},df:0,h:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951}},df:1}}}}}}}},s:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1}},df:4}},m:{docs:{},df:0,i:{docs:{},df:0,l:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1}},df:1,a:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:2}}}}}},n:{docs:{},df:0,c:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/motivation/":{tf:1},"https://breakbuild.dev/devlog/renderer/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:6},y:{docs:{},df:0,_:{docs:{},df:0,s:{docs:{},df:0,h:{docs:{},df:0,a:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}}}},r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.8284271247461903},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.4142135623730951}},df:7,t:{docs:{},df:0,'"':{docs:{},df:0,".":{docs:{},df:0,b:{docs:{},df:0,a:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}},t:{docs:{},df:0,o:{docs:{},df:0,_:{docs:{},df:0,s:{docs:{},df:0,t:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}}}}}},s:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/motivation/":{tf:1}},df:2}},v:{docs:{},df:0,o:{docs:{},df:0,r:{docs:{},df:0,i:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772}},df:1}}}}}},e:{docs:{},df:0,a:{docs:{},df:0,t:{docs:{},df:0,u:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:4.58257569495584},"https://breakbuild.dev/devlog/motivation/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:9,e:{docs:{},df:0,s:{docs:{},df:0,"(":{docs:{},df:0,a:{docs:{},df:0,n:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}},t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1},u:{docs:{},df:0,t:{docs:{},df:0,o:{docs:{},df:0,m:{docs:{},df:0,a:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}}}}}}}}}},e:{docs:{},df:0,b:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951}},df:1}},d:{docs:{},df:0,b:{docs:{},df:0,a:{docs:{},df:0,c:{docs:{},df:0,k:{docs:{"https://breakbuild.dev/":{tf:1}},df:1}}}}},l:{docs:{"https://breakbuild.dev/blog/":{tf:1},"https://breakbuild.dev/blog/my-year-with-rust/":{tf:3.1622776601683795},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/chapter/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1},"https://breakbuild.dev/support/":{tf:1}},df:10}},l:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:1}},r:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:1}},t:{docs:{},df:0,c:{docs:{},df:0,h:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1}},df:1}}},w:{docs:{"https://breakbuild.dev/blog/":{tf:1},"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.449489742783178},"https://breakbuild.dev/devlog/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1.4142135623730951},"https://breakbuild.dev/support/":{tf:1}},df:8,e:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:2}}},z:{docs:{"https://breakbuild.dev/devlog/motivation/":{tf:1}},df:1}},f:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1.4142135623730951}},df:3,"(":{docs:{},df:0,b:{docs:{},df:0,a:{docs:{},df:0,s:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:1}}},r:{docs:{},df:0,e:{docs:{},df:0,p:{docs:{},df:0,t:{docs:{},df:0,"(":{docs:{},df:0,c:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:1}}}}}}},":":{docs:{},df:0,":":{docs:{},df:0,c:{docs:{},df:0,_:{docs:{},df:0,f:{docs:{},df:0,l:{docs:{},df:0,o:{docs:{},df:0,a:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1.4142135623730951}},df:1}}}}},u:{docs:{},df:0,i:{docs:{},df:0,n:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1.4142135623730951}},df:1}}}}}}}}}},i:{docs:{},df:0,d:{docs:{},df:0,d:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:2}}},e:{docs:{},df:0,l:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:3.1622776601683795},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1}},df:5}}},g:{docs:{},df:0,h:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2}},df:1}},u:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1}},df:3}}},l:{docs:{},df:0,e:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:2},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:2.6457513110645907}},df:7,":":{docs:{},df:0,":":{docs:{},df:0,c:{docs:{},df:0,r:{docs:{},df:0,e:{docs:{},df:0,a:{docs:{},df:0,t:{docs:{},df:0,e:{docs:{},df:0,"(":{docs:{},df:0,'"':{docs:{},df:0,g:{docs:{},df:0,l:{docs:{},df:0,4:{docs:{},df:0,3:{docs:{},df:0,_:{docs:{},df:0,c:{docs:{},df:0,o:{docs:{},df:0,r:{docs:{},df:0,e:{docs:{},df:0,".":{docs:{},df:0,r:{docs:{},df:0,s:{docs:{},df:0,'"':{docs:{},df:0,")":{docs:{},df:0,".":{docs:{},df:0,u:{docs:{},df:0,n:{docs:{},df:0,w:{docs:{},df:0,r:{docs:{},df:0,a:{docs:{},df:0,p:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},s:{docs:{},df:0,"(":{docs:{},df:0,o:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}},l:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1}},df:1},t:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}},n:{docs:{},df:0,a:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/motivation/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:2.8284271247461903},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.7320508075688772}},df:10}},d:{docs:{"https://breakbuild.dev/":{tf:1},"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1},"https://breakbuild.dev/support/":{tf:1}},df:9,p:{docs:{},df:0,a:{docs:{},df:0,c:{docs:{},df:0,k:{docs:{},df:0,a:{docs:{},df:0,g:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}}},e:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.449489742783178},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:7},i:{docs:{},df:0,s:{docs:{},df:0,h:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/motivation/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:4}}}},r:{docs:{},df:0,s:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.449489742783178},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:3.7416573867739413},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:2.8284271247461903},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:2.8284271247461903},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.7320508075688772}},df:13,h:{docs:{},df:0,a:{docs:{},df:0,n:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}}},t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:3},x:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.4142135623730951}},df:2},z:{docs:{},df:0,z:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}},l:{docs:{},df:0,a:{docs:{},df:0,g:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:2},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1.4142135623730951}},df:7},t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772}},df:1,t:{docs:{},df:0,e:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772}},df:1}}}},v:{docs:{},df:0,o:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.4142135623730951}},df:1}}}},e:{docs:{},df:0,x:{docs:{},df:0,i:{docs:{},df:0,b:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.4142135623730951}},df:4}}}}},i:{docs:{},df:0,p:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}},o:{docs:{},df:0,a:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:2.449489742783178},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:5}},o:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}},w:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}},u:{docs:{},df:0,f:{docs:{},df:0,f:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}},m:{docs:{},df:0,t:{docs:{},df:0,"(":{docs:{},df:0,"&":{docs:{},df:0,a:{docs:{},df:0,m:{docs:{},df:0,p:{docs:{},df:0,";":{docs:{},df:0,s:{docs:{},df:0,e:{docs:{},df:0,l:{docs:{},df:0,f:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:2}}}}}}}}}}}},n:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:4.123105625617661},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:2.6457513110645907},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:2.449489742783178},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:3.872983346207417},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:3.7416573867739413},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.4142135623730951}},df:10,"(":{docs:{},df:0,"&":{docs:{},df:0,a:{docs:{},df:0,m:{docs:{},df:0,p:{docs:{},df:0,";":{docs:{},df:0,s:{docs:{},df:0,t:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:2}},df:1}}}}}}}},m:{docs:{},df:0,a:{docs:{},df:0,s:{docs:{},df:0,k:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1.4142135623730951}},df:1}}}}},_:{docs:{},df:0,p:{docs:{},df:0,t:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1.4142135623730951}},df:1,s:{docs:{},df:0,":":{docs:{},df:0,":":{docs:{},df:0,c:{docs:{},df:0,l:{docs:{},df:0,e:{docs:{},df:0,a:{docs:{},df:0,r:{docs:{},df:0,".":{docs:{},df:0,l:{docs:{},df:0,o:{docs:{},df:0,a:{docs:{},df:0,d:{docs:{},df:0,"(":{docs:{},df:0,"&":{docs:{},df:0,a:{docs:{},df:0,m:{docs:{},df:0,p:{docs:{},df:0,";":{docs:{},df:0,l:{docs:{},df:0,o:{docs:{},df:0,a:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:1}}}},p:{docs:{},df:0,r:{docs:{},df:0,o:{docs:{},df:0,c:{docs:{},df:0,_:{docs:{},df:0,a:{docs:{},df:0,d:{docs:{},df:0,d:{docs:{},df:0,r:{docs:{},df:0,e:{docs:{},df:0,s:{docs:{},df:0,s:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:1}}}}}}}}}}}}}}}}}}}}}}},_:{docs:{},df:0,c:{docs:{},df:0,o:{docs:{},df:0,l:{docs:{},df:0,o:{docs:{},df:0,r:{docs:{},df:0,".":{docs:{},df:0,l:{docs:{},df:0,o:{docs:{},df:0,a:{docs:{},df:0,d:{docs:{},df:0,"(":{docs:{},df:0,"&":{docs:{},df:0,a:{docs:{},df:0,m:{docs:{},df:0,p:{docs:{},df:0,";":{docs:{},df:0,l:{docs:{},df:0,o:{docs:{},df:0,a:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:1}}}},p:{docs:{},df:0,r:{docs:{},df:0,o:{docs:{},df:0,c:{docs:{},df:0,_:{docs:{},df:0,a:{docs:{},df:0,d:{docs:{},df:0,d:{docs:{},df:0,r:{docs:{},df:0,e:{docs:{},df:0,s:{docs:{},df:0,s:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},p:{docs:{},df:0,t:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:2}},df:1}}}},o:{docs:{},df:0,c:{docs:{},df:0,u:{docs:{"https://breakbuild.dev/blog/":{tf:1},"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1}},df:4,s:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}},l:{docs:{},df:0,l:{docs:{},df:0,o:{docs:{},df:0,w:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.449489742783178},"https://breakbuild.dev/devlog/motivation/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.4142135623730951},"https://breakbuild.dev/support/":{tf:1}},df:10}}}},o:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:3.4641016151377544}},df:1,'"':{docs:{},df:0,".":{docs:{},df:0,i:{docs:{},df:0,n:{docs:{},df:0,t:{docs:{},df:0,o:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}},t:{docs:{},df:0,o:{docs:{},df:0,_:{docs:{},df:0,o:{docs:{},df:0,w:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}},s:{docs:{},df:0,t:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951}},df:1}}}}}}}},".":{docs:{},df:0,a:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1},b:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1},g:{docs:{},df:0,e:{docs:{},df:0,t:{docs:{},df:0,_:{docs:{},df:0,a:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1},b:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}},r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951}},df:1},u:{docs:{},df:0,n:{docs:{},df:0,w:{docs:{},df:0,r:{docs:{},df:0,a:{docs:{},df:0,p:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}}},"/":{docs:{},df:0,m:{docs:{},df:0,o:{docs:{},df:0,d:{docs:{},df:0,".":{docs:{},df:0,r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}},":":{docs:{},df:0,":":{docs:{},df:0,b:{docs:{},df:0,a:{docs:{},df:0,r:{docs:{},df:0,"(":{docs:{},df:0,'"':{docs:{},df:0,f:{docs:{},df:0,o:{docs:{},df:0,o:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}},"&":{docs:{},df:0,a:{docs:{},df:0,m:{docs:{},df:0,p:{docs:{},df:0,";":{docs:{},df:0,3:{docs:{},df:0,2:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}}}}}}},f:{docs:{},df:0,o:{docs:{},df:0,o:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}},l:{docs:{},df:0,i:{docs:{},df:0,s:{docs:{},df:0,h:{docs:{"https://breakbuild.dev/support/":{tf:1}},df:1}}}}},r:{docs:{},df:0,b:{docs:{},df:0,i:{docs:{},df:0,d:{docs:{},df:0,d:{docs:{},df:0,e:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951}},df:1}}}}}},c:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1}},df:4},e:{docs:{},df:0,i:{docs:{},df:0,g:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:1}}},m:{docs:{},df:0,o:{docs:{},df:0,s:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:2}}}},s:{docs:{},df:0,e:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1},i:{docs:{},df:0,g:{docs:{},df:0,h:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:3}}}}}},g:{docs:{},df:0,e:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.4142135623730951}},df:8}},o:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1,t:{docs:{},df:0,e:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}},k:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1},m:{docs:{},df:0,a:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/renderer/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:7,_:{docs:{},df:0,t:{docs:{},df:0,i:{docs:{},df:0,m:{docs:{},df:0,e:{docs:{},df:0,s:{docs:{},df:0,t:{docs:{},df:0,a:{docs:{},df:0,m:{docs:{},df:0,p:{docs:{},df:0,"(":{docs:{},df:0,n:{docs:{},df:0,o:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:1}}}}}}}}}}}}}}}},e:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}},t:{docs:{},df:0,h:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1}},df:1}},u:{docs:{},df:0,m:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}},w:{docs:{},df:0,a:{docs:{},df:0,r:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.449489742783178},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:6}}}}},u:{docs:{},df:0,n:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1}},df:3,a:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}},r:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1}},df:1,t:{docs:{},df:0,h:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1}},df:1}}}}},r:{docs:{},df:0,a:{docs:{},df:0,g:{docs:{},df:0,_:{docs:{},df:0,s:{docs:{},df:0,o:{docs:{},df:0,u:{docs:{},df:0,r:{docs:{},df:0,c:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.7320508075688772}},df:1,e:{docs:{},df:0,".":{docs:{},df:0,a:{docs:{},df:0,s:{docs:{},df:0,_:{docs:{},df:0,p:{docs:{},df:0,t:{docs:{},df:0,r:{docs:{},df:0,"(":{docs:{},df:0,")":{docs:{},df:0,"]":{docs:{},df:0,".":{docs:{},df:0,a:{docs:{},df:0,s:{docs:{},df:0,_:{docs:{},df:0,p:{docs:{},df:0,t:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.7320508075688772}},df:1}}}}}}}}}}}}}}}}}}}}}}}},m:{docs:{},df:0,e:{docs:{},df:0,n:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:4.242640687119285}},df:1,_:{docs:{},df:0,c:{docs:{},df:0,o:{docs:{},df:0,l:{docs:{},df:0,o:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:3.4641016151377544}},df:1}}}}}}}}}}},m:{docs:{},df:0,e:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1}},df:2,"(":{docs:{},df:0,s:{docs:{},df:0,i:{docs:{},df:0,n:{docs:{},df:0,c:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:1}}}}},w:{docs:{},df:0,o:{docs:{},df:0,r:{docs:{},df:0,k:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1}},df:1}}}}}},n:{docs:{},df:0,k:{docs:{},df:0,l:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.4142135623730951}},df:2}}}}},e:{docs:{},df:0,e:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1},"https://breakbuild.dev/support/":{tf:1}},df:8,"(":{docs:{},df:0,e:{docs:{},df:0,x:{docs:{},df:0,c:{docs:{},df:0,e:{docs:{},df:0,p:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/motivation/":{tf:1}},df:1}}}}}}},l:{docs:{},df:0,a:{docs:{},df:0,n:{docs:{},df:0,c:{docs:{"https://breakbuild.dev/":{tf:1},"https://breakbuild.dev/devlog/motivation/":{tf:1}},df:2}}}}},q:{docs:{},df:0,u:{docs:{},df:0,e:{docs:{},df:0,n:{docs:{},df:0,c:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1.4142135623730951}},df:1},t:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1}},df:1}}}}}},i:{docs:{},df:0,c:{docs:{},df:0,k:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1},t:{docs:{},df:0,i:{docs:{},df:0,o:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}},e:{docs:{},df:0,n:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1}},df:3}}}},o:{docs:{},df:0,m:{docs:{},df:0,"/":{docs:{},df:0,t:{docs:{},df:0,o:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}},_:{docs:{},df:0,r:{docs:{},df:0,g:{docs:{},df:0,b:{docs:{},df:0,"(":{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:1}},a:{docs:{},df:0,"(":{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:1}}}}}}}},n:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.4142135623730951}},df:2}}},u:{docs:{},df:0,s:{docs:{},df:0,t:{docs:{},df:0,r:{docs:{},df:0,a:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/motivation/":{tf:1}},df:2,i:{docs:{},df:0,n:{docs:{},df:0,g:{docs:{},df:0,"(":{docs:{},df:0,t:{docs:{},df:0,h:{docs:{},df:0,o:{docs:{},df:0,u:{docs:{},df:0,g:{docs:{},df:0,h:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}}}}}}}}}}}}},s:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:2.8284271247461903}},df:1,_:{docs:{},df:0,s:{docs:{},df:0,o:{docs:{},df:0,u:{docs:{},df:0,r:{docs:{},df:0,c:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.4142135623730951}},df:1}}}}}}},u:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951}},df:1,l:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/":{tf:1},"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/":{tf:1},"https://breakbuild.dev/devlog/renderer/":{tf:1},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1}},df:5,i:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951}},df:1}}},n:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2},"https://breakbuild.dev/devlog/":{tf:1},"https://breakbuild.dev/devlog/motivation/":{tf:2.449489742783178},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:5,c:{docs:{},df:0,t:{docs:{},df:0,i:{docs:{},df:0,o:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:4.795831523312719},"https://breakbuild.dev/devlog/renderer/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:2.449489742783178},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:3.7416573867739413},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:3.7416573867739413},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:4.58257569495584},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:5.385164807134504},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:4.58257569495584}},df:12,"/":{docs:{},df:0,s:{docs:{},df:0,t:{docs:{},df:0,r:{docs:{},df:0,u:{docs:{},df:0,c:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:1}}}}}}},s:{docs:{},df:0,"/":{docs:{},df:0,t:{docs:{},df:0,y:{docs:{},df:0,p:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:1}}}}}}}}}},d:{docs:{},df:0,a:{docs:{},df:0,m:{docs:{},df:0,e:{docs:{},df:0,n:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:2}}}}}},n:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1}},df:1}}},r:{docs:{},df:0,t:{docs:{},df:0,h:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/":{tf:1},"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:6}}}}},s:{docs:{},df:0,e:{docs:{"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1}},df:1}},t:{docs:{},df:0,u:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.4142135623730951}},df:6}}}}},g:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:2.6457513110645907}},df:1,1:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1},2:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1},a:{docs:{},df:0,i:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:1,s:{docs:{},df:0,b:{docs:{},df:0,o:{docs:{},df:0,r:{docs:{},df:0,o:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:1}}}}}}},m:{docs:{},df:0,e:{docs:{"https://breakbuild.dev/":{tf:2.23606797749979},"https://breakbuild.dev/blog/my-year-with-rust/":{tf:3.605551275463989},"https://breakbuild.dev/devlog/":{tf:1},"https://breakbuild.dev/devlog/motivation/":{tf:3.3166247903554},"https://breakbuild.dev/devlog/renderer/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.4142135623730951},"https://breakbuild.dev/support/":{tf:1}},df:10}},t:{docs:{},df:0,s:{docs:{},df:0,"(":{docs:{},df:0,g:{docs:{},df:0,e:{docs:{},df:0,n:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}}}},v:{docs:{},df:0,e:{docs:{"https://breakbuild.dev/devlog/motivation/":{tf:1}},df:1}}},b:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1},e:{docs:{},df:0,e:{docs:{},df:0,z:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:1}},n:{docs:{},df:0,b:{docs:{},df:0,u:{docs:{},df:0,f:{docs:{},df:0,f:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1}},df:1}}}},e:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:5.744562646538029},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:2.8284271247461903},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:4},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/chapter/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:2},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:2.449489742783178},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:3.3166247903554},"https://breakbuild.dev/support/":{tf:1}},df:13,a:{docs:{},df:0,l:{docs:{},df:0,"(":{docs:{},df:0,o:{docs:{},df:0,f:{docs:{},df:0,t:{docs:{},df:0,e:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}}},t:{docs:{},df:0,o:{docs:{},df:0,r:{docs:{},df:0,1:{docs:{},df:0,6:{docs:{},df:0,".":{docs:{},df:0,4:{docs:{},df:0,7:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:1}}}}}}}}}}},u:{docs:{},df:0,i:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/devlog/":{tf:1}},df:1}}}},o:{docs:{},df:0,m:{docs:{},df:0,e:{docs:{},df:0,t:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1}},df:1,i:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1}},df:1}}}}}},r:{docs:{},df:0,m:{docs:{},df:0,a:{docs:{},df:0,n:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/":{tf:1}},df:1}}}}},t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/motivation/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:5,_:{docs:{},df:0,a:{docs:{},df:0,"(":{docs:{},df:0,"&":{docs:{},df:0,a:{docs:{},df:0,m:{docs:{},df:0,p:{docs:{},df:0,";":{docs:{},df:0,m:{docs:{},df:0,u:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}}}}}},b:{docs:{},df:0,"(":{docs:{},df:0,"&":{docs:{},df:0,a:{docs:{},df:0,m:{docs:{},df:0,p:{docs:{},df:0,";":{docs:{},df:0,m:{docs:{},df:0,u:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}}}}}},o:{docs:{},df:0,r:{docs:{},df:0,_:{docs:{},df:0,i:{docs:{},df:0,n:{docs:{},df:0,s:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{},df:0,t:{docs:{},df:0,"(":{docs:{},df:0,"&":{docs:{},df:0,a:{docs:{},df:0,m:{docs:{},df:0,p:{docs:{},df:0,";":{docs:{},df:0,m:{docs:{},df:0,u:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}}}}}}}}}}}}}},p:{docs:{},df:0,r:{docs:{},df:0,o:{docs:{},df:0,c:{docs:{},df:0,_:{docs:{},df:0,a:{docs:{},df:0,d:{docs:{},df:0,d:{docs:{},df:0,r:{docs:{},df:0,e:{docs:{},df:0,s:{docs:{},df:0,s:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1}},df:1,"(":{docs:{},df:0,"&":{docs:{},df:0,a:{docs:{},df:0,m:{docs:{},df:0,p:{docs:{},df:0,";":{docs:{},df:0,m:{docs:{},df:0,u:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1.4142135623730951}},df:2}}}}}}}}}}}}}}}}}}}}},s:{docs:{},df:0,h:{docs:{},df:0,a:{docs:{},df:0,d:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{},df:0,_:{docs:{},df:0,m:{docs:{},df:0,u:{docs:{},df:0,t:{docs:{},df:0,_:{docs:{},df:0,a:{docs:{},df:0,n:{docs:{},df:0,d:{docs:{},df:0,_:{docs:{},df:0,t:{docs:{},df:0,e:{docs:{},df:0,x:{docs:{},df:0,t:{docs:{},df:0,u:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}}}}}}}}}}}}}}}}}},t:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:2}}}}},f:{docs:{},df:0,x:{docs:{},df:0,d:{docs:{},df:0,e:{docs:{},df:0,v:{docs:{},df:0,i:{docs:{},df:0,c:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1}},df:1}}}}}}},i:{docs:{},df:0,g:{docs:{},df:0,a:{docs:{},df:0,n:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}},t:{docs:{"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1}},df:1,h:{docs:{},df:0,u:{docs:{},df:0,b:{docs:{"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1},"https://breakbuild.dev/support/":{tf:1.4142135623730951}},df:2}}},i:{docs:{},df:0,g:{docs:{},df:0,n:{docs:{},df:0,o:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1.4142135623730951}},df:1}}}}}},v:{docs:{},df:0,e:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/motivation/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1.4142135623730951}},df:7,n:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:2}}}},l:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:2.6457513110645907},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:2.8284271247461903},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:2.8284271247461903},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:3}},df:8,"(":{docs:{},df:0,o:{docs:{},df:0,p:{docs:{},df:0,e:{docs:{},df:0,n:{docs:{},df:0,g:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:1}}}}}}},".":{docs:{},df:0,x:{docs:{},df:0,m:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1.4142135623730951}},df:1}}}},3:{docs:{},df:0,3:{docs:{},df:0,"(":{docs:{},df:0,o:{docs:{},df:0,p:{docs:{},df:0,e:{docs:{},df:0,n:{docs:{},df:0,g:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:1}}}}}}}}},4:{docs:{},df:0,3:{docs:{},df:0,_:{docs:{},df:0,c:{docs:{},df:0,o:{docs:{},df:0,r:{docs:{},df:0,e:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.4142135623730951}},df:1,".":{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.4142135623730951}},df:1}}}}}}}}},":":{docs:{},df:0,":":{docs:{},df:0,a:{docs:{},df:0,r:{docs:{},df:0,r:{docs:{},df:0,a:{docs:{},df:0,y:{docs:{},df:0,_:{docs:{},df:0,b:{docs:{},df:0,u:{docs:{},df:0,f:{docs:{},df:0,f:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1}},df:2}}}}}}}}},t:{docs:{},df:0,t:{docs:{},df:0,a:{docs:{},df:0,c:{docs:{},df:0,h:{docs:{},df:0,s:{docs:{},df:0,h:{docs:{},df:0,a:{docs:{},df:0,d:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{},df:0,"(":{docs:{},df:0,p:{docs:{},df:0,r:{docs:{},df:0,o:{docs:{},df:0,g:{docs:{},df:0,r:{docs:{},df:0,a:{docs:{},df:0,m:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:2.449489742783178}},df:1}}}}}}}}}}}}}}}}}}}},b:{docs:{},df:0,i:{docs:{},df:0,n:{docs:{},df:0,d:{docs:{},df:0,b:{docs:{},df:0,u:{docs:{},df:0,f:{docs:{},df:0,f:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1}},df:1,e:{docs:{},df:0,r:{docs:{},df:0,"(":{docs:{},df:0,g:{docs:{},df:0,l:{docs:{},df:0,":":{docs:{},df:0,":":{docs:{},df:0,a:{docs:{},df:0,r:{docs:{},df:0,r:{docs:{},df:0,a:{docs:{},df:0,y:{docs:{},df:0,_:{docs:{},df:0,b:{docs:{},df:0,u:{docs:{},df:0,f:{docs:{},df:0,f:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1}},df:3}}}}}}}}}}}}}}}}}}}}},v:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{},df:0,t:{docs:{},df:0,e:{docs:{},df:0,x:{docs:{},df:0,a:{docs:{},df:0,r:{docs:{},df:0,r:{docs:{},df:0,a:{docs:{},df:0,y:{docs:{},df:0,"(":{docs:{},df:0,v:{docs:{},df:0,a:{docs:{},df:0,o:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1}},df:3}}}}}}}}},b:{docs:{},df:0,u:{docs:{},df:0,f:{docs:{},df:0,f:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{},df:0,"(":{docs:{},df:0,0:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1.4142135623730951}},df:2}}}}}}}}}}}}}}}}},u:{docs:{},df:0,f:{docs:{},df:0,f:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{},df:0,d:{docs:{},df:0,a:{docs:{},df:0,t:{docs:{},df:0,a:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1}},df:2}}}}}}}}}},c:{docs:{},df:0,l:{docs:{},df:0,e:{docs:{},df:0,a:{docs:{},df:0,r:{docs:{},df:0,"(":{docs:{},df:0,g:{docs:{},df:0,l:{docs:{},df:0,":":{docs:{},df:0,":":{docs:{},df:0,c:{docs:{},df:0,o:{docs:{},df:0,l:{docs:{},df:0,o:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:1,_:{docs:{},df:0,b:{docs:{},df:0,u:{docs:{},df:0,f:{docs:{},df:0,f:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{},df:0,_:{docs:{},df:0,b:{docs:{},df:0,i:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.7320508075688772}},df:4}}}}}}}}}}}}}}}}}}}}},c:{docs:{},df:0,o:{docs:{},df:0,l:{docs:{},df:0,o:{docs:{},df:0,r:{docs:{},df:0,"(":{docs:{},df:0,1:{docs:{},df:0,".":{docs:{},df:0,0:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.4142135623730951}},df:3}}},c:{docs:{},df:0,o:{docs:{},df:0,l:{docs:{},df:0,o:{docs:{},df:0,r:{docs:{},df:0,".":{docs:{},df:0,0:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:1}}}}}}},r:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:1}}}}}}}}}}},o:{docs:{},df:0,m:{docs:{},df:0,p:{docs:{},df:0,i:{docs:{},df:0,l:{docs:{},df:0,e:{docs:{},df:0,s:{docs:{},df:0,h:{docs:{},df:0,a:{docs:{},df:0,d:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{},df:0,"(":{docs:{},df:0,f:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.7320508075688772}},df:1},v:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.7320508075688772}},df:1}}}}}}}}}}}}}},r:{docs:{},df:0,e:{docs:{},df:0,a:{docs:{},df:0,t:{docs:{},df:0,e:{docs:{},df:0,p:{docs:{},df:0,r:{docs:{},df:0,o:{docs:{},df:0,g:{docs:{},df:0,r:{docs:{},df:0,a:{docs:{},df:0,m:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.7320508075688772}},df:1}}}}}}},s:{docs:{},df:0,h:{docs:{},df:0,a:{docs:{},df:0,d:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{},df:0,"(":{docs:{},df:0,g:{docs:{},df:0,l:{docs:{},df:0,":":{docs:{},df:0,":":{docs:{},df:0,f:{docs:{},df:0,r:{docs:{},df:0,a:{docs:{},df:0,g:{docs:{},df:0,m:{docs:{},df:0,e:{docs:{},df:0,n:{docs:{},df:0,t:{docs:{},df:0,_:{docs:{},df:0,s:{docs:{},df:0,h:{docs:{},df:0,a:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.7320508075688772}},df:1}}}}}}}}}}}}},v:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{},df:0,t:{docs:{},df:0,e:{docs:{},df:0,x:{docs:{},df:0,_:{docs:{},df:0,s:{docs:{},df:0,h:{docs:{},df:0,a:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.7320508075688772}},df:1}}}}}}}}}}}}}}}}}}}}}}}}}}}},d:{docs:{},df:0,e:{docs:{},df:0,b:{docs:{},df:0,u:{docs:{},df:0,g:{docs:{},df:0,_:{docs:{},df:0,s:{docs:{},df:0,e:{docs:{},df:0,v:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{},df:0,i:{docs:{},df:0,t:{docs:{},df:0,y:{docs:{},df:0,_:{docs:{},df:0,h:{docs:{},df:0,i:{docs:{},df:0,g:{docs:{},df:0,h:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:1}}}},l:{docs:{},df:0,o:{docs:{},df:0,w:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:1}}},m:{docs:{},df:0,e:{docs:{},df:0,d:{docs:{},df:0,i:{docs:{},df:0,u:{docs:{},df:0,m:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:1}}}}}},n:{docs:{},df:0,o:{docs:{},df:0,t:{docs:{},df:0,i:{docs:{},df:0,f:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:1}}}}}}}}}}}}},o:{docs:{},df:0,u:{docs:{},df:0,r:{docs:{},df:0,c:{docs:{},df:0,e:{docs:{},df:0,_:{docs:{},df:0,a:{docs:{},df:0,p:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:1},p:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:1}}}},o:{docs:{},df:0,t:{docs:{},df:0,h:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:1}}},s:{docs:{},df:0,h:{docs:{},df:0,a:{docs:{},df:0,d:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{},df:0,_:{docs:{},df:0,c:{docs:{},df:0,o:{docs:{},df:0,m:{docs:{},df:0,p:{docs:{},df:0,i:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:1}}}}}}}}}}}}},t:{docs:{},df:0,h:{docs:{},df:0,i:{docs:{},df:0,r:{docs:{},df:0,d:{docs:{},df:0,_:{docs:{},df:0,p:{docs:{},df:0,a:{docs:{},df:0,r:{docs:{},df:0,t:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:1}}}}}}}}}}},w:{docs:{},df:0,i:{docs:{},df:0,n:{docs:{},df:0,d:{docs:{},df:0,o:{docs:{},df:0,w:{docs:{},df:0,_:{docs:{},df:0,s:{docs:{},df:0,y:{docs:{},df:0,s:{docs:{},df:0,t:{docs:{},df:0,e:{docs:{},df:0,m:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:1}}}}}}}}}}}}}}}}}}}},t:{docs:{},df:0,y:{docs:{},df:0,p:{docs:{},df:0,e:{docs:{},df:0,_:{docs:{},df:0,d:{docs:{},df:0,e:{docs:{},df:0,p:{docs:{},df:0,r:{docs:{},df:0,e:{docs:{},df:0,c:{docs:{},df:0,a:{docs:{},df:0,t:{docs:{},df:0,e:{docs:{},df:0,d:{docs:{},df:0,_:{docs:{},df:0,b:{docs:{},df:0,e:{docs:{},df:0,h:{docs:{},df:0,a:{docs:{},df:0,v:{docs:{},df:0,i:{docs:{},df:0,o:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:1}}}}}}}}}}}}}}}}}}},e:{docs:{},df:0,r:{docs:{},df:0,r:{docs:{},df:0,o:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:1}}}}},p:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{},df:0,f:{docs:{},df:0,o:{docs:{},df:0,r:{docs:{},df:0,m:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:1}}}}}},o:{docs:{},df:0,r:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:1}}}},u:{docs:{},df:0,n:{docs:{},df:0,d:{docs:{},df:0,e:{docs:{},df:0,f:{docs:{},df:0,i:{docs:{},df:0,n:{docs:{},df:0,e:{docs:{},df:0,d:{docs:{},df:0,_:{docs:{},df:0,b:{docs:{},df:0,e:{docs:{},df:0,h:{docs:{},df:0,a:{docs:{},df:0,v:{docs:{},df:0,i:{docs:{},df:0,o:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:1}}}}}}}}}}}}}}}}}}}}}}}},m:{docs:{},df:0,e:{docs:{},df:0,s:{docs:{},df:0,s:{docs:{},df:0,a:{docs:{},df:0,g:{docs:{},df:0,e:{docs:{},df:0,c:{docs:{},df:0,a:{docs:{},df:0,l:{docs:{},df:0,l:{docs:{},df:0,b:{docs:{},df:0,a:{docs:{},df:0,c:{docs:{},df:0,k:{docs:{},df:0,"(":{docs:{},df:0,s:{docs:{},df:0,o:{docs:{},df:0,m:{docs:{},df:0,e:{docs:{},df:0,"(":{docs:{},df:0,d:{docs:{},df:0,e:{docs:{},df:0,b:{docs:{},df:0,u:{docs:{},df:0,g:{docs:{},df:0,_:{docs:{},df:0,c:{docs:{},df:0,a:{docs:{},df:0,l:{docs:{},df:0,l:{docs:{},df:0,b:{docs:{},df:0,a:{docs:{},df:0,c:{docs:{},df:0,k:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},l:{docs:{},df:0,e:{docs:{},df:0,t:{docs:{},df:0,e:{docs:{},df:0,b:{docs:{},df:0,u:{docs:{},df:0,f:{docs:{},df:0,f:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1}},df:1}}}},s:{docs:{},df:0,h:{docs:{},df:0,a:{docs:{},df:0,d:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{},df:0,"(":{docs:{},df:0,f:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.4142135623730951}},df:1},v:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.4142135623730951}},df:1}}}}}}}}}}}},t:{docs:{},df:0,a:{docs:{},df:0,c:{docs:{},df:0,h:{docs:{},df:0,s:{docs:{},df:0,h:{docs:{},df:0,a:{docs:{},df:0,d:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{},df:0,"(":{docs:{},df:0,p:{docs:{},df:0,r:{docs:{},df:0,o:{docs:{},df:0,g:{docs:{},df:0,r:{docs:{},df:0,a:{docs:{},df:0,m:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:2}},df:1}}}}}}}}}}}}}}}}}}},r:{docs:{},df:0,a:{docs:{},df:0,w:{docs:{},df:0,a:{docs:{},df:0,r:{docs:{},df:0,r:{docs:{},df:0,a:{docs:{},df:0,y:{docs:{},df:0,s:{docs:{},df:0,"(":{docs:{},df:0,g:{docs:{},df:0,l:{docs:{},df:0,":":{docs:{},df:0,":":{docs:{},df:0,t:{docs:{},df:0,r:{docs:{},df:0,i:{docs:{},df:0,a:{docs:{},df:0,n:{docs:{},df:0,g:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1}},df:1,e:{docs:{},df:0,_:{docs:{},df:0,s:{docs:{},df:0,t:{docs:{},df:0,r:{docs:{},df:0,i:{docs:{},df:0,p:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1}},df:2}}}}}}}}}}}}}}}}}}}}}}}}}}}}},e:{docs:{},df:0,n:{docs:{},df:0,a:{docs:{},df:0,b:{docs:{},df:0,l:{docs:{},df:0,e:{docs:{},df:0,"(":{docs:{},df:0,g:{docs:{},df:0,l:{docs:{},df:0,":":{docs:{},df:0,":":{docs:{},df:0,d:{docs:{},df:0,e:{docs:{},df:0,b:{docs:{},df:0,u:{docs:{},df:0,g:{docs:{},df:0,_:{docs:{},df:0,o:{docs:{},df:0,u:{docs:{},df:0,t:{docs:{},df:0,p:{docs:{},df:0,u:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:1}}}}}}}}}}}}}}}}},v:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{},df:0,t:{docs:{},df:0,e:{docs:{},df:0,x:{docs:{},df:0,a:{docs:{},df:0,t:{docs:{},df:0,t:{docs:{},df:0,r:{docs:{},df:0,i:{docs:{},df:0,b:{docs:{},df:0,a:{docs:{},df:0,r:{docs:{},df:0,r:{docs:{},df:0,a:{docs:{},df:0,y:{docs:{},df:0,"(":{docs:{},df:0,0:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1.7320508075688772}},df:2}}}}}}}}}}}}}}}}}}}}}}}}},f:{docs:{},df:0,a:{docs:{},df:0,l:{docs:{},df:0,s:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:2.449489742783178}},df:2}}},l:{docs:{},df:0,o:{docs:{},df:0,a:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:2.449489742783178}},df:2}}}}},g:{docs:{},df:0,e:{docs:{},df:0,n:{docs:{},df:0,b:{docs:{},df:0,u:{docs:{},df:0,f:{docs:{},df:0,f:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1}},df:1,e:{docs:{},df:0,r:{docs:{},df:0,s:{docs:{},df:0,"(":{docs:{},df:0,1:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1}},df:2}}}}}}}}},v:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{},df:0,t:{docs:{},df:0,e:{docs:{},df:0,x:{docs:{},df:0,a:{docs:{},df:0,r:{docs:{},df:0,r:{docs:{},df:0,a:{docs:{},df:0,y:{docs:{},df:0,s:{docs:{},df:0,"(":{docs:{},df:0,1:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1.7320508075688772}},df:2}}}}}}}}}}}}}}},t:{docs:{},df:0,i:{docs:{},df:0,n:{docs:{},df:0,t:{docs:{},df:0,e:{docs:{},df:0,g:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{},df:0,v:{docs:{},df:0,"(":{docs:{},df:0,g:{docs:{},df:0,l:{docs:{},df:0,":":{docs:{},df:0,":":{docs:{},df:0,m:{docs:{},df:0,a:{docs:{},df:0,j:{docs:{},df:0,o:{docs:{},df:0,r:{docs:{},df:0,_:{docs:{},df:0,v:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{},df:0,s:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:1}}}}}}}},x:{docs:{},df:0,_:{docs:{},df:0,v:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{},df:0,t:{docs:{},df:0,e:{docs:{},df:0,x:{docs:{},df:0,_:{docs:{},df:0,a:{docs:{},df:0,t:{docs:{},df:0,t:{docs:{},df:0,r:{docs:{},df:0,i:{docs:{},df:0,b:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1}},df:1}}}}}}}}}}}}}}}},i:{docs:{},df:0,n:{docs:{},df:0,o:{docs:{},df:0,r:{docs:{},df:0,_:{docs:{},df:0,v:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{},df:0,s:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:1}}}}}}}}}}}}}}},":":{docs:{},df:0,":":{docs:{},df:0,i:{docs:{},df:0,s:{docs:{},df:0,_:{docs:{},df:0,l:{docs:{},df:0,o:{docs:{},df:0,a:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:1}}}}}}}}}}}}}}}}}}}},l:{docs:{},df:0,i:{docs:{},df:0,n:{docs:{},df:0,k:{docs:{},df:0,p:{docs:{},df:0,r:{docs:{},df:0,o:{docs:{},df:0,g:{docs:{},df:0,r:{docs:{},df:0,a:{docs:{},df:0,m:{docs:{},df:0,"(":{docs:{},df:0,p:{docs:{},df:0,r:{docs:{},df:0,o:{docs:{},df:0,g:{docs:{},df:0,r:{docs:{},df:0,a:{docs:{},df:0,m:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.7320508075688772}},df:1}}}}}}}}}}}}}}}}}},o:{docs:{},df:0,a:{docs:{},df:0,d:{docs:{},df:0,_:{docs:{},df:0,w:{docs:{},df:0,i:{docs:{},df:0,t:{docs:{},df:0,h:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:1,"(":{docs:{},df:0,"|":{docs:{},df:0,n:{docs:{},df:0,a:{docs:{},df:0,m:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1}},df:2}}},s:{docs:{},df:0,y:{docs:{},df:0,m:{docs:{},df:0,b:{docs:{},df:0,o:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.4142135623730951}},df:2}}}}}}}}}}}}}}}}},s:{docs:{},df:0,h:{docs:{},df:0,a:{docs:{},df:0,d:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{},df:0,s:{docs:{},df:0,o:{docs:{},df:0,u:{docs:{},df:0,r:{docs:{},df:0,c:{docs:{},df:0,e:{docs:{},df:0,"(":{docs:{},df:0,f:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.7320508075688772}},df:1},v:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.7320508075688772}},df:1}}}}}}}}}}}}},t:{docs:{},df:0,a:{docs:{},df:0,t:{docs:{},df:0,i:{docs:{},df:0,c:{docs:{},df:0,_:{docs:{},df:0,d:{docs:{},df:0,r:{docs:{},df:0,a:{docs:{},df:0,w:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1}},df:2}}}}}}}}}}},t:{docs:{},df:0,y:{docs:{},df:0,p:{docs:{},df:0,e:{docs:{},df:0,s:{docs:{},df:0,":":{docs:{},df:0,":":{docs:{},df:0,g:{docs:{},df:0,l:{docs:{},df:0,u:{docs:{},df:0,i:{docs:{},df:0,n:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:2.23606797749979}},df:3}}}}}}}}}}}}},u:{docs:{},df:0,s:{docs:{},df:0,e:{docs:{},df:0,p:{docs:{},df:0,r:{docs:{},df:0,o:{docs:{},df:0,g:{docs:{},df:0,r:{docs:{},df:0,a:{docs:{},df:0,m:{docs:{},df:0,"(":{docs:{},df:0,p:{docs:{},df:0,r:{docs:{},df:0,o:{docs:{},df:0,g:{docs:{},df:0,r:{docs:{},df:0,a:{docs:{},df:0,m:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1}},df:1}}}}}}},s:{docs:{},df:0,h:{docs:{},df:0,a:{docs:{},df:0,d:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{},df:0,_:{docs:{},df:0,p:{docs:{},df:0,r:{docs:{},df:0,o:{docs:{},df:0,g:{docs:{},df:0,r:{docs:{},df:0,a:{docs:{},df:0,m:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1}},df:2}}}}}}}}}}}}}}}}}}}}}}}}},v:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{},df:0,t:{docs:{},df:0,e:{docs:{},df:0,x:{docs:{},df:0,a:{docs:{},df:0,t:{docs:{},df:0,t:{docs:{},df:0,r:{docs:{},df:0,i:{docs:{},df:0,b:{docs:{},df:0,b:{docs:{},df:0,i:{docs:{},df:0,n:{docs:{},df:0,d:{docs:{},df:0,i:{docs:{},df:0,n:{docs:{},df:0,g:{docs:{},df:0,"(":{docs:{},df:0,0:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1.4142135623730951}},df:2}}}}}}}}},f:{docs:{},df:0,o:{docs:{},df:0,r:{docs:{},df:0,m:{docs:{},df:0,a:{docs:{},df:0,t:{docs:{},df:0,"(":{docs:{},df:0,0:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1.4142135623730951}},df:2}}}}}}}},p:{docs:{},df:0,o:{docs:{},df:0,i:{docs:{},df:0,n:{docs:{},df:0,t:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{},df:0,"(":{docs:{},df:0,0:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:2}},df:1}}}}}}}}}}}}}}}}}}}}}}},_:{docs:{},df:0,a:{docs:{},df:0,r:{docs:{},df:0,r:{docs:{},df:0,a:{docs:{},df:0,y:{docs:{},df:0,_:{docs:{},df:0,b:{docs:{},df:0,u:{docs:{},df:0,f:{docs:{},df:0,f:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1.4142135623730951}},df:2,e:{docs:{},df:0,r:{docs:{},df:0,_:{docs:{},df:0,a:{docs:{},df:0,r:{docs:{},df:0,b:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:1}}}}}}}}}}}}}}}},b:{docs:{},df:0,g:{docs:{},df:0,r:{docs:{},df:0,a:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:2}},df:1,"(":{docs:{},df:0,o:{docs:{},df:0,n:{docs:{},df:0,l:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1}},df:1}}}}}}}},i:{docs:{},df:0,n:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.4142135623730951}},df:1,i:{docs:{},df:0,n:{docs:{},df:0,g:{docs:{},df:0,s:{docs:{},df:0,"/":{docs:{},df:0,b:{docs:{},df:0,u:{docs:{},df:0,i:{docs:{},df:0,l:{docs:{},df:0,d:{docs:{},df:0,".":{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:1}}}}}}},c:{docs:{},df:0,a:{docs:{},df:0,r:{docs:{},df:0,g:{docs:{},df:0,o:{docs:{},df:0,".":{docs:{},df:0,t:{docs:{},df:0,o:{docs:{},df:0,m:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:1}}}}}}}}}}}}}}}}}},y:{docs:{},df:0,t:{docs:{},df:0,e:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1}},df:1}}}},c:{docs:{},df:0,a:{docs:{},df:0,l:{docs:{},df:0,l:{docs:{},df:0,"(":{docs:{},df:0,g:{docs:{},df:0,l:{docs:{},df:0,c:{docs:{},df:0,l:{docs:{},df:0,e:{docs:{},df:0,a:{docs:{},df:0,r:{docs:{},df:0,"(":{docs:{},df:0,g:{docs:{},df:0,l:{docs:{},df:0,_:{docs:{},df:0,c:{docs:{},df:0,o:{docs:{},df:0,l:{docs:{},df:0,o:{docs:{},df:0,r:{docs:{},df:0,_:{docs:{},df:0,b:{docs:{},df:0,u:{docs:{},df:0,f:{docs:{},df:0,f:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{},df:0,_:{docs:{},df:0,b:{docs:{},df:0,i:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},o:{docs:{},df:0,l:{docs:{},df:0,o:{docs:{},df:0,r:{docs:{},df:0,_:{docs:{},df:0,b:{docs:{},df:0,u:{docs:{},df:0,f:{docs:{},df:0,f:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{},df:0,_:{docs:{},df:0,b:{docs:{},df:0,i:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1.4142135623730951}},df:1}}}}}}}}}}}}}},n:{docs:{},df:0,t:{docs:{},df:0,e:{docs:{},df:0,x:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:2.23606797749979}},df:3,".":{docs:{},df:0,m:{docs:{},df:0,a:{docs:{},df:0,k:{docs:{},df:0,e:{docs:{},df:0,_:{docs:{},df:0,c:{docs:{},df:0,u:{docs:{},df:0,r:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1}},df:1}}}}}}}}},s:{docs:{},df:0,w:{docs:{},df:0,a:{docs:{},df:0,p:{docs:{},df:0,_:{docs:{},df:0,b:{docs:{},df:0,u:{docs:{},df:0,f:{docs:{},df:0,f:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1}},df:1}}}}}}}}}}}}}}}}},d:{docs:{},df:0,e:{docs:{},df:0,p:{docs:{},df:0,t:{docs:{},df:0,h:{docs:{},df:0,_:{docs:{},df:0,b:{docs:{},df:0,u:{docs:{},df:0,f:{docs:{},df:0,f:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{},df:0,_:{docs:{},df:0,b:{docs:{},df:0,i:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1.4142135623730951}},df:1}}}}}}}}}}}}}}}},f:{docs:{},df:0,a:{docs:{},df:0,l:{docs:{},df:0,s:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:2}}}},g:{docs:{},df:0,e:{docs:{},df:0,n:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:2.449489742783178}},df:3,a:{docs:{},df:0,t:{docs:{},df:0,o:{docs:{},df:0,r:{docs:{},df:0,":":{docs:{},df:0,":":{docs:{},df:0,"{":{docs:{},df:0,a:{docs:{},df:0,p:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:1}}}}}}}}}}}}}}},i:{docs:{},df:0,n:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1}},df:1,_:{docs:{},df:0,2:{docs:{},df:0,_:{docs:{},df:0,1:{docs:{},df:0,0:{docs:{},df:0,_:{docs:{},df:0,1:{docs:{},df:0,0:{docs:{},df:0,_:{docs:{},df:0,1:{docs:{},df:0,0:{docs:{},df:0,_:{docs:{},df:0,r:{docs:{},df:0,e:{docs:{},df:0,v:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1.7320508075688772}},df:1}}}}}}}}}}}}}}}},v:{docs:{},df:0,a:{docs:{},df:0,l:{docs:{},df:0,i:{docs:{},df:0,d:{docs:{},df:0,_:{docs:{},df:0,e:{docs:{},df:0,n:{docs:{},df:0,u:{docs:{},df:0,m:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1}},df:1}}}},o:{docs:{},df:0,p:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:2.23606797749979}},df:1}}}},v:{docs:{},df:0,a:{docs:{},df:0,l:{docs:{},df:0,u:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:2}},df:1}}}}}}}}}}}},k:{docs:{},df:0,h:{docs:{},df:0,r:{docs:{},df:0,_:{docs:{},df:0,d:{docs:{},df:0,e:{docs:{},df:0,b:{docs:{},df:0,u:{docs:{},df:0,g:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:1}}}}}}}}},m:{docs:{},df:0,a:{docs:{},df:0,j:{docs:{},df:0,o:{docs:{},df:0,r:{docs:{},df:0,"}":{docs:{},df:0,".":{docs:{},df:0,"{":{docs:{},df:0,g:{docs:{},df:0,l:{docs:{},df:0,m:{docs:{},df:0,i:{docs:{},df:0,n:{docs:{},df:0,o:{docs:{},df:0,r:{docs:{},df:0,"}":{docs:{},df:0,0:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1}},df:1}}}}}}}}}}}}}}},x:{docs:{},df:0,_:{docs:{},df:0,v:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{},df:0,t:{docs:{},df:0,e:{docs:{},df:0,x:{docs:{},df:0,_:{docs:{},df:0,a:{docs:{},df:0,t:{docs:{},df:0,t:{docs:{},df:0,r:{docs:{},df:0,i:{docs:{},df:0,b:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:2}},df:1}}}}}}}}}}}}}}}}},p:{docs:{},df:0,o:{docs:{},df:0,s:{docs:{},df:0,i:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:2}},df:1}}}}},s:{docs:{},df:0,t:{docs:{},df:0,a:{docs:{},df:0,t:{docs:{},df:0,i:{docs:{},df:0,c:{docs:{},df:0,_:{docs:{},df:0,d:{docs:{},df:0,r:{docs:{},df:0,a:{docs:{},df:0,w:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:1}}}}}}}}},e:{docs:{},df:0,n:{docs:{},df:0,c:{docs:{},df:0,i:{docs:{},df:0,l:{docs:{},df:0,_:{docs:{},df:0,b:{docs:{},df:0,u:{docs:{},df:0,f:{docs:{},df:0,f:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{},df:0,_:{docs:{},df:0,b:{docs:{},df:0,i:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1.4142135623730951}},df:1}}}}}}}}}}}}}}}}}},t:{docs:{},df:0,r:{docs:{},df:0,i:{docs:{},df:0,a:{docs:{},df:0,n:{docs:{},df:0,g:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.4142135623730951}},df:1,e:{docs:{},df:0,_:{docs:{},df:0,s:{docs:{},df:0,t:{docs:{},df:0,r:{docs:{},df:0,i:{docs:{},df:0,p:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.4142135623730951}},df:1}}}}}}}}}}}},u:{docs:{},df:0,e:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:1}}}},u:{docs:{},df:0,n:{docs:{},df:0,s:{docs:{},df:0,i:{docs:{},df:0,g:{docs:{},df:0,n:{docs:{},df:0,e:{docs:{},df:0,d:{docs:{},df:0,_:{docs:{},df:0,b:{docs:{},df:0,y:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1}},df:1}}},i:{docs:{},df:0,n:{docs:{},df:0,t:{docs:{},df:0,_:{docs:{},df:0,1:{docs:{},df:0,0:{docs:{},df:0,f:{docs:{},df:0,_:{docs:{},df:0,1:{docs:{},df:0,1:{docs:{},df:0,f:{docs:{},df:0,_:{docs:{},df:0,1:{docs:{},df:0,1:{docs:{},df:0,f:{docs:{},df:0,_:{docs:{},df:0,r:{docs:{},df:0,e:{docs:{},df:0,v:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1}},df:1}}}}}}}}}}}}}}},2:{docs:{},df:0,_:{docs:{},df:0,1:{docs:{},df:0,0:{docs:{},df:0,_:{docs:{},df:0,1:{docs:{},df:0,0:{docs:{},df:0,_:{docs:{},df:0,1:{docs:{},df:0,0:{docs:{},df:0,_:{docs:{},df:0,r:{docs:{},df:0,e:{docs:{},df:0,v:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1.4142135623730951}},df:1}}}}}}}}}}}}}}}}}}}}}}}}}}}},a:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:1},n:{docs:{},df:0,c:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:2}},t:{docs:{},df:0,t:{docs:{},df:0,a:{docs:{},df:0,c:{docs:{},df:0,h:{docs:{},df:0,s:{docs:{},df:0,h:{docs:{},df:0,a:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1}},df:1}}}}}}}}}},b:{docs:{},df:0,e:{docs:{},df:0,g:{docs:{},df:0,i:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:1}}}},i:{docs:{},df:0,n:{docs:{},df:0,d:{docs:{},df:0,a:{docs:{},df:0,t:{docs:{},df:0,t:{docs:{},df:0,r:{docs:{},df:0,i:{docs:{},df:0,b:{docs:{},df:0,l:{docs:{},df:0,o:{docs:{},df:0,c:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1}},df:1}}}}}}}}},v:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{},df:0,t:{docs:{},df:0,e:{docs:{},df:0,x:{docs:{},df:0,b:{docs:{},df:0,u:{docs:{},df:0,f:{docs:{},df:0,f:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1}},df:1}}}}}}}}}}}},t:{docs:{},df:0,f:{docs:{},df:0,i:{docs:{},df:0,e:{docs:{},df:0,l:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:3.605551275463989}},df:1}}}}}}},o:{docs:{},df:0,o:{docs:{},df:0,l:{docs:{},df:0,e:{docs:{},df:0,a:{docs:{},df:0,n:{docs:{},df:0,1:{docs:{},df:0,"+":{docs:{},df:0,a:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:1}}}}}}}}},u:{docs:{},df:0,f:{docs:{},df:0,f:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{},df:0,d:{docs:{},df:0,a:{docs:{},df:0,t:{docs:{},df:0,a:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1}},df:1}}}}}}}},t:{docs:{},df:0,f:{docs:{},df:0,i:{docs:{},df:0,e:{docs:{},df:0,l:{docs:{},df:0,d:{docs:{},df:0,3:{docs:{},df:0,2:{docs:{},df:0,a:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:1}}}}}}}}}},y:{docs:{},df:0,t:{docs:{},df:0,e:{docs:{},df:0,8:{docs:{},df:0,s:{docs:{},df:0,i:{docs:{},df:0,g:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:1}}}}}}}}},c:{docs:{},df:0,l:{docs:{},df:0,e:{docs:{},df:0,a:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:2.449489742783178}},df:2,"(":{docs:{},df:0,g:{docs:{},df:0,l:{docs:{},df:0,_:{docs:{},df:0,c:{docs:{},df:0,o:{docs:{},df:0,l:{docs:{},df:0,o:{docs:{},df:0,r:{docs:{},df:0,_:{docs:{},df:0,b:{docs:{},df:0,u:{docs:{},df:0,f:{docs:{},df:0,f:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{},df:0,_:{docs:{},df:0,b:{docs:{},df:0,i:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.4142135623730951}},df:1}}}}}}}}}}}}}}}}},b:{docs:{},df:0,i:{docs:{},df:0,t:{docs:{},df:0,f:{docs:{},df:0,i:{docs:{},df:0,e:{docs:{},df:0,l:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:1}}}}}}}}}}},c:{docs:{},df:0,o:{docs:{},df:0,l:{docs:{},df:0,o:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:3,"(":{docs:{},df:0,g:{docs:{},df:0,l:{docs:{},df:0,f:{docs:{},df:0,l:{docs:{},df:0,o:{docs:{},df:0,a:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:1}}}}}}}}}}}}}}}}},o:{docs:{},df:0,m:{docs:{},df:0,p:{docs:{},df:0,i:{docs:{},df:0,l:{docs:{},df:0,e:{docs:{},df:0,s:{docs:{},df:0,h:{docs:{},df:0,a:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1}},df:1}}}}}}}}},n:{docs:{},df:0,f:{docs:{},df:0,i:{docs:{},df:0,g:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:1}}},t:{docs:{},df:0,e:{docs:{},df:0,x:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:3.1622776601683795}},df:2,"&":{docs:{},df:0,g:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.7320508075688772}},df:3}}},"(":{docs:{},df:0,g:{docs:{},df:0,l:{docs:{},df:0,_:{docs:{},df:0,c:{docs:{},df:0,o:{docs:{},df:0,n:{docs:{},df:0,t:{docs:{},df:0,e:{docs:{},df:0,x:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1}},df:1}}}}}}}},c:{docs:{},df:0,o:{docs:{},df:0,n:{docs:{},df:0,t:{docs:{},df:0,e:{docs:{},df:0,x:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1}},df:1}}}}}}}}}},":":{docs:{},df:0,":":{docs:{},df:0,c:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.4142135623730951}},df:4}}}}}}}}}},r:{docs:{},df:0,e:{docs:{},df:0,a:{docs:{},df:0,t:{docs:{},df:0,e:{docs:{},df:0,s:{docs:{},df:0,h:{docs:{},df:0,a:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1}},df:1}}}}}}}}}},d:{docs:{},df:0,e:{docs:{},df:0,b:{docs:{},df:0,u:{docs:{},df:0,g:{docs:{},df:0,m:{docs:{},df:0,e:{docs:{},df:0,s:{docs:{},df:0,s:{docs:{},df:0,a:{docs:{},df:0,g:{docs:{},df:0,e:{docs:{},df:0,c:{docs:{},df:0,a:{docs:{},df:0,l:{docs:{},df:0,l:{docs:{},df:0,b:{docs:{},df:0,a:{docs:{},df:0,c:{docs:{},df:0,k:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:2}}}}}}}}}}}}}}}}}},l:{docs:{},df:0,e:{docs:{},df:0,t:{docs:{},df:0,e:{docs:{},df:0,v:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{},df:0,t:{docs:{},df:0,e:{docs:{},df:0,x:{docs:{},df:0,a:{docs:{},df:0,r:{docs:{},df:0,r:{docs:{},df:0,a:{docs:{},df:0,y:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1}},df:1}}}}}}}}}}}}}}}},r:{docs:{},df:0,a:{docs:{},df:0,w:{docs:{},df:0,a:{docs:{},df:0,r:{docs:{},df:0,r:{docs:{},df:0,a:{docs:{},df:0,y:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1}},df:1}}}}}}}}},e:{docs:{},df:0,n:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:1},u:{docs:{},df:0,m:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:1,3:{docs:{},df:0,2:{docs:{},df:0,a:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:1}}}}}}},r:{docs:{},df:0,r:{docs:{},df:0,o:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:1}}}},s:{docs:{},df:0,3:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:1,".":{docs:{},df:0,0:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:1}}}}},f:{docs:{},df:0,i:{docs:{},df:0,n:{docs:{},df:0,i:{docs:{},df:0,s:{docs:{},df:0,h:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:3}}}}},l:{docs:{},df:0,o:{docs:{},df:0,a:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:2.6457513110645907}},df:1,3:{docs:{},df:0,2:{docs:{},df:0,a:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:1}}}}}}},u:{docs:{},df:0,s:{docs:{},df:0,h:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1.4142135623730951}},df:1}}}},w:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:3.7416573867739413},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1}},df:4,".":{docs:{},df:0,p:{docs:{},df:0,o:{docs:{},df:0,l:{docs:{},df:0,l:{docs:{},df:0,_:{docs:{},df:0,e:{docs:{},df:0,v:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1.4142135623730951}},df:1}}}}}}},w:{docs:{},df:0,i:{docs:{},df:0,n:{docs:{},df:0,d:{docs:{},df:0,o:{docs:{},df:0,w:{docs:{},df:0,_:{docs:{},df:0,h:{docs:{},df:0,i:{docs:{},df:0,n:{docs:{},df:0,t:{docs:{},df:0,"(":{docs:{},df:0,g:{docs:{},df:0,l:{docs:{},df:0,f:{docs:{},df:0,w:{docs:{},df:0,":":{docs:{},df:0,":":{docs:{},df:0,w:{docs:{},df:0,i:{docs:{},df:0,n:{docs:{},df:0,d:{docs:{},df:0,o:{docs:{},df:0,w:{docs:{},df:0,h:{docs:{},df:0,i:{docs:{},df:0,n:{docs:{},df:0,t:{docs:{},df:0,":":{docs:{},df:0,":":{docs:{},df:0,c:{docs:{},df:0,o:{docs:{},df:0,n:{docs:{},df:0,t:{docs:{},df:0,e:{docs:{},df:0,x:{docs:{},df:0,t:{docs:{},df:0,v:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{},df:0,s:{docs:{},df:0,i:{docs:{},df:0,o:{docs:{},df:0,n:{docs:{},df:0,"(":{docs:{},df:0,4:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1}},df:1}}}}}}}}}}}}}}}},o:{docs:{},df:0,p:{docs:{},df:0,e:{docs:{},df:0,n:{docs:{},df:0,g:{docs:{},df:0,l:{docs:{},df:0,d:{docs:{},df:0,e:{docs:{},df:0,b:{docs:{},df:0,u:{docs:{},df:0,g:{docs:{},df:0,c:{docs:{},df:0,o:{docs:{},df:0,n:{docs:{},df:0,t:{docs:{},df:0,e:{docs:{},df:0,x:{docs:{},df:0,t:{docs:{},df:0,"(":{docs:{},df:0,t:{docs:{},df:0,r:{docs:{},df:0,u:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1}},df:1}}}}}}}}}}}}}}}},p:{docs:{},df:0,r:{docs:{},df:0,o:{docs:{},df:0,f:{docs:{},df:0,i:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1}},df:1}}}}}}}}}}}},r:{docs:{},df:0,e:{docs:{},df:0,s:{docs:{},df:0,i:{docs:{},df:0,z:{docs:{},df:0,a:{docs:{},df:0,b:{docs:{},df:0,l:{docs:{},df:0,e:{docs:{},df:0,"(":{docs:{},df:0,f:{docs:{},df:0,a:{docs:{},df:0,l:{docs:{},df:0,s:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1}},df:1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},":":{docs:{},df:0,":":{docs:{},df:0,c:{docs:{},df:0,o:{docs:{},df:0,n:{docs:{},df:0,t:{docs:{},df:0,e:{docs:{},df:0,x:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:1}}}}}}},f:{docs:{},df:0,l:{docs:{},df:0,u:{docs:{},df:0,s:{docs:{},df:0,h:{docs:{},df:0,_:{docs:{},df:0,m:{docs:{},df:0,e:{docs:{},df:0,s:{docs:{},df:0,s:{docs:{},df:0,a:{docs:{},df:0,g:{docs:{},df:0,e:{docs:{},df:0,s:{docs:{},df:0,"(":{docs:{},df:0,"&":{docs:{},df:0,a:{docs:{},df:0,m:{docs:{},df:0,p:{docs:{},df:0,";":{docs:{},df:0,e:{docs:{},df:0,v:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1.4142135623730951}},df:1}}}}}}}}}}}}}}}}}}}}}},i:{docs:{},df:0,n:{docs:{},df:0,i:{docs:{},df:0,t:{docs:{},df:0,"(":{docs:{},df:0,g:{docs:{},df:0,l:{docs:{},df:0,f:{docs:{},df:0,w:{docs:{},df:0,":":{docs:{},df:0,":":{docs:{},df:0,f:{docs:{},df:0,a:{docs:{},df:0,i:{docs:{},df:0,l:{docs:{},df:0,_:{docs:{},df:0,o:{docs:{},df:0,n:{docs:{},df:0,_:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{},df:0,r:{docs:{},df:0,o:{docs:{},df:0,r:{docs:{},df:0,s:{docs:{},df:0,")":{docs:{},df:0,".":{docs:{},df:0,u:{docs:{},df:0,n:{docs:{},df:0,w:{docs:{},df:0,r:{docs:{},df:0,a:{docs:{},df:0,p:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1}},df:1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},o:{docs:{},df:0,p:{docs:{},df:0,e:{docs:{},df:0,n:{docs:{},df:0,g:{docs:{},df:0,l:{docs:{},df:0,p:{docs:{},df:0,r:{docs:{},df:0,o:{docs:{},df:0,f:{docs:{},df:0,i:{docs:{},df:0,l:{docs:{},df:0,e:{docs:{},df:0,h:{docs:{},df:0,i:{docs:{},df:0,n:{docs:{},df:0,t:{docs:{},df:0,":":{docs:{},df:0,":":{docs:{},df:0,c:{docs:{},df:0,o:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1}},df:1}}}}}}}}}}}}}}}}}}}}}},w:{docs:{},df:0,i:{docs:{},df:0,n:{docs:{},df:0,d:{docs:{},df:0,o:{docs:{},df:0,w:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1}},df:1,e:{docs:{},df:0,v:{docs:{},df:0,e:{docs:{},df:0,n:{docs:{},df:0,t:{docs:{},df:0,":":{docs:{},df:0,":":{docs:{},df:0,k:{docs:{},df:0,e:{docs:{},df:0,y:{docs:{},df:0,"(":{docs:{},df:0,k:{docs:{},df:0,e:{docs:{},df:0,y:{docs:{},df:0,":":{docs:{},df:0,":":{docs:{},df:0,e:{docs:{},df:0,s:{docs:{},df:0,c:{docs:{},df:0,a:{docs:{},df:0,p:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1.4142135623730951}},df:1}}}}}}}}}}}}}}}}}}}}},m:{docs:{},df:0,o:{docs:{},df:0,d:{docs:{},df:0,e:{docs:{},df:0,":":{docs:{},df:0,":":{docs:{},df:0,w:{docs:{},df:0,i:{docs:{},df:0,n:{docs:{},df:0,d:{docs:{},df:0,o:{docs:{},df:0,w:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1}},df:1}}}}}}}}}}}}}}}}}},"{":{docs:{},df:0,a:{docs:{},df:0,c:{docs:{},df:0,t:{docs:{},df:0,i:{docs:{},df:0,o:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1}},df:1}}}}}}}}},_:{docs:{},df:0,m:{docs:{},df:0,a:{docs:{},df:0,i:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1.7320508075688772}},df:1}}}}},c:{docs:{},df:0,o:{docs:{},df:0,n:{docs:{},df:0,t:{docs:{},df:0,e:{docs:{},df:0,x:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1}},df:1,"(":{docs:{},df:0,g:{docs:{},df:0,l:{docs:{},df:0,f:{docs:{},df:0,w:{docs:{},df:0,":":{docs:{},df:0,":":{docs:{},df:0,w:{docs:{},df:0,i:{docs:{},df:0,n:{docs:{},df:0,d:{docs:{},df:0,o:{docs:{},df:0,w:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1}},df:1}}}}}}}}}}}}}}}}}}}}}},g:{docs:{},df:0,e:{docs:{},df:0,n:{docs:{},df:0,b:{docs:{},df:0,u:{docs:{},df:0,f:{docs:{},df:0,f:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1}},df:1}}}},v:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{},df:0,t:{docs:{},df:0,e:{docs:{},df:0,x:{docs:{},df:0,a:{docs:{},df:0,r:{docs:{},df:0,r:{docs:{},df:0,a:{docs:{},df:0,y:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1}},df:1}}}}}}}}}}}},t:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{},df:0,r:{docs:{},df:0,o:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:1}}}}}}}},i:{docs:{},df:0,n:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:1,3:{docs:{},df:0,2:{docs:{},df:0,u:{docs:{},df:0,n:{docs:{},df:0,s:{docs:{},df:0,i:{docs:{},df:0,g:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:1}}}}}}}}}}},m:{docs:{},df:0,a:{docs:{},df:0,t:{docs:{},df:0,r:{docs:{},df:0,i:{docs:{},df:0,x:{docs:{},df:0,m:{docs:{},df:0,o:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:1}}}}}}}}},n:{docs:{},df:0,a:{docs:{},df:0,m:{docs:{},df:0,e:{docs:{},df:0,d:{docs:{},df:0,b:{docs:{},df:0,u:{docs:{},df:0,f:{docs:{},df:0,f:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{},df:0,d:{docs:{},df:0,a:{docs:{},df:0,t:{docs:{},df:0,a:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1}},df:1}}}}}}}}}}}}}}},o:{docs:{},df:0,b:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1}},df:1,a:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:2},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.4142135623730951}},df:9,g:{docs:{},df:0,e:{docs:{},df:0,n:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.4142135623730951}},df:1}}}}}}}}},s:{docs:{},df:0,h:{docs:{},df:0,a:{docs:{},df:0,d:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{},df:0,s:{docs:{},df:0,o:{docs:{},df:0,u:{docs:{},df:0,r:{docs:{},df:0,c:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.4142135623730951}},df:1}}}}}}}}},o:{docs:{},df:0,r:{docs:{},df:0,t:{docs:{},df:0,1:{docs:{},df:0,6:{docs:{},df:0,s:{docs:{},df:0,i:{docs:{},df:0,g:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:1}}}}}}}}}},i:{docs:{},df:0,z:{docs:{},df:0,e:{docs:{},df:0,p:{docs:{},df:0,t:{docs:{},df:0,r:{docs:{},df:0,p:{docs:{},df:0,o:{docs:{},df:0,i:{docs:{},df:0,n:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:1}}}}}}}}}}},l:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:2}},df:1}},t:{docs:{},df:0,f:{docs:{"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1}},df:1}},u:{docs:{},df:0,b:{docs:{},df:0,y:{docs:{},df:0,t:{docs:{},df:0,e:{docs:{},df:0,8:{docs:{},df:0,u:{docs:{},df:0,n:{docs:{},df:0,s:{docs:{},df:0,i:{docs:{},df:0,g:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:1}}}}}}}}}}},i:{docs:{},df:0,n:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1}},df:2,3:{docs:{},df:0,2:{docs:{},df:0,s:{docs:{},df:0,i:{docs:{},df:0,g:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:1}}}}}}}}},t:{docs:{},df:0,i:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1}},df:1}}}},v:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{},df:0,t:{docs:{},df:0,e:{docs:{},df:0,x:{docs:{},df:0,a:{docs:{},df:0,t:{docs:{},df:0,t:{docs:{},df:0,r:{docs:{},df:0,i:{docs:{},df:0,b:{docs:{},df:0,b:{docs:{},df:0,i:{docs:{},df:0,n:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1}},df:1}}}},f:{docs:{},df:0,o:{docs:{},df:0,r:{docs:{},df:0,m:{docs:{},df:0,a:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1}},df:1}}}}}},i:{docs:{},df:0,p:{docs:{},df:0,o:{docs:{},df:0,i:{docs:{},df:0,n:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1.4142135623730951}},df:1}}}}}},l:{docs:{},df:0,p:{docs:{},df:0,o:{docs:{},df:0,i:{docs:{},df:0,n:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1}},df:1}}}}}},p:{docs:{},df:0,o:{docs:{},df:0,i:{docs:{},df:0,n:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:3.3166247903554}},df:1}}}}}}}}}}}}}}}}}},n:{docs:{},df:0,u:{docs:{"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1.4142135623730951}},df:1}},o:{docs:{"https://breakbuild.dev/":{tf:1},"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.449489742783178},"https://breakbuild.dev/devlog/":{tf:1},"https://breakbuild.dev/devlog/motivation/":{tf:2},"https://breakbuild.dev/devlog/renderer/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/chapter/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:2.23606797749979},"https://breakbuild.dev/support/":{tf:1}},df:18,a:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/":{tf:1},"https://breakbuild.dev/devlog/motivation/":{tf:1},"https://breakbuild.dev/devlog/renderer/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.4142135623730951}},df:4}},e:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.8284271247461903},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:4},f:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1},n:{docs:{},df:0,e:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1}},df:1},n:{docs:{},df:0,a:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1}},df:1}}},o:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:3.1622776601683795},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:6,_:{docs:{},df:0,g:{docs:{},df:0,e:{docs:{},df:0,n:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{},df:0,i:{docs:{},df:0,c:{docs:{},df:0,"&":{docs:{},df:0,l:{docs:{},df:0,t:{docs:{},df:0,";":{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}}}}}}}}},w:{docs:{},df:0,i:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/support/":{tf:1}},df:1}}}}}},p:{docs:{},df:0,u:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:7}},r:{docs:{},df:0,a:{docs:{},df:0,b:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1}},df:2},d:{docs:{},df:0,i:{docs:{},df:0,e:{docs:{},df:0,n:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1}},df:1}}}}},m:{docs:{},df:0,m:{docs:{},df:0,a:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/support/":{tf:1}},df:1},t:{docs:{"https://breakbuild.dev/":{tf:1}},df:1}}}},n:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:2},t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:2}},p:{docs:{},df:0,e:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:1},h:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772}},df:1,i:{docs:{},df:0,c:{docs:{"https://breakbuild.dev/":{tf:1},"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/renderer/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:2.6457513110645907},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.4142135623730951}},df:13,s:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{},df:0,r:{docs:{},df:0,o:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2}},df:1}}}}}}}}}},y:{docs:{},df:0,i:{docs:{},df:0,s:{docs:{},df:0,h:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1}},df:1}}}}},e:{docs:{},df:0,a:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:2},"https://breakbuild.dev/support/":{tf:1}},df:7,e:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1.4142135623730951}},df:1}}}},e:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:2.6457513110645907}},df:2},t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}},p:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1},w:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}},o:{docs:{},df:0,u:{docs:{},df:0,n:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:1}},p:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:4,"=":{docs:{},df:0,'"':{docs:{},df:0,a:{docs:{},df:0,t:{docs:{},df:0,t:{docs:{},df:0,r:{docs:{},df:0,i:{docs:{},df:0,b:{docs:{},df:0,m:{docs:{},df:0,a:{docs:{},df:0,s:{docs:{},df:0,k:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:1}}}}}}}}}},c:{docs:{},df:0,l:{docs:{},df:0,e:{docs:{},df:0,a:{docs:{},df:0,r:{docs:{},df:0,b:{docs:{},df:0,u:{docs:{},df:0,f:{docs:{},df:0,f:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{},df:0,m:{docs:{},df:0,a:{docs:{},df:0,s:{docs:{},df:0,k:{docs:{},df:0,'"':{docs:{},df:0,"&":{docs:{},df:0,g:{docs:{},df:0,t:{docs:{},df:0,";":{docs:{},df:0,"&":{docs:{},df:0,l:{docs:{},df:0,t:{docs:{},df:0,";":{docs:{},df:0,p:{docs:{},df:0,t:{docs:{},df:0,y:{docs:{},df:0,p:{docs:{},df:0,e:{docs:{},df:0,"&":{docs:{},df:0,g:{docs:{},df:0,t:{docs:{},df:0,";":{docs:{},df:0,g:{docs:{},df:0,l:{docs:{},df:0,b:{docs:{},df:0,i:{docs:{},df:0,t:{docs:{},df:0,f:{docs:{},df:0,i:{docs:{},df:0,e:{docs:{},df:0,l:{docs:{},df:0,d:{docs:{},df:0,"&":{docs:{},df:0,l:{docs:{},df:0,t:{docs:{},df:0,";":{docs:{},df:0,"/":{docs:{},df:0,p:{docs:{},df:0,t:{docs:{},df:0,y:{docs:{},df:0,p:{docs:{},df:0,e:{docs:{},df:0,"&":{docs:{},df:0,g:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},",":{docs:{},df:0,a:{docs:{},df:0,t:{docs:{},df:0,t:{docs:{},df:0,r:{docs:{},df:0,i:{docs:{},df:0,b:{docs:{},df:0,m:{docs:{},df:0,a:{docs:{},df:0,s:{docs:{},df:0,k:{docs:{},df:0,'"':{docs:{},df:0,"/":{docs:{},df:0,"&":{docs:{},df:0,g:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1.7320508075688772}},df:1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},o:{docs:{},df:0,l:{docs:{},df:0,o:{docs:{},df:0,r:{docs:{},df:0,f:{docs:{},df:0,'"':{docs:{},df:0,"&":{docs:{},df:0,g:{docs:{},df:0,t:{docs:{},df:0,";":{docs:{},df:0,"&":{docs:{},df:0,l:{docs:{},df:0,t:{docs:{},df:0,";":{docs:{},df:0,p:{docs:{},df:0,t:{docs:{},df:0,y:{docs:{},df:0,p:{docs:{},df:0,e:{docs:{},df:0,"&":{docs:{},df:0,g:{docs:{},df:0,t:{docs:{},df:0,";":{docs:{},df:0,g:{docs:{},df:0,l:{docs:{},df:0,f:{docs:{},df:0,l:{docs:{},df:0,o:{docs:{},df:0,a:{docs:{},df:0,t:{docs:{},df:0,"&":{docs:{},df:0,l:{docs:{},df:0,t:{docs:{},df:0,";":{docs:{},df:0,"/":{docs:{},df:0,p:{docs:{},df:0,t:{docs:{},df:0,y:{docs:{},df:0,p:{docs:{},df:0,e:{docs:{},df:0,"&":{docs:{},df:0,g:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:2}},df:1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:3.4641016151377544},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:2},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:2.6457513110645907},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:2},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:5},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:2.6457513110645907},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:3.1622776601683795},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:2}},df:11,";":{docs:{},df:0,8:{docs:{},df:0,0:{docs:{},df:0,0:{docs:{},df:0,k:{docs:{},df:0,b:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:2}}}}}}},u:{docs:{},df:0,a:{docs:{},df:0,r:{docs:{},df:0,a:{docs:{},df:0,n:{docs:{},df:0,t:{docs:{},df:0,e:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:6}}}}}},e:{docs:{},df:0,s:{docs:{},df:0,s:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:1}}},i:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1,e:{docs:{},df:0,l:{docs:{},df:0,i:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1}},df:3}}}}}}}},h:{docs:{},df:0,a:{docs:{},df:0,c:{docs:{},df:0,k:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.8284271247461903}},df:1}},l:{docs:{},df:0,f:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1}},df:1}},m:{docs:{},df:0,s:{docs:{},df:0,t:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:1}}}}},n:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/":{tf:1},"https://breakbuild.dev/devlog/renderer/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.4142135623730951}},df:7,i:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:3},l:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:4},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:10,e:{docs:{},df:0,"&":{docs:{},df:0,l:{docs:{},df:0,t:{docs:{},df:0,";":{docs:{},df:0,s:{docs:{},df:0,h:{docs:{},df:0,a:{docs:{},df:0,d:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{},df:0,"&":{docs:{},df:0,g:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772}},df:1}}}}}}}}},t:{docs:{},df:0,e:{docs:{},df:0,x:{docs:{},df:0,t:{docs:{},df:0,u:{docs:{},df:0,r:{docs:{},df:0,e:{docs:{},df:0,"&":{docs:{},df:0,g:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951}},df:1}}}}}}}}}}}}}},"(":{docs:{},df:0,f:{docs:{},df:0,o:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}},r:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1}},df:1}}},m:{docs:{},df:0,a:{docs:{},df:0,d:{docs:{},df:0,e:{docs:{},df:0,'"':{docs:{},df:0,1:{docs:{},df:0,4:{docs:{},df:0,".":{docs:{},df:0,6:{docs:{},df:0,9:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:1}}}}}},_:{docs:{},df:0,g:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:2.6457513110645907}},df:1,":":{docs:{},df:0,":":{docs:{},df:0,c:{docs:{},df:0,l:{docs:{},df:0,e:{docs:{},df:0,a:{docs:{},df:0,r:{docs:{},df:0,"(":{docs:{},df:0,g:{docs:{},df:0,l:{docs:{},df:0,":":{docs:{},df:0,":":{docs:{},df:0,c:{docs:{},df:0,o:{docs:{},df:0,l:{docs:{},df:0,o:{docs:{},df:0,r:{docs:{},df:0,_:{docs:{},df:0,b:{docs:{},df:0,u:{docs:{},df:0,f:{docs:{},df:0,f:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{},df:0,_:{docs:{},df:0,b:{docs:{},df:0,i:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:1}}}}}}}}}}}}}}}}}}}}},c:{docs:{},df:0,o:{docs:{},df:0,l:{docs:{},df:0,o:{docs:{},df:0,r:{docs:{},df:0,"(":{docs:{},df:0,1:{docs:{},df:0,".":{docs:{},df:0,0:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:1}}}}}}}}}}}}}},l:{docs:{},df:0,o:{docs:{},df:0,a:{docs:{},df:0,d:{docs:{},df:0,_:{docs:{},df:0,w:{docs:{},df:0,i:{docs:{},df:0,t:{docs:{},df:0,h:{docs:{},df:0,"(":{docs:{},df:0,"|":{docs:{},df:0,s:{docs:{},df:0,y:{docs:{},df:0,m:{docs:{},df:0,b:{docs:{},df:0,o:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:1}}}}}}}}}}}}}}}}}}}}}}}}}},w:{docs:{},df:0,r:{docs:{},df:0,i:{docs:{},df:0,t:{docs:{},df:0,t:{docs:{},df:0,e:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:1}}}}}}}}},p:{docs:{},df:0,p:{docs:{},df:0,e:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2},"https://breakbuild.dev/devlog/motivation/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1}},df:4}},i:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:3}}},r:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:5,w:{docs:{},df:0,a:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:2.449489742783178}},df:5}}}},m:{docs:{},df:0,l:{docs:{},df:0,e:{docs:{},df:0,s:{docs:{},df:0,s:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951}},df:1}}}}}},s:{docs:{},df:0,s:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}},t:{docs:{},df:0,e:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1}},df:2}},v:{docs:{},df:0,e:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.6457513110645907},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:2.6457513110645907},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:6,n:{docs:{},df:0,"'":{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:2}}}}}},e:{docs:{},df:0,a:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:1,e:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951}},df:1}}},p:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1}},df:1},r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1},v:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1}},df:3}}},c:{docs:{},df:0,k:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}},l:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2}},df:1,o:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/chapter/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/chapter/":{tf:1}},df:8}},p:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:3.1622776601683795},"https://breakbuild.dev/devlog/motivation/":{tf:1},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1},"https://breakbuild.dev/support/":{tf:2}},df:5,e:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2}},df:1}}}},r:{docs:{},df:0,e:{docs:{"https://breakbuild.dev/blog/":{tf:1},"https://breakbuild.dev/blog/my-year-with-rust/":{tf:3.1622776601683795},"https://breakbuild.dev/devlog/motivation/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:7,"(":{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:1}}}},y:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:1}},i:{docs:{},df:0,d:{docs:{},df:0,d:{docs:{},df:0,e:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.4142135623730951}},df:2}}},e:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.4142135623730951}},df:1,o:{docs:{},df:0,u:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.4142135623730951}},df:1,s:{docs:{},df:0,"(":{docs:{},df:0,i:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}}},e:{docs:{},df:0,r:{docs:{},df:0,a:{docs:{},df:0,r:{docs:{},df:0,c:{docs:{},df:0,h:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}}},g:{docs:{},df:0,h:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1}},df:3,e:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1}},df:2}},l:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1}},df:2}}}},j:{docs:{},df:0,a:{docs:{},df:0,c:{docs:{},df:0,k:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:1}}}},n:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:3}},s:{docs:{},df:0,t:{docs:{},df:0,o:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:1,i:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/motivation/":{tf:1}},df:2}}}}},t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1},"https://breakbuild.dev/support/":{tf:1}},df:4}},o:{docs:{},df:0,b:{docs:{},df:0,b:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:1}}},l:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1}},df:1},e:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/chapter/":{tf:1}},df:2}},m:{docs:{},df:0,e:{docs:{"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1}},df:1}},n:{docs:{},df:0,e:{docs:{},df:0,s:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}},o:{docs:{},df:0,d:{docs:{},df:0,l:{docs:{},df:0,u:{docs:{},df:0,m:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1}},df:2}}}}},p:{docs:{},df:0,e:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/motivation/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:3,f:{docs:{},df:0,u:{docs:{},df:0,l:{docs:{},df:0,l:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}}},r:{docs:{},df:0,i:{docs:{},df:0,z:{docs:{},df:0,o:{docs:{},df:0,n:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}},r:{docs:{},df:0,i:{docs:{},df:0,b:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1}},df:1}}}}}},t:{docs:{},df:0,t:{docs:{},df:0,p:{docs:{},df:0,":":{docs:{},df:0,"/":{docs:{},df:0,"/":{docs:{},df:0,a:{docs:{},df:0,b:{docs:{},df:0,s:{docs:{},df:0,t:{docs:{},df:0,r:{docs:{},df:0,u:{docs:{},df:0,s:{docs:{},df:0,e:{docs:{},df:0,g:{docs:{},df:0,o:{docs:{},df:0,o:{docs:{},df:0,s:{docs:{},df:0,e:{docs:{},df:0,".":{docs:{},df:0,c:{docs:{},df:0,o:{docs:{},df:0,m:{docs:{},df:0,"/":{docs:{},df:0,4:{docs:{},df:0,6:{docs:{},df:0,7:{docs:{"https://breakbuild.dev/devlog/motivation/":{tf:1}},df:1}}}}}}}}}}}}}}}}}}}}}}}},s:{docs:{},df:0,":":{docs:{},df:0,"/":{docs:{},df:0,"/":{docs:{},df:0,g:{docs:{},df:0,i:{docs:{},df:0,t:{docs:{},df:0,h:{docs:{},df:0,u:{docs:{},df:0,b:{docs:{},df:0,".":{docs:{},df:0,c:{docs:{},df:0,o:{docs:{},df:0,m:{docs:{},df:0,"/":{docs:{},df:0,r:{docs:{},df:0,u:{docs:{},df:0,s:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1}},df:1}}}}}}}}}}}}}}}}}}}}}},u:{docs:{},df:0,g:{docs:{},df:0,e:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.6457513110645907},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:5}},m:{docs:{},df:0,a:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}},o:{docs:{},df:0,n:{docs:{},df:0,g:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:2}},r:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:1}}},n:{docs:{},df:0,d:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951}},df:1}},t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}},r:{docs:{},df:0,d:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951}},df:1}}}},y:{docs:{},df:0,p:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{},df:0,i:{docs:{},df:0,n:{docs:{},df:0,f:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/devlog/motivation/":{tf:1}},df:1}}}}}}}}},i:{docs:{},df:0,"'":{docs:{},df:0,m:{docs:{"https://breakbuild.dev/":{tf:1.7320508075688772},"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1}},df:3}},1:{docs:{},df:0,6:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}},3:{docs:{"https://breakbuild.dev/":{tf:1}},df:1,2:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.449489742783178},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:4}},8:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1.4142135623730951}},df:1},c:{docs:{},df:0,e:{docs:{},df:0,b:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{},df:0,g:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/chapter/":{tf:1}},df:1}}}}}},d:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:2,e:{docs:{},df:0,a:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/chapter/":{tf:1}},df:1,l:{docs:{"https://breakbuild.dev/blog/":{tf:1},"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/":{tf:1},"https://breakbuild.dev/devlog/motivation/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1},"https://breakbuild.dev/support/":{tf:1}},df:8}}},i:{docs:{},df:0,o:{docs:{},df:0,m:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1}},df:2,a:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:3.605551275463989}},df:1}}}}}},e:{docs:{},df:0,e:{docs:{},df:0,e:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:1}}},f:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1,"'":{docs:{"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:1},"/":{docs:{},df:0,h:{docs:{},df:0,o:{docs:{},df:0,w:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1}},df:1}}}}},g:{docs:{},df:0,n:{docs:{},df:0,o:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:4,e:{docs:{},df:0,"?":{docs:{},df:0,"(":{docs:{},df:0,e:{docs:{},df:0,s:{docs:{},df:0,p:{docs:{},df:0,e:{docs:{},df:0,c:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}}}}}}}}},l:{docs:{},df:0,l:{docs:{},df:0,u:{docs:{},df:0,s:{docs:{},df:0,t:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1}},df:2}}}}}},m:{docs:{},df:0,a:{docs:{},df:0,g:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1,e:{docs:{},df:0,_:{docs:{},df:0,b:{docs:{},df:0,y:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951}},df:1}}},w:{docs:{},df:0,i:{docs:{},df:0,d:{docs:{},df:0,t:{docs:{},df:0,h:{docs:{},df:0,")":{docs:{},df:0,"/":{docs:{},df:0,"/":{docs:{},df:0,t:{docs:{},df:0,u:{docs:{},df:0,r:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}}}}}}}}},s:{docs:{},df:0,"(":{docs:{},df:0,t:{docs:{},df:0,h:{docs:{},df:0,a:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/":{tf:1}},df:1}}}}}}},i:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1}},df:2}}}},h:{docs:{},df:0,o:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:1}},m:{docs:{},df:0,e:{docs:{},df:0,d:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:4}}},i:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/devlog/motivation/":{tf:1}},df:1}},u:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772}},df:1}}},p:{docs:{},df:0,a:{docs:{},df:0,c:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:2}}},l:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.6457513110645907},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:2.8284271247461903},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:2.449489742783178}},df:6,"&":{docs:{},df:0,l:{docs:{},df:0,t:{docs:{},df:0,";":{docs:{},df:0,c:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.7320508075688772}},df:3}}}}},e:{docs:{},df:0,m:{docs:{},df:0,e:{docs:{},df:0,n:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.8284271247461903},"https://breakbuild.dev/devlog/renderer/hello_triangle/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:3.4641016151377544},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:3.7416573867739413},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:9,a:{docs:{},df:0,t:{docs:{},df:0,i:{docs:{},df:0,o:{docs:{},df:0,n:{docs:{},df:0,s:{docs:{},df:0,"(":{docs:{},df:0,o:{docs:{},df:0,p:{docs:{},df:0,e:{docs:{},df:0,n:{docs:{},df:0,g:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:1}}}}}}}}}}}}}}}}}},i:{docs:{},df:0,c:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:1,i:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1}},df:2,l:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1}},df:1}}}}}}},o:{docs:{},df:0,r:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.449489742783178},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.7320508075688772}},df:5,a:{docs:{},df:0,n:{docs:{},df:0,t:{docs:{},df:0,l:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1}},df:2}}}}}}},s:{docs:{},df:0,s:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772}},df:1}}},r:{docs:{},df:0,o:{docs:{},df:0,v:{docs:{"https://breakbuild.dev/devlog/motivation/":{tf:1},"https://breakbuild.dev/support/":{tf:1}},df:2}}},u:{docs:{},df:0,l:{docs:{},df:0,s:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}},n:{docs:{},df:0,a:{docs:{},df:0,c:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1}},df:1}}},c:{docs:{},df:0,l:{docs:{},df:0,u:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.4142135623730951}},df:2,e:{docs:{},df:0,_:{docs:{},df:0,s:{docs:{},df:0,t:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1}},df:1}}}}}}}},o:{docs:{},df:0,m:{docs:{},df:0,p:{docs:{},df:0,a:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}},n:{docs:{},df:0,s:{docs:{},df:0,i:{docs:{},df:0,s:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}},r:{docs:{},df:0,e:{docs:{},df:0,a:{docs:{},df:0,s:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1},"https://breakbuild.dev/support/":{tf:1}},df:4}},d:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1}},df:3},m:{docs:{},df:0,e:{docs:{},df:0,n:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1}},df:3,a:{docs:{},df:0,l:{docs:{},df:0,")":{docs:{},df:0,b:{docs:{},df:0,i:{docs:{},df:0,n:{docs:{},df:0,a:{docs:{},df:0,r:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:1}}}}}}}}}}}}}}}},d:{docs:{},df:0,e:{docs:{},df:0,p:{docs:{},df:0,e:{docs:{},df:0,n:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1}},df:1}}}},x:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:3.1622776601683795}},df:3}},i:{docs:{"https://breakbuild.dev/devlog/motivation/":{tf:1}},df:1,c:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:3,e:{docs:{},df:0,s:{docs:{},df:0,"/":{docs:{},df:0,i:{docs:{},df:0,d:{docs:{},df:0,"'":{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}}}},u:{docs:{},df:0,s:{docs:{},df:0,t:{docs:{},df:0,r:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}},f:{docs:{},df:0,a:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}},e:{docs:{},df:0,c:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:1}},s:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:1}}},o:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1.4142135623730951}},df:1,r:{docs:{},df:0,m:{docs:{"https://breakbuild.dev/":{tf:1},"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:6}}}},h:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1,i:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.23606797749979}},df:1}}}}},i:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:1,_:{docs:{},df:0,m:{docs:{},df:0,o:{docs:{},df:0,u:{docs:{},df:0,s:{docs:{},df:0,e:{docs:{},df:0,_:{docs:{},df:0,e:{docs:{},df:0,v:{docs:{},df:0,e:{docs:{},df:0,n:{docs:{},df:0,t:{docs:{},df:0,_:{docs:{},df:0,w:{docs:{},df:0,i:{docs:{},df:0,t:{docs:{},df:0,h:{docs:{},df:0,_:{docs:{},df:0,c:{docs:{},df:0,a:{docs:{},df:0,n:{docs:{},df:0,_:{docs:{},df:0,b:{docs:{},df:0,u:{docs:{},df:0,b:{docs:{},df:0,b:{docs:{},df:0,l:{docs:{},df:0,e:{docs:{},df:0,_:{docs:{},df:0,a:{docs:{},df:0,r:{docs:{},df:0,g:{docs:{},df:0,_:{docs:{},df:0,a:{docs:{},df:0,n:{docs:{},df:0,d:{docs:{},df:0,_:{docs:{},df:0,c:{docs:{},df:0,a:{docs:{},df:0,n:{docs:{},df:0,c:{docs:{},df:0,e:{docs:{},df:0,l:{docs:{},df:0,a:{docs:{},df:0,b:{docs:{},df:0,l:{docs:{},df:0,e:{docs:{},df:0,_:{docs:{},df:0,a:{docs:{},df:0,r:{docs:{},df:0,g:{docs:{},df:0,_:{docs:{},df:0,a:{docs:{},df:0,n:{docs:{},df:0,d:{docs:{},df:0,_:{docs:{},df:0,v:{docs:{},df:0,i:{docs:{},df:0,e:{docs:{},df:0,w:{docs:{},df:0,_:{docs:{},df:0,a:{docs:{},df:0,r:{docs:{},df:0,g:{docs:{},df:0,_:{docs:{},df:0,a:{docs:{},df:0,n:{docs:{},df:0,d:{docs:{},df:0,_:{docs:{},df:0,d:{docs:{},df:0,e:{docs:{},df:0,t:{docs:{},df:0,a:{docs:{},df:0,i:{docs:{},df:0,l:{docs:{},df:0,_:{docs:{},df:0,a:{docs:{},df:0,r:{docs:{},df:0,g:{docs:{},df:0,_:{docs:{},df:0,a:{docs:{},df:0,n:{docs:{},df:0,d:{docs:{},df:0,_:{docs:{},df:0,s:{docs:{},df:0,c:{docs:{},df:0,r:{docs:{},df:0,e:{docs:{},df:0,e:{docs:{},df:0,n:{docs:{},df:0,_:{docs:{},df:0,x:{docs:{},df:0,_:{docs:{},df:0,a:{docs:{},df:0,r:{docs:{},df:0,g:{docs:{},df:0,_:{docs:{},df:0,a:{docs:{},df:0,n:{docs:{},df:0,d:{docs:{},df:0,_:{docs:{},df:0,s:{docs:{},df:0,c:{docs:{},df:0,r:{docs:{},df:0,e:{docs:{},df:0,e:{docs:{},df:0,n:{docs:{},df:0,_:{docs:{},df:0,y:{docs:{},df:0,_:{docs:{},df:0,a:{docs:{},df:0,r:{docs:{},df:0,g:{docs:{},df:0,_:{docs:{},df:0,a:{docs:{},df:0,n:{docs:{},df:0,d:{docs:{},df:0,_:{docs:{},df:0,c:{docs:{},df:0,l:{docs:{},df:0,i:{docs:{},df:0,e:{docs:{},df:0,n:{docs:{},df:0,t:{docs:{},df:0,_:{docs:{},df:0,x:{docs:{},df:0,_:{docs:{},df:0,a:{docs:{},df:0,r:{docs:{},df:0,g:{docs:{},df:0,_:{docs:{},df:0,a:{docs:{},df:0,n:{docs:{},df:0,d:{docs:{},df:0,_:{docs:{},df:0,c:{docs:{},df:0,l:{docs:{},df:0,i:{docs:{},df:0,e:{docs:{},df:0,n:{docs:{},df:0,t:{docs:{},df:0,_:{docs:{},df:0,y:{docs:{},df:0,_:{docs:{},df:0,a:{docs:{},df:0,r:{docs:{},df:0,g:{docs:{},df:0,_:{docs:{},df:0,a:{docs:{},df:0,n:{docs:{},df:0,d:{docs:{},df:0,_:{docs:{},df:0,c:{docs:{},df:0,t:{docs:{},df:0,r:{docs:{},df:0,l:{docs:{},df:0,_:{docs:{},df:0,k:{docs:{},df:0,e:{docs:{},df:0,y:{docs:{},df:0,_:{docs:{},df:0,a:{docs:{},df:0,r:{docs:{},df:0,g:{docs:{},df:0,_:{docs:{},df:0,a:{docs:{},df:0,n:{docs:{},df:0,d:{docs:{},df:0,_:{docs:{},df:0,a:{docs:{},df:0,l:{docs:{},df:0,t:{docs:{},df:0,_:{docs:{},df:0,k:{docs:{},df:0,e:{docs:{},df:0,y:{docs:{},df:0,_:{docs:{},df:0,a:{docs:{},df:0,r:{docs:{},df:0,g:{docs:{},df:0,_:{docs:{},df:0,a:{docs:{},df:0,n:{docs:{},df:0,d:{docs:{},df:0,_:{docs:{},df:0,s:{docs:{},df:0,h:{docs:{},df:0,i:{docs:{},df:0,f:{docs:{},df:0,t:{docs:{},df:0,_:{docs:{},df:0,k:{docs:{},df:0,e:{docs:{},df:0,y:{docs:{},df:0,_:{docs:{},df:0,a:{docs:{},df:0,r:{docs:{},df:0,g:{docs:{},df:0,_:{docs:{},df:0,a:{docs:{},df:0,n:{docs:{},df:0,d:{docs:{},df:0,_:{docs:{},df:0,m:{docs:{},df:0,e:{docs:{},df:0,t:{docs:{},df:0,a:{docs:{},df:0,_:{docs:{},df:0,k:{docs:{},df:0,e:{docs:{},df:0,y:{docs:{},df:0,_:{docs:{},df:0,a:{docs:{},df:0,r:{docs:{},df:0,g:{docs:{},df:0,_:{docs:{},df:0,a:{docs:{},df:0,n:{docs:{},df:0,d:{docs:{},df:0,_:{docs:{},df:0,b:{docs:{},df:0,u:{docs:{},df:0,t:{docs:{},df:0,t:{docs:{},df:0,o:{docs:{},df:0,n:{docs:{},df:0,_:{docs:{},df:0,a:{docs:{},df:0,r:{docs:{},df:0,g:{docs:{},df:0,_:{docs:{},df:0,a:{docs:{},df:0,n:{docs:{},df:0,d:{docs:{},df:0,_:{docs:{},df:0,r:{docs:{},df:0,e:{docs:{},df:0,l:{docs:{},df:0,a:{docs:{},df:0,t:{docs:{},df:0,e:{docs:{},df:0,d:{docs:{},df:0,_:{docs:{},df:0,t:{docs:{},df:0,a:{docs:{},df:0,r:{docs:{},df:0,g:{docs:{},df:0,e:{docs:{},df:0,t:{docs:{},df:0,_:{docs:{},df:0,a:{docs:{},df:0,r:{docs:{},df:0,g:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},i:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:1}}},l:{docs:{},df:0,i:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1}},df:2}}},n:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1.7320508075688772}},df:1}}},p:{docs:{},df:0,u:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:3},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1}},df:5}}},s:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:3}}},i:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:2},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1.4142135623730951}},df:7},g:{docs:{},df:0,n:{docs:{},df:0,i:{docs:{},df:0,f:{docs:{},df:0,i:{docs:{},df:0,c:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}}},p:{docs:{},df:0,e:{docs:{},df:0,c:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1}},df:1}}}},t:{docs:{},df:0,a:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1}},df:1},n:{docs:{},df:0,c:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1.4142135623730951}},df:2},t:{docs:{},df:0,a:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/devlog/motivation/":{tf:1}},df:1}}}}},e:{docs:{},df:0,a:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:3.1622776601683795},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:2},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:2},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:2},"https://breakbuild.dev/support/":{tf:1}},df:13}}},r:{docs:{},df:0,u:{docs:{},df:0,c:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}},t:{docs:{},df:0,e:{docs:{},df:0,g:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:2},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:2.449489742783178}},df:3,r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:3}},l:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1},n:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1}},df:3},t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:4}},r:{docs:{},df:0,a:{docs:{},df:0,c:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951}},df:1}}},e:{docs:{},df:0,s:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/motivation/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1},"https://breakbuild.dev/support/":{tf:1}},df:5}}},f:{docs:{},df:0,a:{docs:{},df:0,c:{docs:{},df:0,e:{docs:{},df:0,"(":{docs:{},df:0,f:{docs:{},df:0,f:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:1}}}}}}}},l:{docs:{},df:0,e:{docs:{},df:0,a:{docs:{},df:0,v:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:2.449489742783178}},df:1,e:{docs:{},df:0,d:{docs:{},df:0,"(":{docs:{},df:0,u:{docs:{},df:0,n:{docs:{},df:0,i:{docs:{},df:0,n:{docs:{},df:0,t:{docs:{},df:0,e:{docs:{},df:0,n:{docs:{},df:0,t:{docs:{},df:0,i:{docs:{},df:0,o:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1}},df:1}}}}}}}}}}}}}}}}}},n:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1,e:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}},p:{docs:{},df:0,o:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.4142135623730951}},df:1}},r:{docs:{},df:0,e:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1.4142135623730951}},df:2}}}}}},o:{docs:{},df:0,"&":{docs:{},df:0,l:{docs:{},df:0,t:{docs:{},df:0,";":{docs:{},df:0,s:{docs:{},df:0,t:{docs:{},df:0,r:{docs:{},df:0,i:{docs:{},df:0,n:{docs:{},df:0,g:{docs:{},df:0,"&":{docs:{},df:0,g:{docs:{},df:0,t:{docs:{},df:0,";":{docs:{},df:0,"&":{docs:{},df:0,g:{docs:{},df:0,t:{docs:{},df:0,";":{docs:{},df:0,"(":{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951}},df:1}}}}}}}}}}}}}}}}}}}}},r:{docs:{},df:0,o:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951}},df:1,d:{docs:{},df:0,u:{docs:{},df:0,c:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1}},df:2}}}}}},v:{docs:{},df:0,a:{docs:{},df:0,l:{docs:{},df:0,i:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1}},df:2,c:{docs:{},df:0,o:{docs:{},df:0,n:{docs:{},df:0,t:{docs:{},df:0,e:{docs:{},df:0,x:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:1,"(":{docs:{},df:0,s:{docs:{},df:0,t:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:1}}}},v:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{},df:0,s:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:1}}}}}}}}}}}}}}},e:{docs:{},df:0,n:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1}},df:1}}},i:{docs:{},df:0,n:{docs:{},df:0,c:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1}},df:1}}},o:{docs:{},df:0,k:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1.7320508075688772}},df:2},l:{docs:{},df:0,v:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772}},df:1,e:{docs:{},df:0,d:{docs:{},df:0,"(":{docs:{},df:0,e:{docs:{},df:0,".":{docs:{},df:0,g:{docs:{"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1}},df:1}}}}}}}}}}},o:{docs:{},df:0,"(":{docs:{},df:0,l:{docs:{},df:0,i:{docs:{},df:0,k:{docs:{"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1}},df:1}}}}},r:{docs:{},df:0,r:{docs:{},df:0,e:{docs:{},df:0,l:{docs:{},df:0,e:{docs:{},df:0,v:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1}},df:2}}}}}},s:{docs:{},df:0,_:{docs:{},df:0,s:{docs:{},df:0,o:{docs:{},df:0,m:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}},i:{docs:{},df:0,z:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1}},df:2}},n:{docs:{},df:0,"'":{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1}},df:2}}},s:{docs:{},df:0,u:{docs:{"https://breakbuild.dev/":{tf:1},"https://breakbuild.dev/blog/my-year-with-rust/":{tf:4.358898943540674},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:2},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.7320508075688772},"https://breakbuild.dev/support/":{tf:1.4142135623730951}},df:8}}},t:{docs:{},df:0,"'":{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:5.0990195135927845},"https://breakbuild.dev/devlog/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/motivation/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:2.6457513110645907},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:2.449489742783178},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:2},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:2},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:2.449489742783178}},df:14},"(":{docs:{},df:0,d:{docs:{},df:0,r:{docs:{},df:0,a:{docs:{},df:0,w:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1}},df:1}}}},e:{docs:{},df:0,v:{docs:{},df:0,e:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1}},df:1}}}},i:{docs:{},df:0,m:{docs:{},df:0,p:{docs:{},df:0,o:{docs:{},df:0,r:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1}},df:1}}}}}}},e:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:3}},df:1}},s:{docs:{},df:0,e:{docs:{},df:0,l:{docs:{},df:0,f:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.449489742783178},"https://breakbuild.dev/devlog/motivation/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:6}}}}}},j:{docs:{},df:0,a:{docs:{},df:0,m:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/motivation/":{tf:1}},df:2},v:{docs:{},df:0,a:{docs:{},df:0,s:{docs:{},df:0,c:{docs:{},df:0,r:{docs:{},df:0,i:{docs:{},df:0,p:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/support/":{tf:1}},df:1}}}}}}}}},o:{docs:{},df:0,b:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/motivation/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1}},df:5},u:{docs:{},df:0,r:{docs:{},df:0,n:{docs:{},df:0,e:{docs:{},df:0,y:{docs:{"https://breakbuild.dev/":{tf:1.4142135623730951},"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/":{tf:1},"https://breakbuild.dev/devlog/motivation/":{tf:1.4142135623730951}},df:4}}}}}},s:{docs:{},df:0,o:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}},u:{docs:{},df:0,m:{docs:{},df:0,b:{docs:{},df:0,o:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1.4142135623730951}},df:1}},p:{docs:{"https://breakbuild.dev/devlog/motivation/":{tf:1}},df:1}},n:{docs:{},df:0,k:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1}},df:2}},s:{docs:{},df:0,t:{docs:{},df:0,i:{docs:{},df:0,f:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/support/":{tf:1.4142135623730951}},df:1}}}}}}},k:{docs:{},df:0,e:{docs:{},df:0,b:{docs:{},df:0,a:{docs:{},df:0,b:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}},e:{docs:{},df:0,p:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.6457513110645907},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.4142135623730951}},df:6}},r:{docs:{},df:0,n:{docs:{},df:0,e:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}},y:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1}},df:1,w:{docs:{},df:0,o:{docs:{},df:0,r:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951}},df:1}}}}}},h:{docs:{},df:0,r:{docs:{},df:0,o:{docs:{},df:0,n:{docs:{},df:0,o:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:1}}}}},i:{docs:{},df:0,n:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/renderer/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:2.449489742783178},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:2.8284271247461903},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1},"https://breakbuild.dev/support/":{tf:1}},df:7,a:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/":{tf:1},"https://breakbuild.dev/devlog/motivation/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:7}},g:{docs:{"https://breakbuild.dev/devlog/motivation/":{tf:1}},df:1}},r:{docs:{},df:0,b:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:1}}}},n:{docs:{},df:0,e:{docs:{},df:0,w:{docs:{"https://breakbuild.dev/devlog/motivation/":{tf:1}},df:1}},o:{docs:{},df:0,w:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1.4142135623730951},"https://breakbuild.dev/support/":{tf:1.4142135623730951}},df:8,l:{docs:{},df:0,e:{docs:{},df:0,d:{docs:{},df:0,g:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}},n:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.4142135623730951}},df:3}}}}},l:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1}},df:1,a:{docs:{},df:0,b:{docs:{},df:0,e:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}},c:{docs:{},df:0,k:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:3.1622776601683795}},df:1}},i:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1}},df:1}},n:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:1},g:{docs:{},df:0,"/":{docs:{},df:0,c:{docs:{},df:0,a:{docs:{},df:0,r:{docs:{},df:0,g:{docs:{},df:0,o:{docs:{},df:0,"/":{docs:{},df:0,i:{docs:{},df:0,s:{docs:{},df:0,s:{docs:{},df:0,u:{docs:{},df:0,e:{docs:{},df:0,s:{docs:{},df:0,"/":{docs:{},df:0,9:{docs:{},df:0,2:{docs:{},df:0,3:{docs:{},df:0,9:{docs:{},df:0,"#":{docs:{},df:0,i:{docs:{},df:0,s:{docs:{},df:0,s:{docs:{},df:0,u:{docs:{},df:0,e:{docs:{},df:0,c:{docs:{},df:0,o:{docs:{},df:0,m:{docs:{"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1}},df:1}}}}}}}}}}}}}}}}}}}}}}}}}}},u:{docs:{},df:0,a:{docs:{},df:0,g:{docs:{"https://breakbuild.dev/":{tf:1},"https://breakbuild.dev/blog/my-year-with-rust/":{tf:6.557438524302},"https://breakbuild.dev/devlog/motivation/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.7320508075688772}},df:4,e:{docs:{},df:0,"(":{docs:{},df:0,o:{docs:{},df:0,p:{docs:{},df:0,e:{docs:{},df:0,n:{docs:{},df:0,g:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1}},df:1}}}}}}}}}}}}},r:{docs:{},df:0,g:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:3}},s:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:2}},t:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:2.8284271247461903},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:2},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:3},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:2.6457513110645907},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.7320508075688772}},df:12}},t:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.4142135623730951}},df:3}}}},u:{docs:{},df:0,g:{docs:{},df:0,h:{docs:{},df:0,a:{docs:{},df:0,b:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1}},df:1}}},i:{docs:{},df:0,n:{docs:{},df:0,g:{docs:{},df:0,s:{docs:{},df:0,t:{docs:{},df:0,o:{docs:{},df:0,c:{docs:{},df:0,k:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:1}}}}}}}}}}},y:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/renderer/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:5}},o:{docs:{},df:0,u:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:2.8284271247461903},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1.4142135623730951}},df:4,"(":{docs:{},df:0,j:{docs:{},df:0,u:{docs:{},df:0,s:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1}},df:1}}}},l:{docs:{},df:0,o:{docs:{},df:0,c:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.7320508075688772}},df:1,a:{docs:{},df:0,t:{docs:{},df:0,i:{docs:{},df:0,o:{docs:{},df:0,n:{docs:{},df:0,"=":{docs:{},df:0,0:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.4142135623730951}},df:1}}}}}}}}}}}}}}},z:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772}},df:1}}},d:{docs:{},df:0,"=":{docs:{},df:0,"/":{docs:{},df:0,u:{docs:{},df:0,s:{docs:{},df:0,r:{docs:{},df:0,"/":{docs:{},df:0,b:{docs:{},df:0,i:{docs:{},df:0,n:{docs:{},df:0,"/":{docs:{},df:0,m:{docs:{},df:0,o:{docs:{},df:0,l:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1}},df:1}}}}}}}}}}}}}}},e:{docs:{},df:0,a:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.449489742783178},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.4142135623730951}},df:3},r:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/motivation/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:4,o:{docs:{},df:0,p:{docs:{},df:0,e:{docs:{},df:0,n:{docs:{},df:0,g:{docs:{},df:0,l:{docs:{},df:0,".":{docs:{},df:0,c:{docs:{},df:0,o:{docs:{},df:0,m:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1}},df:3}}}}}}}}}}}},v:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:2}},f:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:7}},g:{docs:{},df:0,a:{docs:{},df:0,c:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.7320508075688772}},df:5}}}},n:{docs:{},df:0,g:{docs:{},df:0,t:{docs:{},df:0,h:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:2}}}},s:{docs:{},df:0,s:{docs:{"https://breakbuild.dev/":{tf:1},"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:7}},t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:1,"'":{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:2},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:2},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:2.449489742783178},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:2.6457513110645907},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.7320508075688772}},df:12}},v:{docs:{},df:0,e:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:7}}}},i:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1}},df:1,b:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.4142135623730951}},df:4,".":{docs:{},df:0,r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:2.449489742783178},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.4142135623730951}},df:5}},r:{docs:{},df:0,a:{docs:{},df:0,r:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.449489742783178},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:6},y:{docs:{},df:0,"(":{docs:{},df:0,".":{docs:{},df:0,d:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:1}}}}}}}}},c:{docs:{},df:0,e:{docs:{},df:0,n:{docs:{},df:0,s:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}},f:{docs:{},df:0,e:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.23606797749979}},df:1,t:{docs:{},df:0,i:{docs:{},df:0,m:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.8284271247461903},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:4}}}},t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}},g:{docs:{},df:0,h:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:1,e:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1}},df:1}},w:{docs:{},df:0,e:{docs:{},df:0,i:{docs:{},df:0,g:{docs:{},df:0,h:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1}},df:2}}}}}}}}},m:{docs:{},df:0,i:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:3,a:{docs:{},df:0,t:{docs:{},df:0,i:{docs:{},df:0,o:{docs:{},df:0,n:{docs:{},df:0,s:{docs:{},df:0,"(":{docs:{},df:0,p:{docs:{},df:0,o:{docs:{},df:0,l:{docs:{},df:0,o:{docs:{},df:0,n:{docs:{},df:0,i:{docs:{},df:0,u:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}}}}}}}}}}}}},n:{docs:{},df:0,e:{docs:{"https://breakbuild.dev/":{tf:1},"https://breakbuild.dev/blog/my-year-with-rust/":{tf:3.4641016151377544},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.4142135623730951}},df:7},k:{docs:{"https://breakbuild.dev/":{tf:1.4142135623730951},"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:2.8284271247461903},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1},"https://breakbuild.dev/support/":{tf:1.4142135623730951}},df:11,e:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1.4142135623730951}},df:1,"(":{docs:{},df:0,i:{docs:{},df:0,"'":{docs:{},df:0,m:{docs:{"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1}},df:1}}}}}}},t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:2.23606797749979}},df:4,e:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}},u:{docs:{},df:0,x:{docs:{"https://breakbuild.dev/":{tf:1},"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1.4142135623730951}},df:4}}},s:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1},"https://breakbuild.dev/support/":{tf:1.4142135623730951}},df:3,e:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/devlog/motivation/":{tf:1}},df:1}}}},t:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1}},df:3}},t:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.6457513110645907},"https://breakbuild.dev/devlog/motivation/":{tf:2},"https://breakbuild.dev/devlog/renderer/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1},"https://breakbuild.dev/support/":{tf:1.4142135623730951}},df:10}}},v:{docs:{},df:0,e:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/motivation/":{tf:1},"https://breakbuild.dev/devlog/renderer/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.4142135623730951}},df:5}}},o:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1}},df:1,a:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/devlog/renderer/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:3.1622776601683795},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:2.23606797749979}},df:9,_:{docs:{},df:0,w:{docs:{},df:0,i:{docs:{},df:0,t:{docs:{},df:0,h:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:2,"(":{docs:{},df:0,l:{docs:{},df:0,o:{docs:{},df:0,a:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:1}}}},p:{docs:{},df:0,r:{docs:{},df:0,o:{docs:{},df:0,c:{docs:{},df:0,_:{docs:{},df:0,a:{docs:{},df:0,d:{docs:{},df:0,d:{docs:{},df:0,r:{docs:{},df:0,e:{docs:{},df:0,s:{docs:{},df:0,s:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:1}}}}}}}}}}}}}}}}}},e:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1.7320508075688772}},df:2,"(":{docs:{},df:0,s:{docs:{},df:0,e:{docs:{},df:0,l:{docs:{},df:0,f:{docs:{},df:0,".":{docs:{},df:0,n:{docs:{},df:0,a:{docs:{},df:0,m:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1.4142135623730951}},df:1}}}}}}}}}}},s:{docs:{},df:0,_:{docs:{},df:0,o:{docs:{},df:0,f:{docs:{},df:0,_:{docs:{},df:0,s:{docs:{},df:0,t:{docs:{},df:0,u:{docs:{},df:0,f:{docs:{},df:0,f:{docs:{},df:0,"(":{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1,".":{docs:{},df:0,i:{docs:{},df:0,n:{docs:{},df:0,t:{docs:{},df:0,o:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}}}}}}}}}}}}}}},c:{docs:{},df:0,a:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1},t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:3},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1}},df:2,i:{docs:{},df:0,o:{docs:{},df:0,n:{docs:{},df:0,"(":{docs:{},df:0,s:{docs:{},df:0,i:{docs:{},df:0,n:{docs:{},df:0,c:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1}},df:1}}}}}}}}}},k:{docs:{"https://breakbuild.dev/devlog/motivation/":{tf:1}},df:1}},g:{docs:{"https://breakbuild.dev/":{tf:1.4142135623730951},"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/":{tf:1},"https://breakbuild.dev/devlog/motivation/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:2.8284271247461903},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:2.8284271247461903}},df:6,4:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:1}},":":{docs:{},df:0,":":{docs:{},df:0,e:{docs:{},df:0,r:{docs:{},df:0,r:{docs:{},df:0,o:{docs:{},df:0,r:{docs:{},df:0,"!":{docs:{},df:0,"(":{docs:{},df:0,'"':{docs:{},df:0,"{":{docs:{},df:0,i:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:1}}}}}}}}}}},i:{docs:{},df:0,n:{docs:{},df:0,f:{docs:{},df:0,o:{docs:{},df:0,"!":{docs:{},df:0,"(":{docs:{},df:0,'"':{docs:{},df:0,"{":{docs:{},df:0,i:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:1}}}}}}}}}},t:{docs:{},df:0,r:{docs:{},df:0,a:{docs:{},df:0,c:{docs:{},df:0,e:{docs:{},df:0,"!":{docs:{},df:0,"(":{docs:{},df:0,'"':{docs:{},df:0,"{":{docs:{},df:0,i:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1.4142135623730951}},df:1}}}}}}}}}}},w:{docs:{},df:0,a:{docs:{},df:0,r:{docs:{},df:0,n:{docs:{},df:0,"!":{docs:{},df:0,"(":{docs:{},df:0,'"':{docs:{},df:0,"{":{docs:{},df:0,i:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:1}}}}}}}}}}}},g:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:1}}},i:{docs:{},df:0,c:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951}},df:1}},s:{docs:{},df:0,"/":{docs:{},df:0,t:{docs:{},df:0,r:{docs:{},df:0,a:{docs:{},df:0,c:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:1}}}}}}},n:{docs:{},df:0,e:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1},g:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1}},df:4,e:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1}},df:2}}}},o:{docs:{},df:0,k:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:3.4641016151377544},"https://breakbuild.dev/devlog/motivation/":{tf:2},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:2.449489742783178},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:2.6457513110645907},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:11},p:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1}},df:7}},r:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}},s:{docs:{},df:0,e:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1},t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}},t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:3.1622776601683795},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:9},v:{docs:{},df:0,e:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/motivation/":{tf:1}},df:2}},w:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1}},df:2,e:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1.4142135623730951}},df:1}}}},s:{docs:{},df:0,p:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1}},df:2}},t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1.4142135623730951}},df:1,";":{docs:{},df:0,"/":{docs:{},df:0,c:{docs:{},df:0,o:{docs:{},df:0,m:{docs:{},df:0,m:{docs:{},df:0,a:{docs:{},df:0,n:{docs:{},df:0,d:{docs:{},df:0,"&":{docs:{},df:0,g:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1.4142135623730951}},df:1}}}}}}}}}},e:{docs:{},df:0,n:{docs:{},df:0,u:{docs:{},df:0,m:{docs:{},df:0,s:{docs:{},df:0,"&":{docs:{},df:0,g:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:1}}}}}}}}},c:{docs:{},df:0,o:{docs:{},df:0,m:{docs:{},df:0,m:{docs:{},df:0,a:{docs:{},df:0,n:{docs:{},df:0,d:{docs:{},df:0,"&":{docs:{},df:0,g:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1.4142135623730951}},df:1}}}}}}}}}},e:{docs:{},df:0,n:{docs:{},df:0,u:{docs:{},df:0,m:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:2}},df:1}}}},g:{docs:{},df:0,l:{docs:{},df:0,x:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1.4142135623730951}},df:1}}},n:{docs:{},df:0,a:{docs:{},df:0,m:{docs:{},df:0,e:{docs:{},df:0,"&":{docs:{},df:0,g:{docs:{},df:0,t:{docs:{},df:0,";":{docs:{},df:0,a:{docs:{},df:0,l:{docs:{},df:0,p:{docs:{},df:0,h:{docs:{},df:0,a:{docs:{},df:0,"&":{docs:{},df:0,l:{docs:{},df:0,t:{docs:{},df:0,";":{docs:{},df:0,"/":{docs:{},df:0,n:{docs:{},df:0,a:{docs:{},df:0,m:{docs:{},df:0,e:{docs:{},df:0,"&":{docs:{},df:0,g:{docs:{},df:0,t:{docs:{},df:0,";":{docs:{},df:0,"&":{docs:{},df:0,l:{docs:{},df:0,t:{docs:{},df:0,";":{docs:{},df:0,"/":{docs:{},df:0,p:{docs:{},df:0,a:{docs:{},df:0,r:{docs:{},df:0,a:{docs:{},df:0,m:{docs:{},df:0,"&":{docs:{},df:0,g:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},b:{docs:{},df:0,l:{docs:{},df:0,u:{docs:{},df:0,e:{docs:{},df:0,"&":{docs:{},df:0,l:{docs:{},df:0,t:{docs:{},df:0,";":{docs:{},df:0,"/":{docs:{},df:0,n:{docs:{},df:0,a:{docs:{},df:0,m:{docs:{},df:0,e:{docs:{},df:0,"&":{docs:{},df:0,g:{docs:{},df:0,t:{docs:{},df:0,";":{docs:{},df:0,"&":{docs:{},df:0,l:{docs:{},df:0,t:{docs:{},df:0,";":{docs:{},df:0,"/":{docs:{},df:0,p:{docs:{},df:0,a:{docs:{},df:0,r:{docs:{},df:0,a:{docs:{},df:0,m:{docs:{},df:0,"&":{docs:{},df:0,g:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},g:{docs:{},df:0,l:{docs:{},df:0,c:{docs:{},df:0,l:{docs:{},df:0,e:{docs:{},df:0,a:{docs:{},df:0,r:{docs:{},df:0,"&":{docs:{},df:0,l:{docs:{},df:0,t:{docs:{},df:0,";":{docs:{},df:0,"/":{docs:{},df:0,n:{docs:{},df:0,a:{docs:{},df:0,m:{docs:{},df:0,e:{docs:{},df:0,"&":{docs:{},df:0,g:{docs:{},df:0,t:{docs:{},df:0,";":{docs:{},df:0,"&":{docs:{},df:0,l:{docs:{},df:0,t:{docs:{},df:0,";":{docs:{},df:0,"/":{docs:{},df:0,p:{docs:{},df:0,r:{docs:{},df:0,o:{docs:{},df:0,t:{docs:{},df:0,o:{docs:{},df:0,"&":{docs:{},df:0,g:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:1}}}}}}}}}}}}}}}}}}}}}}}}}},c:{docs:{},df:0,o:{docs:{},df:0,l:{docs:{},df:0,o:{docs:{},df:0,r:{docs:{},df:0,"&":{docs:{},df:0,l:{docs:{},df:0,t:{docs:{},df:0,";":{docs:{},df:0,"/":{docs:{},df:0,n:{docs:{},df:0,a:{docs:{},df:0,m:{docs:{},df:0,e:{docs:{},df:0,"&":{docs:{},df:0,g:{docs:{},df:0,t:{docs:{},df:0,";":{docs:{},df:0,"&":{docs:{},df:0,l:{docs:{},df:0,t:{docs:{},df:0,";":{docs:{},df:0,"/":{docs:{},df:0,p:{docs:{},df:0,r:{docs:{},df:0,o:{docs:{},df:0,t:{docs:{},df:0,o:{docs:{},df:0,"&":{docs:{},df:0,g:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},r:{docs:{},df:0,e:{docs:{},df:0,e:{docs:{},df:0,n:{docs:{},df:0,"&":{docs:{},df:0,l:{docs:{},df:0,t:{docs:{},df:0,";":{docs:{},df:0,"/":{docs:{},df:0,n:{docs:{},df:0,a:{docs:{},df:0,m:{docs:{},df:0,e:{docs:{},df:0,"&":{docs:{},df:0,g:{docs:{},df:0,t:{docs:{},df:0,";":{docs:{},df:0,"&":{docs:{},df:0,l:{docs:{},df:0,t:{docs:{},df:0,";":{docs:{},df:0,"/":{docs:{},df:0,p:{docs:{},df:0,a:{docs:{},df:0,r:{docs:{},df:0,a:{docs:{},df:0,m:{docs:{},df:0,"&":{docs:{},df:0,g:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},m:{docs:{},df:0,a:{docs:{},df:0,s:{docs:{},df:0,k:{docs:{},df:0,"&":{docs:{},df:0,l:{docs:{},df:0,t:{docs:{},df:0,";":{docs:{},df:0,"/":{docs:{},df:0,n:{docs:{},df:0,a:{docs:{},df:0,m:{docs:{},df:0,e:{docs:{},df:0,"&":{docs:{},df:0,g:{docs:{},df:0,t:{docs:{},df:0,";":{docs:{},df:0,"&":{docs:{},df:0,l:{docs:{},df:0,t:{docs:{},df:0,";":{docs:{},df:0,"/":{docs:{},df:0,p:{docs:{},df:0,a:{docs:{},df:0,r:{docs:{},df:0,a:{docs:{},df:0,m:{docs:{},df:0,"&":{docs:{},df:0,g:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},r:{docs:{},df:0,e:{docs:{},df:0,d:{docs:{},df:0,"&":{docs:{},df:0,l:{docs:{},df:0,t:{docs:{},df:0,";":{docs:{},df:0,"/":{docs:{},df:0,n:{docs:{},df:0,a:{docs:{},df:0,m:{docs:{},df:0,e:{docs:{},df:0,"&":{docs:{},df:0,g:{docs:{},df:0,t:{docs:{},df:0,";":{docs:{},df:0,"&":{docs:{},df:0,l:{docs:{},df:0,t:{docs:{},df:0,";":{docs:{},df:0,"/":{docs:{},df:0,p:{docs:{},df:0,a:{docs:{},df:0,r:{docs:{},df:0,a:{docs:{},df:0,m:{docs:{},df:0,"&":{docs:{},df:0,g:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},p:{docs:{},df:0,a:{docs:{},df:0,r:{docs:{},df:0,a:{docs:{},df:0,m:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:2.23606797749979}},df:1}}}},r:{docs:{},df:0,o:{docs:{},df:0,t:{docs:{},df:0,o:{docs:{},df:0,"&":{docs:{},df:0,g:{docs:{},df:0,t:{docs:{},df:0,";":{docs:{},df:0,v:{docs:{},df:0,o:{docs:{},df:0,i:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1.4142135623730951}},df:1}}}}}}}}}}}}}},o:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:1}},u:{docs:{},df:0,c:{docs:{},df:0,k:{docs:{},df:0,i:{docs:{},df:0,l:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:3}}}}},g:{docs:{},df:0,g:{docs:{},df:0,a:{docs:{},df:0,g:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:2,e:{docs:{},df:0,"(":{docs:{},df:0,f:{docs:{},df:0,o:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}}}}},n:{docs:{},df:0,a:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1}},df:1}},c:{docs:{},df:0,h:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}},m:{docs:{},df:0,a:{docs:{},df:0,c:{docs:{},df:0,h:{docs:{},df:0,i:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:11,e:{docs:{},df:0,"(":{docs:{},df:0,w:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1}},df:1}}}}}},o:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:1},r:{docs:{},df:0,o:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.449489742783178},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:3,2:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:1},_:{docs:{},df:0,r:{docs:{},df:0,u:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:1}}}},q:{docs:{},df:0,u:{docs:{},df:0,a:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}}},d:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:2,e:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2},"https://breakbuild.dev/devlog/motivation/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:10}},g:{docs:{},df:0,i:{docs:{},df:0,c:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1}},df:2}},n:{docs:{},df:0,i:{docs:{},df:0,f:{docs:{},df:0,i:{docs:{},df:0,c:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1}},df:3}}}}}},i:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/blog/":{tf:1},"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.6457513110645907},"https://breakbuild.dev/devlog/motivation/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:3},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:2},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:2},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.7320508075688772}},df:13,l:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1}},df:2}},s:{docs:{},df:0,t:{docs:{},df:0,r:{docs:{},df:0,e:{docs:{},df:0,a:{docs:{},df:0,m:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}},t:{docs:{},df:0,a:{docs:{},df:0,i:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2}},df:1}}}}}},j:{docs:{},df:0,o:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:1}}},k:{docs:{},df:0,e:{docs:{"https://breakbuild.dev/":{tf:1.4142135623730951},"https://breakbuild.dev/blog/my-year-with-rust/":{tf:4.47213595499958},"https://breakbuild.dev/devlog/":{tf:1},"https://breakbuild.dev/devlog/motivation/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:2},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:2.6457513110645907},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:2.6457513110645907},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:2.8284271247461903},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:2.6457513110645907},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:2.449489742783178},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:3},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:2},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:3},"https://breakbuild.dev/support/":{tf:1}},df:16}},l:{docs:{},df:0,i:{docs:{},df:0,c:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}},n:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/motivation/":{tf:1}},df:2,a:{docs:{},df:0,g:{docs:{"https://breakbuild.dev/":{tf:1},"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1}},df:6}},d:{docs:{},df:0,a:{docs:{},df:0,t:{docs:{},df:0,o:{docs:{},df:0,r:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}},i:{docs:{"https://breakbuild.dev/":{tf:1},"https://breakbuild.dev/blog/my-year-with-rust/":{tf:4.69041575982343},"https://breakbuild.dev/devlog/motivation/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1.4142135623730951}},df:9,p:{docs:{},df:0,u:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/devlog/renderer/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:2}}}},n:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}},u:{docs:{},df:0,a:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:7}}},y:{docs:{},df:0,"(":{docs:{},df:0,u:{docs:{},df:0,n:{docs:{},df:0,f:{docs:{},df:0,i:{docs:{},df:0,n:{docs:{},df:0,i:{docs:{},df:0,s:{docs:{},df:0,h:{docs:{"https://breakbuild.dev/devlog/motivation/":{tf:1}},df:1}}}}}}}}}}},p:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1.4142135623730951}},df:3},r:{docs:{},df:0,g:{docs:{},df:0,i:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1}},df:1}}},k:{docs:{"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1}},df:1}},s:{docs:{},df:0,k:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:2.449489742783178}},df:2}},t:{docs:{},df:0,c:{docs:{},df:0,h:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.8284271247461903},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:2},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:5,e:{docs:{},df:0,s:{docs:{},df:0,"(":{docs:{},df:0,a:{docs:{},df:0,n:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}}}},e:{docs:{},df:0,r:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/devlog/renderer/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1.4142135623730951}},df:2}}},h:{docs:{"https://breakbuild.dev/devlog/renderer/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:2},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1.4142135623730951}},df:4,e:{docs:{},df:0,m:{docs:{},df:0,a:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1}},df:1}}}}},t:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.4142135623730951},"https://breakbuild.dev/support/":{tf:1}},df:5}}},u:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.4142135623730951}},df:2}}},x:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1.7320508075688772}},df:1,_:{docs:{},df:0,a:{docs:{},df:0,t:{docs:{},df:0,t:{docs:{},df:0,r:{docs:{},df:0,i:{docs:{},df:0,b:{docs:{},df:0,u:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1.4142135623730951}},df:1}}}}}}}}},i:{docs:{},df:0,m:{docs:{},df:0,u:{docs:{},df:0,m:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1}},df:1}}}}},y:{docs:{},df:0,b:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/support/":{tf:1}},df:4}}},b:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1},e:{docs:{},df:0,a:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/":{tf:1},"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:2},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:2.6457513110645907},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.4142135623730951},"https://breakbuild.dev/support/":{tf:1}},df:11,w:{docs:{},df:0,h:{docs:{},df:0,i:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/devlog/motivation/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:2}}}}},s:{docs:{},df:0,u:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1}},df:2}}}},d:{docs:{},df:0,i:{docs:{},df:0,a:{docs:{"https://breakbuild.dev/":{tf:1}},df:1}}},g:{docs:{},df:0,a:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:1,s:{docs:{},df:0,t:{docs:{},df:0,r:{docs:{},df:0,u:{docs:{},df:0,c:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.23606797749979}},df:1}}}}}}}},m:{docs:{},df:0,b:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:2.23606797749979}},df:3,".":{docs:{},df:0,"(":{docs:{},df:0,d:{docs:{},df:0,o:{docs:{},df:0,n:{docs:{},df:0,"'":{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:1}}}}}}}}}},e:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951}},df:1},o:{docs:{},df:0,r:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:2},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:4}}}},n:{docs:{},df:0,t:{docs:{},df:0,a:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1}},df:1}},i:{docs:{},df:0,o:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.8284271247461903},"https://breakbuild.dev/devlog/motivation/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1.4142135623730951},"https://breakbuild.dev/support/":{tf:1}},df:9}}}},u:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:2.23606797749979}},df:1}},r:{docs:{},df:0,e:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1}},df:2}},s:{docs:{},df:0,h:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1.7320508075688772}},df:3},s:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1}},df:4,a:{docs:{},df:0,g:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:3.605551275463989},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/support/":{tf:1}},df:5}},i:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:1}}},t:{docs:{},df:0,a:{docs:{},df:0,_:{docs:{},df:0,k:{docs:{},df:0,e:{docs:{},df:0,y:{docs:{},df:0,_:{docs:{},df:0,a:{docs:{},df:0,r:{docs:{},df:0,g:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}}}},p:{docs:{},df:0,r:{docs:{},df:0,o:{docs:{},df:0,g:{docs:{},df:0,r:{docs:{},df:0,a:{docs:{},df:0,m:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}}}}}},i:{docs:{},df:0,c:{docs:{},df:0,r:{docs:{},df:0,o:{docs:{},df:0,s:{docs:{},df:0,o:{docs:{},df:0,f:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/motivation/":{tf:1}},df:1}}}}}}},d:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1,d:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:1}}},l:{docs:{},df:0,e:{docs:{},df:0,a:{docs:{},df:0,g:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1}},df:2}},s:{docs:{},df:0,t:{docs:{},df:0,o:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}},n:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:5},i:{docs:{},df:0,m:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772}},df:1,a:{docs:{},df:0,l:{docs:{},df:0,i:{docs:{},df:0,s:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:2}}}},p:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:1}}}},o:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1}},df:1}},u:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1}},df:2}}},s:{docs:{},df:0,l:{docs:{},df:0,e:{docs:{},df:0,a:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}},s:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.6457513110645907},"https://breakbuild.dev/devlog/motivation/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:5},t:{docs:{},df:0,a:{docs:{},df:0,k:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}},u:{docs:{},df:0,s:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1}},df:1}}},x:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:1}},l:{docs:{"https://breakbuild.dev/devlog/renderer/":{tf:1}},df:1},o:{docs:{},df:0,b:{docs:{},df:0,i:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:1}}},c:{docs:{},df:0,k:{docs:{},df:0,i:{docs:{},df:0,n:{docs:{},df:0,g:{docs:{},df:0,l:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1}},df:1}}}}}}},d:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:3.1622776601683795},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:6,".":{docs:{},df:0,r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}},e:{docs:{"https://breakbuild.dev/devlog/motivation/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:5,l:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1}},df:3,s:{docs:{},df:0,"(":{docs:{},df:0,i:{docs:{},df:0,n:{docs:{},df:0,c:{docs:{},df:0,l:{docs:{},df:0,u:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/devlog/renderer/":{tf:1}},df:1}}}}}}},"/":{docs:{},df:0,m:{docs:{},df:0,e:{docs:{},df:0,s:{docs:{},df:0,h:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1.4142135623730951}},df:1}}}}}}},r:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.449489742783178},"https://breakbuild.dev/devlog/motivation/":{tf:1},"https://breakbuild.dev/devlog/renderer/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:2}},df:8}}},i:{docs:{},df:0,f:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.4142135623730951}},df:5}}},u:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:2},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:2.449489742783178},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:2.6457513110645907}},df:6}}},l:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:2}},df:1}},m:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1,e:{docs:{},df:0,n:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1}},df:2}}}},n:{docs:{},df:0,d:{docs:{},df:0,a:{docs:{},df:0,y:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}},e:{docs:{},df:0,y:{docs:{"https://breakbuild.dev/devlog/motivation/":{tf:1},"https://breakbuild.dev/support/":{tf:1.4142135623730951}},df:2}},i:{docs:{},df:0,t:{docs:{},df:0,o:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:1}}}},o:{docs:{},df:0,m:{docs:{},df:0,o:{docs:{},df:0,r:{docs:{},df:0,p:{docs:{},df:0,h:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}},s:{docs:{},df:0,t:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:1}}}},t:{docs:{},df:0,h:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951}},df:1}}},r:{docs:{},df:0,a:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/devlog/motivation/":{tf:1}},df:1}},e:{docs:{"https://breakbuild.dev/":{tf:1},"https://breakbuild.dev/blog/my-year-with-rust/":{tf:6.4031242374328485},"https://breakbuild.dev/devlog/motivation/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:2.449489742783178},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:2.8284271247461903},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:2},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:2.8284271247461903},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:2.6457513110645907},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:3},"https://breakbuild.dev/support/":{tf:1.4142135623730951}},df:16}},s:{docs:{},df:0,t:{docs:{},df:0,l:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.4142135623730951}},df:2}}}},t:{docs:{},df:0,i:{docs:{},df:0,v:{docs:{"https://breakbuild.dev/devlog/":{tf:1},"https://breakbuild.dev/devlog/motivation/":{tf:1}},df:2}}},v:{docs:{},df:0,e:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1}},df:4,m:{docs:{},df:0,e:{docs:{},df:0,n:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1}},df:2}}}}}}},r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1}},df:2},u:{docs:{},df:0,c:{docs:{},df:0,h:{docs:{"https://breakbuild.dev/":{tf:1.4142135623730951},"https://breakbuild.dev/blog/my-year-with-rust/":{tf:4.358898943540674},"https://breakbuild.dev/devlog/motivation/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:2}},df:9}},d:{docs:{},df:0,d:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:1}}},g:{docs:{},df:0,g:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:1}}},l:{docs:{},df:0,t:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:2,p:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:9}}}}},s:{docs:{},df:0,t:{docs:{},df:0,_:{docs:{},df:0,u:{docs:{},df:0,s:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:2.23606797749979}},df:1}}}}},t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:2},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:2},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:10,a:{docs:{},df:0,b:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:3.605551275463989},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:4}}},e:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:2}}},y:{docs:{},df:0,_:{docs:{},df:0,s:{docs:{},df:0,l:{docs:{},df:0,i:{docs:{},df:0,c:{docs:{},df:0,e:{docs:{},df:0,".":{docs:{},df:0,g:{docs:{},df:0,e:{docs:{},df:0,t:{docs:{},df:0,"(":{docs:{},df:0,i:{docs:{},df:0,n:{docs:{},df:0,d:{docs:{},df:0,e:{docs:{},df:0,x:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951}},df:1}}}}}}}}}}}}}}},t:{docs:{},df:0,a:{docs:{},df:0,r:{docs:{},df:0,g:{docs:{},df:0,e:{docs:{},df:0,t:{docs:{},df:0,".":{docs:{},df:0,c:{docs:{},df:0,l:{docs:{},df:0,e:{docs:{},df:0,a:{docs:{},df:0,r:{docs:{},df:0,"(":{docs:{},df:0,"&":{docs:{},df:0,a:{docs:{},df:0,m:{docs:{},df:0,p:{docs:{},df:0,";":{docs:{},df:0,m:{docs:{},df:0,u:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:1}}}}}}}}}}}}}}}}}}}}}},s:{docs:{},df:0,e:{docs:{},df:0,l:{docs:{},df:0,f:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951}},df:1}}}}}},n:{docs:{},df:0,a:{docs:{},df:0,i:{docs:{},df:0,v:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:1}},m:{docs:{},df:0,e:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.449489742783178},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:3.3166247903554},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:2.8284271247461903},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.7320508075688772}},df:11,"=":{docs:{},df:0,'"':{docs:{},df:0,g:{docs:{},df:0,l:{docs:{},df:0,_:{docs:{},df:0,c:{docs:{},df:0,o:{docs:{},df:0,l:{docs:{},df:0,o:{docs:{},df:0,r:{docs:{},df:0,_:{docs:{},df:0,b:{docs:{},df:0,u:{docs:{},df:0,f:{docs:{},df:0,f:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{},df:0,_:{docs:{},df:0,b:{docs:{},df:0,i:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:1}}}}}}}}}}}}}}}},d:{docs:{},df:0,e:{docs:{},df:0,p:{docs:{},df:0,t:{docs:{},df:0,h:{docs:{},df:0,_:{docs:{},df:0,b:{docs:{},df:0,u:{docs:{},df:0,f:{docs:{},df:0,f:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{},df:0,_:{docs:{},df:0,b:{docs:{},df:0,i:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:1}}}}}}}}}}}}}}}},s:{docs:{},df:0,t:{docs:{},df:0,e:{docs:{},df:0,n:{docs:{},df:0,c:{docs:{},df:0,i:{docs:{},df:0,l:{docs:{},df:0,_:{docs:{},df:0,b:{docs:{},df:0,u:{docs:{},df:0,f:{docs:{},df:0,f:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{},df:0,_:{docs:{},df:0,b:{docs:{},df:0,i:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:1}}}}}}}}}}}}}}}}}}}}}}},s:{docs:{},df:0,a:{docs:{},df:0,k:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:1}},p:{docs:{},df:0,a:{docs:{},df:0,c:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:2,e:{docs:{},df:0,"=":{docs:{},df:0,'"':{docs:{},df:0,g:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:1}}}}}}}}}}},t:{docs:{},df:0,i:{docs:{},df:0,v:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:2}}},v:{docs:{},df:0,i:{docs:{},df:0,g:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}},d:{docs:{},df:0,c:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1}},df:2}},e:{docs:{},df:0,a:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:2,e:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1}},df:1}},l:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:3}}},t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951}},df:1}},c:{docs:{},df:0,e:{docs:{},df:0,s:{docs:{},df:0,s:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1}},df:1,a:{docs:{},df:0,r:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1}},df:5,l:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951}},df:1}}}}}}}}},e:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:3.605551275463989},"https://breakbuild.dev/devlog/renderer/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:3.7416573867739413},"https://breakbuild.dev/devlog/renderer/hello_triangle/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:3.605551275463989},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:4.242640687119285},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:2},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:3.872983346207417},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:2},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:3.605551275463989},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:3.4641016151377544}},df:15,e:{docs:{},df:0,d:{docs:{},df:0,"(":{docs:{},df:0,f:{docs:{},df:0,o:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:1}}}}}},l:{docs:{},df:0,e:{docs:{},df:0,s:{docs:{},df:0,s:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:1}}}}}},g:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:3,l:{docs:{},df:0,i:{docs:{},df:0,g:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:2,i:{docs:{},df:0,b:{docs:{},df:0,l:{docs:{},df:0,e:{docs:{},df:0,"(":{docs:{},df:0,j:{docs:{},df:0,u:{docs:{},df:0,s:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1}},df:1}}}}}}}}}}}}},o:{docs:{},df:0,v:{docs:{},df:0,i:{docs:{},df:0,m:{docs:{"https://breakbuild.dev/":{tf:1},"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1}},df:3}}}},s:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:2}},t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951}},df:1},v:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:7}}},w:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:3},"https://breakbuild.dev/devlog/":{tf:1},"https://breakbuild.dev/devlog/motivation/":{tf:2},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:2.449489742783178},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:2},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:2.6457513110645907},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.7320508075688772},"https://breakbuild.dev/support/":{tf:1}},df:14,"(":{docs:{},df:0,m:{docs:{},df:0,u:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1}},df:2}}},n:{docs:{},df:0,a:{docs:{},df:0,m:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1.4142135623730951}},df:1}}},t:{docs:{},df:0,h:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}},"/":{docs:{},df:0,i:{docs:{},df:0,n:{docs:{},df:0,t:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{},df:0,m:{docs:{},df:0,e:{docs:{},df:0,d:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}}}}}},e:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.4142135623730951}},df:1}},t:{docs:{},df:0,y:{docs:{},df:0,p:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1}},df:2}}}},x:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:10}}},i:{docs:{},df:0,c:{docs:{},df:0,e:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:2}},df:2},h:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1,e:{docs:{},df:0,"(":{docs:{},df:0,g:{docs:{},df:0,r:{docs:{},df:0,a:{docs:{},df:0,p:{docs:{},df:0,h:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}}}}},f:{docs:{},df:0,t:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1.4142135623730951}},df:1}}},g:{docs:{},df:0,h:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1,t:{docs:{},df:0,m:{docs:{},df:0,a:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}},n:{docs:{},df:0,t:{docs:{},df:0,e:{docs:{},df:0,n:{docs:{},df:0,d:{docs:{},df:0,o:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}}},o:{docs:{},df:0,i:{docs:{},df:0,s:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.4142135623730951}},df:5,i:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:1}}},m:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1},n:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.4142135623730951}},df:5,e:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1}},df:3},s:{docs:{},df:0,e:{docs:{},df:0,n:{docs:{},df:0,s:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:5}}}}},p:{docs:{},df:0,e:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}},r:{docs:{},df:0,m:{docs:{},df:0,a:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:3}},df:3,0:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1.4142135623730951}},df:1},1:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1.4142135623730951}},df:1}}}}},t:{docs:{},df:0,a:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.4142135623730951}},df:1}},e:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.7320508075688772}},df:8},h:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2},"https://breakbuild.dev/devlog/motivation/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:6},i:{docs:{},df:0,c:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:5}},o:{docs:{},df:0,r:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}},u:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}},v:{docs:{},df:0,e:{docs:{},df:0,l:{docs:{},df:0,t:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}},w:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:3.4641016151377544},"https://breakbuild.dev/devlog/motivation/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:2.6457513110645907},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:2.6457513110645907},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:2.6457513110645907},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:3.1622776601683795},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:2.8284271247461903},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:4.123105625617661},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:3.3166247903554},"https://breakbuild.dev/support/":{tf:1}},df:14,"(":{docs:{},df:0,w:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1}},df:1}},a:{docs:{},df:0,d:{docs:{},df:0,a:{docs:{},df:0,y:{docs:{"https://breakbuild.dev/":{tf:1},"https://breakbuild.dev/devlog/motivation/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:4}}}},h:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}},p:{docs:{},df:0,m:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}},u:{docs:{},df:0,g:{docs:{},df:0,e:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951}},df:1}}},i:{docs:{},df:0,s:{docs:{},df:0,a:{docs:{},df:0,n:{docs:{},df:0,c:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951}},df:1}}}}},k:{docs:{},df:0,e:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:1}},l:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.449489742783178},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1.7320508075688772}},df:4}},m:{docs:{},df:0,b:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:4}}}},r:{docs:{},df:0,s:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.4142135623730951}},df:1}}}}}},v:{docs:{},df:0,i:{docs:{},df:0,d:{docs:{},df:0,i:{docs:{},df:0,a:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:1}}}}}},o:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1}},df:1,b:{docs:{},df:0,j:{docs:{},df:0,e:{docs:{},df:0,c:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:4.47213595499958},"https://breakbuild.dev/devlog/renderer/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:2.449489742783178},"https://breakbuild.dev/devlog/renderer/hello_triangle/chapter/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:2.449489742783178},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:2.449489742783178},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:2},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:2},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:2}},df:11,"(":{docs:{},df:0,a:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1}},df:1}},s:{docs:{},df:0,"(":{docs:{},df:0,v:{docs:{},df:0,a:{docs:{},df:0,o:{docs:{},df:0,"'":{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1}},df:1}}}}}}}}}}},c:{docs:{},df:0,c:{docs:{},df:0,a:{docs:{},df:0,s:{docs:{},df:0,i:{docs:{},df:0,o:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1.7320508075688772}},df:1}}}}},u:{docs:{},df:0,p:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1}},df:1}},r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1}},df:2}}},u:{docs:{},df:0,l:{docs:{},df:0,u:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}},d:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:2}},f:{docs:{},df:0,f:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2},"https://breakbuild.dev/devlog/renderer/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:3}},i:{docs:{},df:0,c:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1.7320508075688772}},df:1}}},s:{docs:{},df:0,e:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:2.6457513110645907},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:2}}}}},k:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1}},df:1,"(":{docs:{},df:0,m:{docs:{},df:0,y:{docs:{},df:0,_:{docs:{},df:0,v:{docs:{},df:0,a:{docs:{},df:0,l:{docs:{},df:0,u:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}}},s:{docs:{},df:0,e:{docs:{},df:0,l:{docs:{},df:0,f:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1.4142135623730951}},df:1}}}}},a:{docs:{},df:0,y:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}},l:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1}},df:2,d:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:2},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:4,e:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:1}}}},n:{docs:{"https://breakbuild.dev/":{tf:1},"https://breakbuild.dev/blog/my-year-with-rust/":{tf:4.47213595499958},"https://breakbuild.dev/devlog/motivation/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:2},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:3.872983346207417},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:2},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:2},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:2.449489742783178},"https://breakbuild.dev/support/":{tf:1.7320508075688772}},df:15,c:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.8284271247461903},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:2},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.4142135623730951}},df:9,e:{docs:{},df:0,"(":{docs:{},df:0,s:{docs:{},df:0,t:{docs:{},df:0,a:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1}},df:1}}}}}}},e:{docs:{},df:0,"(":{docs:{},df:0,t:{docs:{},df:0,h:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}},s:{docs:{},df:0,"(":{docs:{},df:0,s:{docs:{},df:0,o:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:1}},t:{docs:{},df:0,h:{docs:{},df:0,a:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}}},l:{docs:{},df:0,i:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/devlog/motivation/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:2}}}},o:{docs:{},df:0,p:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.449489742783178}},df:1}},p:{docs:{},df:0,c:{docs:{},df:0,o:{docs:{},df:0,d:{docs:{},df:0,e:{docs:{},df:0,"=":{docs:{},df:0,'"':{docs:{},df:0,1:{docs:{},df:0,2:{docs:{},df:0,7:{docs:{},df:0,'"':{docs:{},df:0,"/":{docs:{},df:0,"&":{docs:{},df:0,g:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:1}}}}}}},3:{docs:{},df:0,0:{docs:{},df:0,'"':{docs:{},df:0,"/":{docs:{},df:0,"&":{docs:{},df:0,g:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:1}}}}}}}}}}}}}},e:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/motivation/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1},"https://breakbuild.dev/support/":{tf:1.7320508075688772}},df:5,g:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/motivation/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:3.605551275463989},"https://breakbuild.dev/devlog/renderer/hello_triangle/chapter/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:3.872983346207417},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:3.7416573867739413},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:3.4641016151377544},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:3.4641016151377544},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:2.8284271247461903},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:2},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:2.8284271247461903},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:6.48074069840786}},df:14,"'":{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1}},df:1},"(":{docs:{},df:0,g:{docs:{},df:0,l:{docs:{},df:0,g:{docs:{},df:0,e:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:1}}}}}},".":{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1}},df:2}},"/":{docs:{},df:0,v:{docs:{},df:0,u:{docs:{},df:0,l:{docs:{},df:0,k:{docs:{},df:0,a:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1}},df:1}}}}}}},":":{docs:{},df:0,":":{docs:{},df:0,c:{docs:{},df:0,o:{docs:{},df:0,n:{docs:{},df:0,t:{docs:{},df:0,e:{docs:{},df:0,x:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.4142135623730951}},df:1,":":{docs:{},df:0,":":{docs:{},df:0,n:{docs:{},df:0,e:{docs:{},df:0,w:{docs:{},df:0,"(":{docs:{},df:0,g:{docs:{},df:0,l:{docs:{},df:0,_:{docs:{},df:0,c:{docs:{},df:0,o:{docs:{},df:0,n:{docs:{},df:0,t:{docs:{},df:0,e:{docs:{},df:0,x:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1}},df:2}}}}}}}},f:{docs:{},df:0,w:{docs:{},df:0,c:{docs:{},df:0,o:{docs:{},df:0,n:{docs:{},df:0,t:{docs:{},df:0,e:{docs:{},df:0,x:{docs:{},df:0,t:{docs:{},df:0,"(":{docs:{},df:0,w:{docs:{},df:0,i:{docs:{},df:0,n:{docs:{},df:0,d:{docs:{},df:0,o:{docs:{},df:0,w:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:2}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},g:{docs:{},df:0,l:{docs:{},df:0,c:{docs:{},df:0,o:{docs:{},df:0,n:{docs:{},df:0,t:{docs:{},df:0,e:{docs:{},df:0,x:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1}},df:2}}}}}}}}}}},b:{docs:{},df:0,u:{docs:{},df:0,f:{docs:{},df:0,f:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/chapter/":{tf:1}},df:1}}}}}}},r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.449489742783178},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:5}},i:{docs:{},df:0,n:{docs:{},df:0,i:{docs:{},df:0,o:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:3.7416573867739413},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1}},df:2}}}}},p:{docs:{},df:0,o:{docs:{},df:0,r:{docs:{},df:0,t:{docs:{},df:0,u:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1.4142135623730951}},df:2}}}}}},r:{docs:{},df:0,a:{docs:{},df:0,h:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}},t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:3.1622776601683795},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:4,i:{docs:{},df:0,m:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1}},df:2},o:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:3.4641016151377544},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.4142135623730951}},df:3,"&":{docs:{},df:0,l:{docs:{},df:0,t:{docs:{},df:0,";":{docs:{},df:0,"&":{docs:{},df:0,a:{docs:{},df:0,m:{docs:{},df:0,p:{docs:{},df:0,";":{docs:{},df:0,e:{docs:{},df:0,v:{docs:{},df:0,e:{docs:{},df:0,n:{docs:{},df:0,t:{docs:{},df:0,t:{docs:{},df:0,a:{docs:{},df:0,r:{docs:{},df:0,g:{docs:{},df:0,e:{docs:{},df:0,t:{docs:{},df:0,"&":{docs:{},df:0,g:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}}}}}}}}}},m:{docs:{},df:0,u:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}},t:{docs:{},df:0,e:{docs:{},df:0,x:{docs:{},df:0,t:{docs:{},df:0,u:{docs:{},df:0,r:{docs:{},df:0,e:{docs:{},df:0,"&":{docs:{},df:0,g:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}}}}}},w:{docs:{},df:0,i:{docs:{},df:0,n:{docs:{},df:0,d:{docs:{},df:0,o:{docs:{},df:0,w:{docs:{},df:0,"&":{docs:{},df:0,g:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}}}}}}}}}},"(":{docs:{},df:0,")":{docs:{},df:0,"&":{docs:{},df:0,g:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:1}}}},f:{docs:{},df:0,3:{docs:{},df:0,2:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:1}}}},c:{docs:{},df:0,o:{docs:{},df:0,l:{docs:{},df:0,o:{docs:{},df:0,r:{docs:{},df:0,3:{docs:{},df:0,2:{docs:{},df:0,"&":{docs:{},df:0,g:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:1}}}}}}}}}}}}}}}}}}},r:{docs:{},df:0,d:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1}},df:2,"/":{docs:{},df:0,p:{docs:{},df:0,o:{docs:{},df:0,s:{docs:{},df:0,i:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1}},df:1}}}}}}}}},g:{docs:{},df:0,a:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:3}}},i:{docs:{},df:0,e:{docs:{},df:0,n:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.8284271247461903}},df:1}}},g:{docs:{},df:0,i:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1}},df:2}}}},p:{docs:{},df:0,h:{docs:{},df:0,a:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1}},df:1}}}}},s:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1}},df:1},t:{docs:{},df:0,h:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:5,w:{docs:{},df:0,i:{docs:{},df:0,s:{docs:{"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:3}}}}}}},u:{docs:{},df:0,r:{docs:{},df:0,s:{docs:{},df:0,"(":{docs:{},df:0,s:{docs:{},df:0,p:{docs:{},df:0,o:{docs:{},df:0,i:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1}},df:1}}}}}},e:{docs:{},df:0,l:{docs:{},df:0,f:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1}},df:1},v:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1.4142135623730951}},df:1}}}}},t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:4.47213595499958},"https://breakbuild.dev/devlog/motivation/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:2},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:3.1622776601683795},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:2},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:2},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1}},df:10,"(":{docs:{},df:0,b:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1}},df:1}}},l:{docs:{},df:0,i:{docs:{},df:0,v:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1.4142135623730951}},df:1}}},p:{docs:{},df:0,u:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:3.605551275463989},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:4}}},r:{docs:{},df:0,i:{docs:{},df:0,g:{docs:{},df:0,h:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}},s:{docs:{},df:0,i:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1.7320508075688772}},df:3}}}}},v:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.8284271247461903},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:8,a:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:2}},h:{docs:{},df:0,e:{docs:{},df:0,a:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:3}}}},k:{docs:{},df:0,i:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:1}}},l:{docs:{},df:0,a:{docs:{},df:0,p:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:2}},i:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1}},df:2},o:{docs:{},df:0,a:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.6457513110645907}},df:1}}}},s:{docs:{},df:0,i:{docs:{},df:0,g:{docs:{},df:0,h:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951}},df:1}}}}},v:{docs:{},df:0,i:{docs:{},df:0,e:{docs:{},df:0,w:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1}},df:1}}}}}}},w:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.4142135623730951}},df:2,e:{docs:{},df:0,r:{docs:{},df:0,s:{docs:{},df:0,h:{docs:{},df:0,i:{docs:{},df:0,p:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.449489742783178},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1}},df:5}}}}}}}}},p:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:1,a:{docs:{},df:0,c:{docs:{},df:0,k:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1.7320508075688772}},df:2,a:{docs:{},df:0,g:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1.7320508075688772}},df:5}}},m:{docs:{},df:0,a:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1}},df:1}}}},g:{docs:{},df:0,e:{docs:{"https://breakbuild.dev/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/support/":{tf:1.4142135623730951}},df:5,".":{docs:{},df:0,1:{docs:{"https://breakbuild.dev/support/":{tf:1}},df:1}}}},i:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/devlog/motivation/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1}},df:2},n:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:3}},n:{docs:{},df:0,i:{docs:{},df:0,c:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1.4142135623730951}},df:2,k:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1}},df:3}}}},p:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}},r:{docs:{},df:0,a:{docs:{},df:0,d:{docs:{},df:0,i:{docs:{},df:0,g:{docs:{},df:0,m:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951}},df:1}}}},g:{docs:{},df:0,r:{docs:{},df:0,a:{docs:{},df:0,p:{docs:{},df:0,h:{docs:{},df:0,".":{docs:{},df:0,1:{docs:{"https://breakbuild.dev/support/":{tf:1}},df:1}}}}}}},m:{docs:{},df:0,e:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1.4142135623730951}},df:6}}}},e:{docs:{},df:0,n:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1}},df:1,h:{docs:{},df:0,e:{docs:{},df:0,s:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:1}}}}}},t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.449489742783178},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:2},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:7,i:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:2,a:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.4142135623730951}},df:2,e:{docs:{},df:0,q:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:1}}}},c:{docs:{},df:0,u:{docs:{},df:0,l:{docs:{},df:0,a:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:3}}}}}}}},s:{docs:{},df:0,s:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.6457513110645907},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:2},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:2},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:2.6457513110645907},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:10},t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:1}},t:{docs:{},df:0,h:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:3},i:{docs:{},df:0,e:{docs:{},df:0,n:{docs:{},df:0,c:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}},t:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.23606797749979}},df:1}}}}},y:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/motivation/":{tf:1}},df:2,w:{docs:{},df:0,a:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/devlog/motivation/":{tf:1},"https://breakbuild.dev/support/":{tf:1}},df:2}}}}},e:{docs:{},df:0,d:{docs:{},df:0,a:{docs:{},df:0,n:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.4142135623730951}},df:1}}}},n:{docs:{},df:0,a:{docs:{},df:0,l:{docs:{},df:0,t:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:1}}}}},o:{docs:{},df:0,p:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:3},"https://breakbuild.dev/support/":{tf:1}},df:2,e:{docs:{},df:0,"'":{docs:{"https://breakbuild.dev/":{tf:1},"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951}},df:2}}}}},r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:2},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.4142135623730951}},df:6,c:{docs:{},df:0,e:{docs:{},df:0,n:{docs:{},df:0,t:{docs:{},df:0,a:{docs:{},df:0,g:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:1}}}}}},f:{docs:{},df:0,e:{docs:{},df:0,c:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/":{tf:1}},df:2,l:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/devlog/motivation/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:3}}}}},o:{docs:{},df:0,r:{docs:{},df:0,m:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.4142135623730951}},df:5}}}},h:{docs:{},df:0,a:{docs:{},df:0,p:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}},i:{docs:{},df:0,o:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}},s:{docs:{},df:0,i:{docs:{},df:0,a:{docs:{},df:0,n:{docs:{},df:0,_:{docs:{},df:0,i:{docs:{},df:0,n:{docs:{},df:0,d:{docs:{},df:0,i:{docs:{},df:0,g:{docs:{},df:0,o:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:1}}}}}}}}}},o:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:2.23606797749979},"https://breakbuild.dev/support/":{tf:1}},df:3}},p:{docs:{},df:0,e:{docs:{},df:0,c:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.7320508075688772}},df:2}}}}}},s:{docs:{},df:0,k:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1}},df:1}}}},h:{docs:{},df:0,a:{docs:{},df:0,n:{docs:{},df:0,t:{docs:{},df:0,o:{docs:{},df:0,m:{docs:{},df:0,d:{docs:{},df:0,a:{docs:{},df:0,t:{docs:{},df:0,a:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:1}}}}}}}},s:{docs:{},df:0,e:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}},i:{docs:{},df:0,l:{docs:{},df:0,o:{docs:{},df:0,s:{docs:{},df:0,o:{docs:{},df:0,p:{docs:{},df:0,h:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:2}}}}}}}},r:{docs:{},df:0,a:{docs:{},df:0,s:{docs:{},df:0,e:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}},i:{docs:{},df:0,c:{docs:{},df:0,k:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.7320508075688772}},df:4}},e:{docs:{},df:0,c:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1}},df:1}},p:{docs:{},df:0,e:{docs:{},df:0,l:{docs:{},df:0,i:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:2.23606797749979}},df:2}}}}},x:{docs:{},df:0,e:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:3},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:2}}}},l:{docs:{},df:0,a:{docs:{},df:0,c:{docs:{},df:0,e:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/chapter/":{tf:1}},df:2,m:{docs:{},df:0,e:{docs:{},df:0,n:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951}},df:1}}}}}},i:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:1}},n:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1}},df:4},t:{docs:{},df:0,f:{docs:{},df:0,o:{docs:{},df:0,r:{docs:{},df:0,m:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/motivation/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.7320508075688772}},df:9}}}}},y:{docs:{"https://breakbuild.dev/devlog/motivation/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1}},df:3,g:{docs:{},df:0,r:{docs:{},df:0,o:{docs:{},df:0,u:{docs:{},df:0,n:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:2},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/chapter/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:2},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.7320508075688772}},df:11,".":{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1.4142135623730951}},df:7}}}}}}}}}},e:{docs:{},df:0,a:{docs:{},df:0,s:{docs:{"https://breakbuild.dev/":{tf:1},"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:4}}},u:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:2,r:{docs:{},df:0,a:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1}},df:2}}}}},o:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.7320508075688772}},df:1,i:{docs:{},df:0,n:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/":{tf:1},"https://breakbuild.dev/blog/my-year-with-rust/":{tf:3.7416573867739413},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:2},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:2},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:2},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:2.449489742783178},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.4142135623730951}},df:12,"(":{docs:{},df:0,s:{docs:{},df:0,p:{docs:{},df:0,o:{docs:{},df:0,i:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:1}}}}}},e:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:2.6457513110645907},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:3},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:3.3166247903554},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.7320508075688772}},df:9}},s:{docs:{},df:0,"(":{docs:{},df:0,a:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1}},df:1}}}}}},l:{docs:{},df:0,i:{docs:{},df:0,c:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}},l:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.4142135623730951}},df:3,u:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1}},df:1}}},y:{docs:{},df:0,m:{docs:{},df:0,o:{docs:{},df:0,r:{docs:{},df:0,p:{docs:{},df:0,h:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951}},df:1}}}}}}},p:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1}},df:1,u:{docs:{},df:0,l:{docs:{},df:0,a:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/motivation/":{tf:1}},df:2}}}}},r:{docs:{},df:0,t:{docs:{},df:0,a:{docs:{},df:0,b:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:1}}},i:{docs:{},df:0,o:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}},s:{docs:{},df:0,".":{docs:{},df:0,i:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:2.449489742783178}},df:1},x:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.7320508075688772}},df:1}},i:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:2},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:4.242640687119285},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1}},df:5,i:{docs:{},df:0,o:{docs:{},df:0,n:{docs:{},df:0,"(":{docs:{},df:0,3:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1}},df:1}},0:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1.7320508075688772}},df:1},1:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1.7320508075688772}},df:1},_:{docs:{},df:0,f:{docs:{},df:0,o:{docs:{},df:0,r:{docs:{},df:0,_:{docs:{},df:0,v:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{},df:0,t:{docs:{},df:0,e:{docs:{},df:0,x:{docs:{},df:0,_:{docs:{},df:0,0:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1}},df:1},1:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1}},df:1}}}}}}}}}}}}}}}}}},s:{docs:{},df:0,i:{docs:{},df:0,b:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/":{tf:1},"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.6457513110645907},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:2.23606797749979}},df:10}}}},t:{docs:{"https://breakbuild.dev/devlog/renderer/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/support/":{tf:1.4142135623730951}},df:3,p:{docs:{},df:0,o:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:1}}}}},t:{docs:{},df:0,a:{docs:{},df:0,t:{docs:{},df:0,o:{docs:{},df:0,h:{docs:{},df:0,e:{docs:{},df:0,a:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1.7320508075688772}},df:1}}}}}}},e:{docs:{},df:0,n:{docs:{},df:0,t:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:3.605551275463989},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1}},df:8}}}}},w:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:3}}}},r:{docs:{},df:0,a:{docs:{},df:0,c:{docs:{},df:0,t:{docs:{},df:0,i:{docs:{},df:0,c:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:4}}}},i:{docs:{},df:0,s:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}},y:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1}},df:1}},e:{docs:{},df:0,c:{docs:{},df:0,o:{docs:{},df:0,n:{docs:{},df:0,d:{docs:{},df:0,i:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/motivation/":{tf:1}},df:1}}}}}},d:{docs:{},df:0,e:{docs:{},df:0,c:{docs:{},df:0,e:{docs:{},df:0,s:{docs:{},df:0,s:{docs:{},df:0,o:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1}},df:2}}}}}}}},f:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/motivation/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1.7320508075688772}},df:5}},i:{docs:{},df:0,x:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:3}}},r:{docs:{},df:0,e:{docs:{},df:0,q:{docs:{},df:0,u:{docs:{},df:0,i:{docs:{},df:0,s:{docs:{},df:0,i:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1}},df:1}}}}}}}},s:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{},df:0,v:{docs:{"https://breakbuild.dev/devlog/motivation/":{tf:1}},df:1}}}},t:{docs:{},df:0,e:{docs:{},df:0,n:{docs:{},df:0,t:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:1}}}},t:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/":{tf:1.4142135623730951},"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.8284271247461903},"https://breakbuild.dev/devlog/motivation/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:2.23606797749979}},df:10}}},v:{docs:{},df:0,e:{docs:{},df:0,n:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1}},df:3}}},i:{docs:{},df:0,o:{docs:{},df:0,u:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/motivation/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:6,s:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:6}}}}}},i:{docs:{},df:0,c:{docs:{},df:0,e:{docs:{"https://breakbuild.dev/devlog/motivation/":{tf:1}},df:1}},m:{docs:{},df:0,i:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:2.6457513110645907}},df:1,i:{docs:{},df:0,v:{docs:{},df:0,e:{docs:{},df:0,"(":{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1}},df:1},s:{docs:{},df:0,"(":{docs:{},df:0,e:{docs:{},df:0,".":{docs:{},df:0,g:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1}},df:1}}}}}}}}}}},n:{docs:{},df:0,c:{docs:{},df:0,i:{docs:{},df:0,p:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:1}}}},t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:2,f:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1},l:{docs:{},df:0,n:{docs:{},df:0,"!":{docs:{},df:0,"(":{docs:{},df:0,'"':{docs:{},df:0,i:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1,"'":{docs:{},df:0,m:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}},m:{docs:{},df:0,a:{docs:{},df:0,x:{docs:{},df:0,_:{docs:{},df:0,a:{docs:{},df:0,t:{docs:{},df:0,t:{docs:{},df:0,r:{docs:{},df:0,i:{docs:{},df:0,b:{docs:{},df:0,u:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1}},df:1}}}}}}}}}}}},"{":{docs:{},df:0,a:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951}},df:1}}}}}}}}},v:{docs:{},df:0,a:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/support/":{tf:1}},df:1}}}},o:{docs:{},df:0,b:{docs:{},df:0,a:{docs:{},df:0,b:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2},"https://breakbuild.dev/devlog/":{tf:1},"https://breakbuild.dev/devlog/motivation/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.4142135623730951}},df:8}}},e:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1}},df:1},l:{docs:{},df:0,e:{docs:{},df:0,m:{docs:{"https://breakbuild.dev/":{tf:1.4142135623730951},"https://breakbuild.dev/blog/my-year-with-rust/":{tf:4.242640687119285},"https://breakbuild.dev/devlog/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:11}}}},c:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1}},df:3,_:{docs:{},df:0,a:{docs:{},df:0,d:{docs:{},df:0,d:{docs:{},df:0,r:{docs:{},df:0,e:{docs:{},df:0,s:{docs:{},df:0,s:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1.4142135623730951}},df:1}}}}}}}},e:{docs:{},df:0,s:{docs:{},df:0,s:{docs:{"https://breakbuild.dev/":{tf:1},"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:7}}},r:{docs:{},df:0,a:{docs:{},df:0,s:{docs:{},df:0,t:{docs:{},df:0,i:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:2}}}}}}},d:{docs:{},df:0,u:{docs:{},df:0,c:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:2,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.449489742783178},"https://breakbuild.dev/devlog/motivation/":{tf:1.4142135623730951}},df:2}}}},f:{docs:{},df:0,e:{docs:{},df:0,s:{docs:{},df:0,s:{docs:{},df:0,i:{docs:{},df:0,o:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/":{tf:1}},df:1}}}}}},i:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:2.449489742783178}},df:7,e:{docs:{},df:0,".":{docs:{},df:0,d:{docs:{},df:0,e:{docs:{},df:0,v:{docs:{"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1}},df:1}}},r:{docs:{},df:0,e:{docs:{},df:0,l:{docs:{},df:0,e:{docs:{},df:0,a:{docs:{},df:0,s:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:1}}}}}}},":":{docs:{},df:0,":":{docs:{},df:0,c:{docs:{},df:0,o:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:1}}}}}}},t:{docs:{},df:0,a:{docs:{},df:0,b:{docs:{},df:0,i:{docs:{},df:0,l:{docs:{},df:0,i:{docs:{},df:0,t:{docs:{},df:0,y:{docs:{},df:0,"(":{docs:{},df:0,e:{docs:{},df:0,n:{docs:{},df:0,o:{docs:{},df:0,u:{docs:{},df:0,g:{docs:{},df:0,h:{docs:{"https://breakbuild.dev/devlog/motivation/":{tf:1}},df:1}}}}}}}}}}}}}}}}},g:{docs:{},df:0,r:{docs:{},df:0,a:{docs:{},df:0,m:{docs:{"https://breakbuild.dev/":{tf:1.4142135623730951},"https://breakbuild.dev/blog/my-year-with-rust/":{tf:3.872983346207417},"https://breakbuild.dev/devlog/renderer/hello_triangle/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:3.3166247903554},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/chapter/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:9,m:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.8284271247461903},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:2.23606797749979}},df:4}}},e:{docs:{},df:0,s:{docs:{},df:0,s:{docs:{"https://breakbuild.dev/":{tf:1.4142135623730951},"https://breakbuild.dev/blog/":{tf:1},"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/":{tf:1}},df:4}}}}},j:{docs:{},df:0,e:{docs:{},df:0,c:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/":{tf:1.4142135623730951},"https://breakbuild.dev/blog/my-year-with-rust/":{tf:3.4641016151377544},"https://breakbuild.dev/devlog/":{tf:1},"https://breakbuild.dev/devlog/motivation/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/project_setup/":{tf:1},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:2.6457513110645907},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:2.8284271247461903},"https://breakbuild.dev/support/":{tf:2}},df:9,"(":{docs:{},df:0,t:{docs:{},df:0,h:{docs:{},df:0,a:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:1}}}}},s:{docs:{},df:0,"/":{docs:{},df:0,".":{docs:{},df:0,c:{docs:{},df:0,a:{docs:{},df:0,r:{docs:{},df:0,g:{docs:{},df:0,o:{docs:{},df:0,"/":{docs:{},df:0,c:{docs:{},df:0,o:{docs:{},df:0,n:{docs:{},df:0,f:{docs:{},df:0,i:{docs:{},df:0,g:{docs:{},df:0,".":{docs:{},df:0,t:{docs:{},df:0,o:{docs:{},df:0,m:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1}},df:1}}}}}}}}}}}}}}}}}}}}}}}},n:{docs:{},df:0,e:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}},p:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.4142135623730951}},df:8,l:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1}},df:4}}}},r:{docs:{},df:0,i:{docs:{},df:0,e:{docs:{},df:0,t:{docs:{},df:0,a:{docs:{},df:0,r:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/devlog/motivation/":{tf:1}},df:1}}}}}}}},s:{docs:{},df:0,"/":{docs:{},df:0,c:{docs:{},df:0,o:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}},t:{docs:{},df:0,e:{docs:{},df:0,c:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}},o:{docs:{},df:0,c:{docs:{},df:0,o:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}},t:{docs:{},df:0,y:{docs:{},df:0,p:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/motivation/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:3}}}}},v:{docs:{},df:0,e:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}},i:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1.4142135623730951}},df:8}}}},u:{docs:{},df:0,n:{docs:{},df:0,e:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}},t:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:2}},df:1}},u:{docs:{},df:0,b:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:3},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:2},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:2.449489742783178},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:5.477225575051661},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:4.58257569495584},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:7,"(":{docs:{},df:0,s:{docs:{},df:0,u:{docs:{},df:0,p:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:2}},df:1}}}},l:{docs:{},df:0,i:{docs:{},df:0,c:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:1,l:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}},l:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/support/":{tf:1}},df:1}},n:{docs:{},df:0,c:{docs:{},df:0,t:{docs:{},df:0,u:{docs:{},df:0,a:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:1}}}}}},r:{docs:{},df:0,p:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:1},o:{docs:{},df:0,s:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:6}}}},s:{docs:{},df:0,h:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/motivation/":{tf:1}},df:2}},t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:2.6457513110645907},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1},"https://breakbuild.dev/support/":{tf:1}},df:10}}},q:{docs:{},df:0,u:{docs:{},df:0,a:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1}},df:1,_:{docs:{},df:0,v:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{},df:0,t:{docs:{},df:0,i:{docs:{},df:0,c:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1}},df:4}}}}}}}},l:{docs:{},df:0,i:{docs:{},df:0,f:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.4142135623730951}},df:1}},t:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.449489742783178},"https://breakbuild.dev/support/":{tf:1}},df:2},y:{docs:{},df:0,"(":{docs:{},df:0,a:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}}}},e:{docs:{},df:0,r:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:1}},s:{docs:{},df:0,t:{docs:{},df:0,i:{docs:{},df:0,o:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/":{tf:1},"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1},"https://breakbuild.dev/support/":{tf:1.4142135623730951}},df:6,s:{docs:{},df:0,"(":{docs:{},df:0,t:{docs:{},df:0,h:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}}}}},u:{docs:{},df:0,e:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:3}}},i:{docs:{},df:0,c:{docs:{},df:0,k:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1}},df:2,l:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}},t:{docs:{"https://breakbuild.dev/devlog/motivation/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.4142135623730951}},df:3}}}},r:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:2},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:2}},df:2,"/":{docs:{},df:0,r:{docs:{},df:0,u:{docs:{},df:0,s:{docs:{},df:0,t:{docs:{},df:0,j:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{},df:0,k:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}}}}},1:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1},2:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1},a:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1},m:{docs:{},df:0,b:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/":{tf:1},"https://breakbuild.dev/blog/":{tf:1}},df:2}},e:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/devlog/motivation/":{tf:1}},df:1}}},n:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1,d:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1,o:{docs:{},df:0,m:{docs:{"https://breakbuild.dev/":{tf:1},"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/motivation/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:4,l:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}},g:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.4142135623730951}},df:3}},r:{docs:{},df:0,e:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772}},df:1}},s:{docs:{},df:0,t:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1}},df:1}}}},t:{docs:{},df:0,i:{docs:{},df:0,o:{docs:{},df:0,n:{docs:{},df:0,a:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}},w:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.4142135623730951}},df:6,_:{docs:{},df:0,c:{docs:{},df:0,o:{docs:{},df:0,n:{docs:{},df:0,t:{docs:{},df:0,e:{docs:{},df:0,x:{docs:{},df:0,t:{docs:{},df:0,"(":{docs:{},df:0,"&":{docs:{},df:0,a:{docs:{},df:0,m:{docs:{},df:0,p:{docs:{},df:0,";":{docs:{},df:0,m:{docs:{},df:0,u:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1}},df:1}}}}}}}}}}}}}}}},g:{docs:{},df:0,l:{docs:{},df:0,_:{docs:{},df:0,c:{docs:{},df:0,o:{docs:{},df:0,n:{docs:{},df:0,t:{docs:{},df:0,e:{docs:{},df:0,x:{docs:{},df:0,t:{docs:{},df:0,":":{docs:{},df:0,":":{docs:{},df:0,g:{docs:{},df:0,l:{docs:{},df:0,c:{docs:{},df:0,o:{docs:{},df:0,n:{docs:{},df:0,f:{docs:{},df:0,i:{docs:{},df:0,g:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.4142135623730951}},df:4}}},t:{docs:{},df:0,e:{docs:{},df:0,x:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:3}}}}}}}}},p:{docs:{},df:0,r:{docs:{},df:0,o:{docs:{},df:0,f:{docs:{},df:0,i:{docs:{},df:0,l:{docs:{},df:0,e:{docs:{},df:0,":":{docs:{},df:0,":":{docs:{},df:0,c:{docs:{},df:0,o:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.4142135623730951}},df:3}}}}}}}}}}}}}}}}}}}}}}}}},w:{docs:{},df:0,i:{docs:{},df:0,n:{docs:{},df:0,d:{docs:{},df:0,o:{docs:{},df:0,w:{docs:{},df:0,h:{docs:{},df:0,a:{docs:{},df:0,n:{docs:{},df:0,d:{docs:{},df:0,l:{docs:{},df:0,e:{docs:{},df:0,"'":{docs:{"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:1}}}}}}}}}}}}}},y:{docs:{"https://breakbuild.dev/devlog/renderer/":{tf:1}},df:1}},c:{docs:{},df:0,"&":{docs:{},df:0,l:{docs:{},df:0,t:{docs:{},df:0,";":{docs:{},df:0,r:{docs:{},df:0,e:{docs:{},df:0,f:{docs:{},df:0,c:{docs:{},df:0,e:{docs:{},df:0,l:{docs:{},df:0,l:{docs:{},df:0,"&":{docs:{},df:0,g:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}},l:{docs:{},df:0,t:{docs:{},df:0,";":{docs:{},df:0,t:{docs:{},df:0,"&":{docs:{},df:0,g:{docs:{},df:0,t:{docs:{},df:0,";":{docs:{},df:0,"&":{docs:{},df:0,g:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1.4142135623730951}},df:1}}}}}}}}}}}}}}}}}}}}}}}},e:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:5,a:{docs:{},df:0,c:{docs:{},df:0,h:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/motivation/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1}},df:4,a:{docs:{},df:0,b:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}},d:{docs:{"https://breakbuild.dev/":{tf:1},"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:2.6457513110645907},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1.4142135623730951}},df:8,a:{docs:{},df:0,b:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:2}}},e:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1},"https://breakbuild.dev/support/":{tf:1}},df:3}},i:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1},m:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1}},df:1}},l:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:1,i:{docs:{},df:0,s:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:1}},t:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:4}},z:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}},l:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:3.872983346207417},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:8}}},s:{docs:{},df:0,o:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/":{tf:1},"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/motivation/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:2},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.4142135623730951}},df:8}}}},b:{docs:{},df:0,u:{docs:{},df:0,i:{docs:{},df:0,l:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1.4142135623730951}},df:1}}}}},c:{docs:{},df:0,a:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1}},df:1}},e:{docs:{},df:0,i:{docs:{},df:0,v:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1.4142135623730951}},df:1}}},o:{docs:{},df:0,g:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1}},df:2}},m:{docs:{},df:0,m:{docs:{},df:0,e:{docs:{},df:0,n:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1}},df:2}}}}}}},d:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:2.449489742783178},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.4142135623730951}},df:4,d:{docs:{},df:0,i:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/support/":{tf:1}},df:1}}},u:{docs:{},df:0,c:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:3}}},f:{docs:{},df:0,a:{docs:{},df:0,c:{docs:{},df:0,t:{docs:{},df:0,o:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:5}}}}},e:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.8284271247461903},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:7,e:{docs:{},df:0,n:{docs:{},df:0,c:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1}},df:1}}},r:{docs:{"https://breakbuild.dev/devlog/motivation/":{tf:1}},df:1}}},p:{docs:{},df:0,a:{docs:{},df:0,g:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:1}}},r:{docs:{},df:0,e:{docs:{},df:0,s:{docs:{},df:0,h:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:1}}}},u:{docs:{},df:0,g:{docs:{},df:0,e:{docs:{"https://breakbuild.dev/devlog/motivation/":{tf:1}},df:1}}}},g:{docs:{},df:0,i:{docs:{},df:0,s:{docs:{},df:0,t:{docs:{},df:0,r:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:2},y:{docs:{},df:0,":":{docs:{},df:0,":":{docs:{},df:0,n:{docs:{},df:0,e:{docs:{},df:0,w:{docs:{},df:0,"(":{docs:{},df:0,a:{docs:{},df:0,p:{docs:{},df:0,i:{docs:{},df:0,":":{docs:{},df:0,":":{docs:{},df:0,g:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:1}}}}}}}}}}}}}}}}}},u:{docs:{},df:0,l:{docs:{},df:0,a:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/blog/":{tf:1}},df:1}}}}},i:{docs:{},df:0,m:{docs:{},df:0,p:{docs:{},df:0,l:{docs:{},df:0,e:{docs:{},df:0,m:{docs:{},df:0,e:{docs:{},df:0,n:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}}}}},j:{docs:{},df:0,e:{docs:{},df:0,c:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}},l:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:2.23606797749979}},df:1,a:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:4,e:{docs:{},df:0,d:{docs:{},df:0,_:{docs:{},df:0,t:{docs:{},df:0,a:{docs:{},df:0,r:{docs:{},df:0,g:{docs:{},df:0,e:{docs:{},df:0,t:{docs:{},df:0,_:{docs:{},df:0,a:{docs:{},df:0,r:{docs:{},df:0,g:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}}}}}}}}},i:{docs:{},df:0,o:{docs:{},df:0,n:{docs:{},df:0,s:{docs:{},df:0,h:{docs:{},df:0,i:{docs:{},df:0,p:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1}},df:2}}}}}},v:{docs:{},df:0,e:{docs:{},df:0,o:{docs:{},df:0,f:{docs:{},df:0,f:{docs:{},df:0,s:{docs:{},df:0,e:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1.7320508075688772}},df:1}}}}}}}}}},y:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:1}},e:{docs:{},df:0,a:{docs:{},df:0,s:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1},"https://breakbuild.dev/support/":{tf:1}},df:4}},v:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1}},df:4}},i:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.449489742783178},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:5,a:{docs:{},df:0,b:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:1}},n:{docs:{},df:0,c:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772}},df:1}}}},o:{docs:{},df:0,a:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/devlog/renderer/":{tf:1}},df:1}}},u:{docs:{},df:0,c:{docs:{},df:0,t:{docs:{},df:0,a:{docs:{},df:0,n:{docs:{},df:0,t:{docs:{},df:0,l:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}}}}},m:{docs:{},df:0,e:{docs:{},df:0,m:{docs:{},df:0,b:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}},o:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951}},df:1},v:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:5}}},n:{docs:{},df:0,a:{docs:{},df:0,m:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.4142135623730951}},df:2}},d:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/":{tf:1},"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2},"https://breakbuild.dev/devlog/":{tf:1},"https://breakbuild.dev/devlog/motivation/":{tf:1},"https://breakbuild.dev/devlog/renderer/":{tf:3.1622776601683795},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1.7320508075688772}},df:10,_:{docs:{},df:0,t:{docs:{},df:0,a:{docs:{},df:0,r:{docs:{},df:0,g:{docs:{},df:0,e:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:1,".":{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.4142135623730951}},df:1}},":":{docs:{},df:0,":":{docs:{},df:0,c:{docs:{},df:0,o:{docs:{},df:0,n:{docs:{},df:0,t:{docs:{},df:0,e:{docs:{},df:0,x:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:2}},df:1}}}}}}}}}}}}}}}},c:{docs:{},df:0,o:{docs:{},df:0,n:{docs:{},df:0,t:{docs:{},df:0,e:{docs:{},df:0,x:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1}},df:1,"&":{docs:{},df:0,l:{docs:{},df:0,t:{docs:{},df:0,";":{docs:{},df:0,c:{docs:{},df:0,o:{docs:{},df:0,n:{docs:{},df:0,t:{docs:{},df:0,e:{docs:{},df:0,x:{docs:{},df:0,t:{docs:{},df:0,"=":{docs:{},df:0,o:{docs:{},df:0,p:{docs:{},df:0,e:{docs:{},df:0,n:{docs:{},df:0,g:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/chapter/":{tf:1}},df:1}}}}}}}}}}}}}}}}}}}}}}}}},t:{docs:{},df:0,a:{docs:{},df:0,r:{docs:{},df:0,g:{docs:{},df:0,e:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:4.358898943540674}},df:1,"&":{docs:{},df:0,l:{docs:{},df:0,t:{docs:{},df:0,";":{docs:{},df:0,o:{docs:{},df:0,p:{docs:{},df:0,e:{docs:{},df:0,n:{docs:{},df:0,g:{docs:{},df:0,l:{docs:{},df:0,":":{docs:{},df:0,":":{docs:{},df:0,c:{docs:{},df:0,o:{docs:{},df:0,n:{docs:{},df:0,t:{docs:{},df:0,e:{docs:{},df:0,x:{docs:{},df:0,t:{docs:{},df:0,"&":{docs:{},df:0,g:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:1}}}}}}}}}}}}}}}}}}}}}},":":{docs:{},df:0,":":{docs:{},df:0,w:{docs:{},df:0,i:{docs:{},df:0,t:{docs:{},df:0,h:{docs:{},df:0,_:{docs:{},df:0,c:{docs:{},df:0,l:{docs:{},df:0,e:{docs:{},df:0,a:{docs:{},df:0,r:{docs:{},df:0,_:{docs:{},df:0,c:{docs:{},df:0,o:{docs:{},df:0,l:{docs:{},df:0,o:{docs:{},df:0,r:{docs:{},df:0,"(":{docs:{},df:0,"(":{docs:{},df:0,0:{docs:{},df:0,".":{docs:{},df:0,0:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:1}}}},c:{docs:{},df:0,o:{docs:{},df:0,l:{docs:{},df:0,o:{docs:{},df:0,r:{docs:{},df:0,3:{docs:{},df:0,2:{docs:{},df:0,":":{docs:{},df:0,":":{docs:{},df:0,d:{docs:{},df:0,a:{docs:{},df:0,r:{docs:{},df:0,k:{docs:{},df:0,_:{docs:{},df:0,j:{docs:{},df:0,u:{docs:{},df:0,n:{docs:{},df:0,g:{docs:{},df:0,l:{docs:{},df:0,e:{docs:{},df:0,_:{docs:{},df:0,g:{docs:{},df:0,r:{docs:{},df:0,e:{docs:{},df:0,e:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},p:{docs:{},df:0,e:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1}},df:1}},l:{docs:{},df:0,a:{docs:{},df:0,c:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:4}},i:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}},o:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:2,r:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}},s:{docs:{},df:0,i:{docs:{},df:0,t:{docs:{},df:0,o:{docs:{},df:0,r:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/":{tf:1},"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1},"https://breakbuild.dev/support/":{tf:1}},df:12}}}}}}},r:{docs:{},df:0,"(":{docs:{},df:0,c:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:2}},e:{docs:{},df:0,s:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.4142135623730951}},df:1}}}},q:{docs:{},df:0,u:{docs:{},df:0,e:{docs:{},df:0,s:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1},"https://breakbuild.dev/support/":{tf:1}},df:4}}},i:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:3.872983346207417},"https://breakbuild.dev/devlog/renderer/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:2},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:2.449489742783178},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:2},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.4142135623730951}},df:13,e:{docs:{},df:0,m:{docs:{},df:0,e:{docs:{},df:0,n:{docs:{},df:0,t:{docs:{},df:0,s:{docs:{},df:0,"(":{docs:{},df:0,s:{docs:{},df:0,o:{docs:{},df:0,m:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1}},df:1}}}}}}}}}}}}}},s:{docs:{},df:0,e:{docs:{},df:0,a:{docs:{},df:0,r:{docs:{},df:0,c:{docs:{},df:0,h:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}},i:{docs:{},df:0,s:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}},z:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1}},df:1,e:{docs:{},df:0,a:{docs:{},df:0,b:{docs:{},df:0,l:{docs:{},df:0,e:{docs:{},df:0,"(":{docs:{},df:0,f:{docs:{},df:0,a:{docs:{},df:0,l:{docs:{},df:0,s:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}}}}}}}},o:{docs:{},df:0,r:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}},u:{docs:{},df:0,r:{docs:{},df:0,c:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.449489742783178},"https://breakbuild.dev/devlog/renderer/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/chapter/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:6}}}},p:{docs:{},df:0,e:{docs:{},df:0,c:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/support/":{tf:1}},df:1}}},o:{docs:{},df:0,n:{docs:{},df:0,s:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:3}}}},t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:2,r:{docs:{},df:0,i:{docs:{},df:0,c:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1}},df:2}}}}},u:{docs:{},df:0,l:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:3},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:2}},df:5,"&":{docs:{},df:0,l:{docs:{},df:0,t:{docs:{},df:0,";":{docs:{},df:0,s:{docs:{},df:0,e:{docs:{},df:0,l:{docs:{},df:0,f:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1.4142135623730951}},df:1}}}}}}}}}}}},t:{docs:{},df:0,u:{docs:{},df:0,r:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:3.1622776601683795},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:2.449489742783178},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1.7320508075688772}},df:6}}}},u:{docs:{},df:0,s:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1}},df:2}},v:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1,e:{docs:{},df:0,r:{docs:{},df:0,s:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}},w:{docs:{},df:0,r:{docs:{},df:0,i:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.8284271247461903},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1}},df:3}}}}},f:{docs:{},df:0,c:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}},i:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:3,e:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}},g:{docs:{},df:0,h:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:3.605551275463989},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:2},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.4142135623730951}},df:9}}},s:{docs:{},df:0,e:{docs:{"https://breakbuild.dev/devlog/motivation/":{tf:1}},df:1},k:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951}},df:1}}},o:{docs:{},df:0,a:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1}},df:1,b:{docs:{},df:0,l:{docs:{},df:0,o:{docs:{},df:0,c:{docs:{},df:0,k:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:1}}}}}}},b:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1}},df:1}}}},c:{docs:{},df:0,k:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}},o:{docs:{},df:0,m:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:1},t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.4142135623730951}},df:5}},u:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:1}},w:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772}},df:1}},s:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1}},df:1},u:{docs:{},df:0,l:{docs:{},df:0,e:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1.4142135623730951}},df:3}},n:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:2},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.7320508075688772},"https://breakbuild.dev/support/":{tf:1.4142135623730951}},df:12,t:{docs:{},df:0,i:{docs:{},df:0,m:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:4}}}},s:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/":{tf:1},"https://breakbuild.dev/blog/my-year-with-rust/":{tf:10.392304845413264},"https://breakbuild.dev/devlog/":{tf:1},"https://breakbuild.dev/devlog/motivation/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.7320508075688772}},df:12,"'":{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:3},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:4},_:{docs:{},df:0,l:{docs:{},df:0,o:{docs:{},df:0,g:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:1,"=":{docs:{},df:0,'"':{docs:{},df:0,c:{docs:{},df:0,o:{docs:{},df:0,n:{docs:{},df:0,t:{docs:{},df:0,e:{docs:{},df:0,x:{docs:{},df:0,t:{docs:{},df:0,"=":{docs:{},df:0,t:{docs:{},df:0,r:{docs:{},df:0,a:{docs:{},df:0,c:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:1}}}}}}}}}}}}}}}}}},a:{docs:{},df:0,c:{docs:{},df:0,i:{docs:{},df:0,a:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}},n:{docs:{},df:0,a:{docs:{},df:0,l:{docs:{},df:0,y:{docs:{},df:0,z:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1}},df:3,e:{docs:{},df:0,r:{docs:{},df:0,"'":{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:1}}}}}}}}},f:{docs:{},df:0,l:{docs:{},df:0,a:{docs:{},df:0,g:{docs:{"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1}},df:1}}},m:{docs:{},df:0,t:{docs:{},df:0,":":{docs:{},df:0,":":{docs:{},df:0,s:{docs:{},df:0,k:{docs:{},df:0,i:{docs:{},df:0,p:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1}},df:4}}}}}}}}}}}}},s:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:2,a:{docs:{},df:0,c:{docs:{},df:0,r:{docs:{},df:0,i:{docs:{},df:0,f:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1,i:{docs:{},df:0,c:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1}},df:1}}}}}},d:{docs:{"https://breakbuild.dev/devlog/motivation/":{tf:1.4142135623730951}},df:1},f:{docs:{},df:0,e:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1}},df:5,r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951}},df:1},t:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:3.1622776601683795},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:3}}}},k:{docs:{},df:0,e:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:2}},l:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:1}},m:{docs:{},df:0,e:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:2},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:2.449489742783178},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.4142135623730951},"https://breakbuild.dev/support/":{tf:1}},df:9},p:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:3}}},n:{docs:{},df:0,i:{docs:{},df:0,t:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:1}}}},v:{docs:{},df:0,e:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/motivation/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:4},i:{docs:{},df:0,o:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}},w:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1},y:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1}},df:2}},c:{docs:{},df:0,a:{docs:{},df:0,l:{docs:{},df:0,a:{docs:{},df:0,r:{docs:{},df:0,s:{docs:{},df:0,"(":{docs:{},df:0,s:{docs:{},df:0,i:{docs:{},df:0,n:{docs:{},df:0,g:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1}},df:1}}}}}}}}},e:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:3}},m:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1},r:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:1}}},e:{docs:{},df:0,n:{docs:{},df:0,a:{docs:{},df:0,r:{docs:{},df:0,i:{docs:{},df:0,o:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}},e:{docs:{"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1}},df:1}}},h:{docs:{},df:0,e:{docs:{},df:0,m:{docs:{},df:0,e:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:2}}}},o:{docs:{},df:0,p:{docs:{},df:0,e:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.7320508075688772}},df:5}}},r:{docs:{},df:0,a:{docs:{},df:0,t:{docs:{},df:0,c:{docs:{},df:0,h:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:2}}}},e:{docs:{},df:0,e:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/devlog/renderer/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:2.449489742783178},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:3.1622776601683795},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:2.449489742783178}},df:6,".":{docs:{},df:0,c:{docs:{},df:0,l:{docs:{},df:0,e:{docs:{},df:0,a:{docs:{},df:0,r:{docs:{},df:0,"(":{docs:{},df:0,"&":{docs:{},df:0,a:{docs:{},df:0,m:{docs:{},df:0,p:{docs:{},df:0,";":{docs:{},df:0,m:{docs:{},df:0,u:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:1}}}}}}}}}}}}}}},_:{docs:{},df:0,x:{docs:{},df:0,_:{docs:{},df:0,a:{docs:{},df:0,r:{docs:{},df:0,g:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}},y:{docs:{},df:0,_:{docs:{},df:0,a:{docs:{},df:0,r:{docs:{},df:0,g:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}}}}}}},d:{docs:{},df:0,l:{docs:{},df:0,2:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1}},df:2}}},e:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1,a:{docs:{},df:0,r:{docs:{},df:0,c:{docs:{},df:0,h:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1.4142135623730951},"https://breakbuild.dev/support/":{tf:1}},df:3}}}},c:{docs:{},df:0,o:{docs:{},df:0,n:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1}},df:2}}},t:{docs:{},df:0,i:{docs:{},df:0,o:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1}},df:2}}}}},e:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.6457513110645907},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:8,m:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:3},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:5,i:{docs:{},df:0,n:{docs:{},df:0,g:{docs:{},df:0,l:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772}},df:1}}}}}},n:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1}},df:2}},g:{docs:{},df:0,f:{docs:{},df:0,a:{docs:{},df:0,u:{docs:{},df:0,l:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}},l:{docs:{},df:0,e:{docs:{},df:0,c:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1}},df:1}}},f:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.449489742783178},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:2.8284271247461903},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:5.0990195135927845},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:2.449489742783178}},df:6,".":{docs:{},df:0,0:{docs:{},df:0,".":{docs:{},df:0,g:{docs:{},df:0,e:{docs:{},df:0,t:{docs:{},df:0,_:{docs:{},df:0,p:{docs:{},df:0,r:{docs:{},df:0,o:{docs:{},df:0,c:{docs:{},df:0,_:{docs:{},df:0,a:{docs:{},df:0,d:{docs:{},df:0,d:{docs:{},df:0,r:{docs:{},df:0,e:{docs:{},df:0,s:{docs:{},df:0,s:{docs:{},df:0,"(":{docs:{},df:0,n:{docs:{},df:0,a:{docs:{},df:0,m:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1}},df:2}}}}}}}}}}}}}}}}}}}},s:{docs:{},df:0,w:{docs:{},df:0,a:{docs:{},df:0,p:{docs:{},df:0,_:{docs:{},df:0,b:{docs:{},df:0,u:{docs:{},df:0,f:{docs:{},df:0,f:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1}},df:2}}}}}}}}}}},a:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:2},b:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.4142135623730951}},df:2},d:{docs:{},df:0,a:{docs:{},df:0,t:{docs:{},df:0,a:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1,".":{docs:{},df:0,g:{docs:{},df:0,e:{docs:{},df:0,t:{docs:{},df:0,"(":{docs:{},df:0,i:{docs:{},df:0,n:{docs:{},df:0,d:{docs:{},df:0,e:{docs:{},df:0,x:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}}}}},p:{docs:{},df:0,u:{docs:{},df:0,s:{docs:{},df:0,h:{docs:{},df:0,"(":{docs:{},df:0,'"':{docs:{},df:0,n:{docs:{},df:0,e:{docs:{},df:0,w:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}}}}}}}}}},g:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.4142135623730951}},df:1,l:{docs:{},df:0,_:{docs:{},df:0,c:{docs:{},df:0,o:{docs:{},df:0,n:{docs:{},df:0,t:{docs:{},df:0,e:{docs:{},df:0,x:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1}},df:1,".":{docs:{},df:0,s:{docs:{},df:0,w:{docs:{},df:0,a:{docs:{},df:0,p:{docs:{},df:0,_:{docs:{},df:0,b:{docs:{},df:0,u:{docs:{},df:0,f:{docs:{},df:0,f:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:2}}}}}}}}}}}}}}}}}}}},p:{docs:{},df:0,t:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1.4142135623730951}},df:1,".":{docs:{},df:0,i:{docs:{},df:0,s:{docs:{},df:0,_:{docs:{},df:0,n:{docs:{},df:0,u:{docs:{},df:0,l:{docs:{},df:0,l:{docs:{},df:0,"(":{docs:{},df:0,")":{docs:{},df:0,".":{docs:{},df:0,t:{docs:{},df:0,h:{docs:{},df:0,e:{docs:{},df:0,n:{docs:{},df:0,_:{docs:{},df:0,s:{docs:{},df:0,o:{docs:{},df:0,m:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:1}}}}}}}}}}}}}}}}}}}}}},r:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.4142135623730951}},df:1},s:{docs:{},df:0,h:{docs:{},df:0,a:{docs:{},df:0,d:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{},df:0,s:{docs:{},df:0,".":{docs:{},df:0,g:{docs:{},df:0,e:{docs:{},df:0,t:{docs:{},df:0,"(":{docs:{},df:0,s:{docs:{},df:0,h:{docs:{},df:0,a:{docs:{},df:0,d:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{},df:0,_:{docs:{},df:0,h:{docs:{},df:0,a:{docs:{},df:0,n:{docs:{},df:0,d:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}}}}}}}}},_:{docs:{},df:0,m:{docs:{},df:0,u:{docs:{},df:0,t:{docs:{},df:0,"(":{docs:{},df:0,s:{docs:{},df:0,h:{docs:{},df:0,a:{docs:{},df:0,d:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{},df:0,_:{docs:{},df:0,h:{docs:{},df:0,a:{docs:{},df:0,n:{docs:{},df:0,d:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}}}}}}}}}}}}}}}}}}}}}}}},t:{docs:{},df:0,e:{docs:{},df:0,x:{docs:{},df:0,t:{docs:{},df:0,u:{docs:{},df:0,r:{docs:{},df:0,e:{docs:{},df:0,s:{docs:{},df:0,".":{docs:{},df:0,g:{docs:{},df:0,e:{docs:{},df:0,t:{docs:{},df:0,"(":{docs:{},df:0,t:{docs:{},df:0,e:{docs:{},df:0,x:{docs:{},df:0,t:{docs:{},df:0,u:{docs:{},df:0,r:{docs:{},df:0,e:{docs:{},df:0,_:{docs:{},df:0,h:{docs:{},df:0,a:{docs:{},df:0,n:{docs:{},df:0,d:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}}}}}}}}}}}}}}}}}}}}}}},":":{docs:{},df:0,":":{docs:{},df:0,f:{docs:{},df:0,a:{docs:{},df:0,i:{docs:{},df:0,l:{docs:{},df:0,e:{docs:{},df:0,d:{docs:{},df:0,t:{docs:{},df:0,o:{docs:{},df:0,c:{docs:{},df:0,r:{docs:{},df:0,e:{docs:{},df:0,a:{docs:{},df:0,t:{docs:{},df:0,e:{docs:{},df:0,c:{docs:{},df:0,o:{docs:{},df:0,n:{docs:{},df:0,t:{docs:{},df:0,e:{docs:{},df:0,x:{docs:{},df:0,t:{docs:{},df:0,"(":{docs:{},df:0,c:{docs:{},df:0,a:{docs:{},df:0,u:{docs:{},df:0,s:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}}}}}}}}}}}}}}}}}}}}},r:{docs:{},df:0,o:{docs:{},df:0,m:{docs:{},df:0,_:{docs:{},df:0,r:{docs:{},df:0,g:{docs:{},df:0,b:{docs:{},df:0,"(":{docs:{},df:0,0:{docs:{},df:0,".":{docs:{},df:0,0:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.7320508075688772}},df:1},1:{docs:{},df:0,0:{docs:{},df:0,2:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:1}}},2:{docs:{},df:0,0:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:1}},7:{docs:{},df:0,9:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:1}}}},1:{docs:{},df:0,".":{docs:{},df:0,0:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:2}},df:1}}}}}}}}}}}},i:{docs:{},df:0,n:{docs:{},df:0,v:{docs:{},df:0,a:{docs:{},df:0,l:{docs:{},df:0,i:{docs:{},df:0,d:{docs:{},df:0,c:{docs:{},df:0,o:{docs:{},df:0,n:{docs:{},df:0,t:{docs:{},df:0,e:{docs:{},df:0,x:{docs:{},df:0,t:{docs:{},df:0,"(":{docs:{},df:0,e:{docs:{},df:0,r:{docs:{},df:0,r:{docs:{},df:0,o:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:1}}}}}}}}}}}}}}}}}}}},s:{docs:{},df:0,h:{docs:{},df:0,a:{docs:{},df:0,d:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{},df:0,c:{docs:{},df:0,o:{docs:{},df:0,m:{docs:{},df:0,p:{docs:{},df:0,i:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}}}}}}}},u:{docs:{},df:0,n:{docs:{},df:0,k:{docs:{},df:0,n:{docs:{},df:0,o:{docs:{},df:0,w:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}}}}}}},n:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1},"https://breakbuild.dev/support/":{tf:1.4142135623730951}},df:3},s:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:9}},p:{docs:{},df:0,a:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.4142135623730951}},df:5}}},r:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1},i:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1}},df:2},v:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/chapter/":{tf:1}},df:2,e:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}},i:{docs:{},df:0,c:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:1}}}},t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:2.449489742783178},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:2},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.4142135623730951}},df:11,"/":{docs:{},df:0,c:{docs:{},df:0,h:{docs:{},df:0,a:{docs:{},df:0,n:{docs:{},df:0,g:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1.4142135623730951}},df:1}}}}}},_:{docs:{},df:0,s:{docs:{},df:0,h:{docs:{},df:0,a:{docs:{},df:0,d:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{},df:0,_:{docs:{},df:0,t:{docs:{},df:0,e:{docs:{},df:0,x:{docs:{},df:0,t:{docs:{},df:0,u:{docs:{},df:0,r:{docs:{},df:0,e:{docs:{},df:0,"(":{docs:{},df:0,"&":{docs:{},df:0,a:{docs:{},df:0,m:{docs:{},df:0,p:{docs:{},df:0,";":{docs:{},df:0,m:{docs:{},df:0,u:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}}}}}}}}}}}}}}}}}}},t:{docs:{},df:0,e:{docs:{},df:0,x:{docs:{},df:0,t:{docs:{},df:0,u:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}},v:{docs:{},df:0,a:{docs:{},df:0,r:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}},t:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:1}}},u:{docs:{},df:0,p:{docs:{"https://breakbuild.dev/":{tf:1},"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/project_setup/":{tf:1},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1.4142135623730951}},df:4}}},v:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:2}},df:2}}}},h:{docs:{},df:0,a:{docs:{},df:0,d:{docs:{},df:0,e:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.4142135623730951}},df:1,r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.6457513110645907},"https://breakbuild.dev/devlog/renderer/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:6.782329983125268},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.7320508075688772}},df:10,"&":{docs:{},df:0,g:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}},"(":{docs:{},df:0,a:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1}},df:1}}},".":{docs:{},df:0,s:{docs:{},df:0,e:{docs:{},df:0,t:{docs:{},df:0,_:{docs:{},df:0,t:{docs:{},df:0,e:{docs:{},df:0,x:{docs:{},df:0,t:{docs:{},df:0,u:{docs:{},df:0,r:{docs:{},df:0,e:{docs:{},df:0,"(":{docs:{},df:0,'"':{docs:{},df:0,t:{docs:{},df:0,e:{docs:{},df:0,x:{docs:{},df:0,t:{docs:{},df:0,u:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}}},s:{docs:{},df:0,e:{docs:{},df:0,l:{docs:{},df:0,f:{docs:{},df:0,".":{docs:{},df:0,t:{docs:{},df:0,e:{docs:{},df:0,x:{docs:{},df:0,t:{docs:{},df:0,u:{docs:{},df:0,r:{docs:{},df:0,e:{docs:{},df:0,s:{docs:{},df:0,".":{docs:{},df:0,g:{docs:{},df:0,e:{docs:{},df:0,t:{docs:{},df:0,"(":{docs:{},df:0,t:{docs:{},df:0,e:{docs:{},df:0,x:{docs:{},df:0,t:{docs:{},df:0,u:{docs:{},df:0,r:{docs:{},df:0,e:{docs:{},df:0,_:{docs:{},df:0,h:{docs:{},df:0,a:{docs:{},df:0,n:{docs:{},df:0,d:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},v:{docs:{},df:0,a:{docs:{},df:0,r:{docs:{},df:0,i:{docs:{},df:0,a:{docs:{},df:0,b:{docs:{},df:0,l:{docs:{},df:0,e:{docs:{},df:0,"(":{docs:{},df:0,'"':{docs:{},df:0,c:{docs:{},df:0,o:{docs:{},df:0,l:{docs:{},df:0,o:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}}}}}}}}}}}}}}}},_:{docs:{},df:0,h:{docs:{},df:0,a:{docs:{},df:0,n:{docs:{},df:0,d:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951}},df:1}}}}},p:{docs:{},df:0,r:{docs:{},df:0,o:{docs:{},df:0,g:{docs:{},df:0,r:{docs:{},df:0,a:{docs:{},df:0,m:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1}},df:2}}}}}}}},c:{docs:{},df:0,o:{docs:{},df:0,m:{docs:{},df:0,p:{docs:{},df:0,i:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951}},df:1,a:{docs:{},df:0,t:{docs:{},df:0,i:{docs:{},df:0,o:{docs:{},df:0,n:{docs:{},df:0,"(":{docs:{},df:0,s:{docs:{},df:0,h:{docs:{},df:0,a:{docs:{},df:0,d:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{},df:0,c:{docs:{},df:0,o:{docs:{},df:0,m:{docs:{},df:0,p:{docs:{},df:0,i:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}}}}}}}}}}}}}}}}}}}},p:{docs:{},df:0,r:{docs:{},df:0,o:{docs:{},df:0,g:{docs:{},df:0,r:{docs:{},df:0,a:{docs:{},df:0,m:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.7320508075688772}},df:1}}}}}}}}}},p:{docs:{},df:0,e:{docs:{},df:0,"(":{docs:{},df:0,u:{docs:{},df:0,s:{docs:{},df:0,u:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1}},df:1}}}}}},r:{docs:{},df:0,e:{docs:{"https://breakbuild.dev/":{tf:1.7320508075688772},"https://breakbuild.dev/blog/":{tf:1},"https://breakbuild.dev/blog/my-year-with-rust/":{tf:3.1622776601683795},"https://breakbuild.dev/devlog/renderer/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1}},df:7}},t:{docs:{},df:0,t:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1}},df:1}}}}},e:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}},i:{docs:{"https://breakbuild.dev/support/":{tf:1}},df:1,f:{docs:{},df:0,t:{docs:{},df:0,_:{docs:{},df:0,k:{docs:{},df:0,e:{docs:{},df:0,y:{docs:{},df:0,_:{docs:{},df:0,a:{docs:{},df:0,r:{docs:{},df:0,g:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}}}}}}},o:{docs:{},df:0,r:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:8,c:{docs:{},df:0,u:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}},e:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:1}},l:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/devlog/motivation/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1}},df:2}}}},t:{docs:{"https://breakbuild.dev/devlog/motivation/":{tf:1}},df:1},u:{docs:{},df:0,l:{docs:{},df:0,d:{docs:{},df:0,"/":{docs:{},df:0,c:{docs:{},df:0,o:{docs:{},df:0,u:{docs:{},df:0,l:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}},n:{docs:{},df:0,"'":{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/":{tf:1}},df:1}}}}}},v:{docs:{},df:0,e:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.4142135623730951}},df:4}},w:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:5}}},i:{docs:{},df:0,b:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}},d:{docs:{},df:0,e:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.4142135623730951}},df:2}},e:{docs:{},df:0,v:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}},g:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1}},df:1,a:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:2},t:{docs:{},df:0,u:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:1}}}}}},l:{docs:{},df:0,e:{docs:{},df:0,n:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}},l:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:2}},v:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}},m:{docs:{},df:0,i:{docs:{},df:0,l:{docs:{},df:0,a:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/":{tf:1},"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2},"https://breakbuild.dev/devlog/motivation/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1.4142135623730951}},df:6}}}},p:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/":{tf:1},"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.8284271247461903},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.4142135623730951}},df:11,e:{docs:{},df:0,"(":{docs:{},df:0,j:{docs:{},df:0,u:{docs:{},df:0,s:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:1}}}}},_:{docs:{},df:0,l:{docs:{},df:0,o:{docs:{},df:0,g:{docs:{},df:0,g:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:1}}}}},r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.4142135623730951}},df:3},s:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1}},df:1}}},i:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.4142135623730951}},df:3,f:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}},s:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1}},df:1}}}}},u:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1}},df:1}}},n:{docs:{},df:0,g:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/":{tf:1},"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.449489742783178},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:2.449489742783178},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:2.8284271247461903},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:2.6457513110645907},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.4142135623730951}},df:9}}},t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1}},df:2,e:{docs:{"https://breakbuild.dev/":{tf:1.7320508075688772},"https://breakbuild.dev/blog/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/support/":{tf:1.7320508075688772}},df:4},u:{docs:{},df:0,a:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951}},df:1}}}},z:{docs:{},df:0,e:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:3.7416573867739413},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1.7320508075688772}},df:6,n:{docs:{},df:0,o:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:1}}}}}},k:{docs:{},df:0,e:{docs:{},df:0,t:{docs:{},df:0,c:{docs:{},df:0,h:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1}},df:3}}}},i:{docs:{},df:0,l:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.4142135623730951}},df:1}},m:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:3},p:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:6}}},l:{docs:{},df:0,i:{docs:{},df:0,c:{docs:{},df:0,e:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:2},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.4142135623730951}},df:3,s:{docs:{},df:0,"(":{docs:{},df:0,e:{docs:{},df:0,".":{docs:{},df:0,g:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1}},df:1}}}}}}},g:{docs:{},df:0,h:{docs:{},df:0,t:{docs:{},df:0,l:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/devlog/motivation/":{tf:1}},df:1}}}}}},o:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1}},df:1},w:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}},m:{docs:{},df:0,a:{docs:{},df:0,l:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.449489742783178},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.4142135623730951},"https://breakbuild.dev/support/":{tf:1}},df:4,e:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.4142135623730951}},df:2}}}},r:{docs:{},df:0,t:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}},n:{docs:{},df:0,a:{docs:{},df:0,k:{docs:{},df:0,e:{docs:{},df:0,_:{docs:{},df:0,c:{docs:{},df:0,a:{docs:{},df:0,s:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}}},o:{docs:{},df:0,w:{docs:{},df:0,b:{docs:{},df:0,a:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}},o:{docs:{},df:0,c:{docs:{},df:0,i:{docs:{},df:0,a:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/":{tf:1}},df:1}}}},f:{docs:{},df:0,t:{docs:{},df:0,w:{docs:{},df:0,a:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}},l:{docs:{},df:0,e:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1},i:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:1}},u:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:3.605551275463989},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1.4142135623730951}},df:5,i:{docs:{},df:0,o:{docs:{},df:0,n:{docs:{},df:0,"(":{docs:{},df:0,a:{docs:{},df:0,n:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:1}}}}}}}}},v:{docs:{"https://breakbuild.dev/":{tf:1.4142135623730951},"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.6457513110645907},"https://breakbuild.dev/devlog/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1}},df:4}},m:{docs:{},df:0,e:{docs:{},df:0,"(":{docs:{},df:0,c:{docs:{},df:0,l:{docs:{},df:0,e:{docs:{},df:0,a:{docs:{},df:0,r:{docs:{},df:0,_:{docs:{},df:0,c:{docs:{},df:0,o:{docs:{},df:0,l:{docs:{},df:0,o:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.4142135623730951}},df:1}}}}}}}}}},o:{docs:{},df:0,l:{docs:{},df:0,o:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.4142135623730951}},df:1}}}}},m:{docs:{},df:0,y:{docs:{},df:0,_:{docs:{},df:0,v:{docs:{},df:0,a:{docs:{},df:0,l:{docs:{},df:0,u:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}}},s:{docs:{},df:0,h:{docs:{},df:0,a:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772}},df:1}}}},t:{docs:{},df:0,e:{docs:{},df:0,x:{docs:{},df:0,t:{docs:{},df:0,u:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}},v:{docs:{},df:0,a:{docs:{},df:0,l:{docs:{},df:0,u:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}},h:{docs:{},df:0,o:{docs:{},df:0,w:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1}},df:1}}},o:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1}},df:1}},t:{docs:{},df:0,h:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:5.385164807134504},"https://breakbuild.dev/devlog/motivation/":{tf:1},"https://breakbuild.dev/devlog/renderer/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:11},i:{docs:{},df:0,m:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951}},df:1}}},w:{docs:{},df:0,h:{docs:{},df:0,a:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1}},df:2}}}}}},o:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1}},df:1,e:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:2}}}},r:{docs:{},df:0,e:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1},r:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/motivation/":{tf:1.4142135623730951}},df:2}},t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:2.8284271247461903},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:4}},u:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:2},n:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.449489742783178},"https://breakbuild.dev/devlog/motivation/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:6}},r:{docs:{},df:0,c:{docs:{"https://breakbuild.dev/":{tf:1},"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/motivation/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:2.449489742783178},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:3},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1},"https://breakbuild.dev/support/":{tf:1}},df:10}},t:{docs:{},df:0,h:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}},p:{docs:{},df:0,a:{docs:{},df:0,c:{docs:{},df:0,e:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:2},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:2.449489742783178},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.7320508075688772}},df:4}},m:{docs:{},df:0,m:{docs:{},df:0,y:{docs:{},df:0,"(":{docs:{},df:0,b:{docs:{},df:0,e:{docs:{},df:0,c:{docs:{},df:0,a:{docs:{},df:0,u:{docs:{},df:0,s:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:1}}}}}}}}}},r:{docs:{},df:0,k:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:1}}},e:{docs:{},df:0,a:{docs:{},df:0,k:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.7320508075688772}},df:1}},c:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1.4142135623730951}},df:3,i:{docs:{},df:0,a:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1}},df:3}},f:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:2},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1},"https://breakbuild.dev/support/":{tf:1}},df:10,i:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:2.449489742783178},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:2},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:7}}}},e:{docs:{},df:0,d:{docs:{},df:0,w:{docs:{},df:0,a:{docs:{},df:0,g:{docs:{},df:0,o:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1.7320508075688772}},df:1}}}}}}},l:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/support/":{tf:1}},df:1}},n:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/support/":{tf:1.4142135623730951}},df:1},t:{docs:{"https://breakbuild.dev/devlog/motivation/":{tf:1}},df:1}}},i:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:2,e:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}},l:{docs:{},df:0,i:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/motivation/":{tf:1},"https://breakbuild.dev/devlog/renderer/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:7}}},o:{docs:{},df:0,i:{docs:{},df:0,l:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1}},df:2}}}},n:{docs:{},df:0,s:{docs:{},df:0,o:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/support/":{tf:1}},df:1}}}}},r:{docs:{},df:0,e:{docs:{},df:0,a:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951}},df:1}}}}},r:{docs:{},df:0,c:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.4142135623730951}},df:3},p:{docs:{},df:0,g:{docs:{},df:0,"'":{docs:{"https://breakbuild.dev/":{tf:1}},df:1}}}},t:{docs:{},df:0,a:{docs:{},df:0,b:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}},c:{docs:{},df:0,k:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1}},df:1}},g:{docs:{},df:0,e:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:4}},l:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:1}},n:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1}},df:2,a:{docs:{},df:0,r:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.6457513110645907},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1.4142135623730951}},df:2}}}}},r:{docs:{},df:0,d:{docs:{},df:0,e:{docs:{},df:0,w:{docs:{"https://breakbuild.dev/devlog/motivation/":{tf:1}},df:1}}},t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:3.3166247903554},"https://breakbuild.dev/devlog/motivation/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:2},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:3},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:11,e:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:1}}}},t:{docs:{},df:0,e:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:2},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:2}},df:8},i:{docs:{},df:0,c:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:2.23606797749979}},df:4,_:{docs:{},df:0,c:{docs:{},df:0,o:{docs:{},df:0,p:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1}},df:1}}}},d:{docs:{},df:0,r:{docs:{},df:0,a:{docs:{},df:0,w:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1.4142135623730951}},df:1}}}}}}},u:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:1}},y:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}},d:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951}},df:1,":":{docs:{},df:0,":":{docs:{},df:0,e:{docs:{},df:0,r:{docs:{},df:0,r:{docs:{},df:0,o:{docs:{},df:0,r:{docs:{},df:0,":":{docs:{},df:0,":":{docs:{},df:0,e:{docs:{},df:0,r:{docs:{},df:0,r:{docs:{},df:0,o:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:2}}}}}}}}}}}},f:{docs:{},df:0,f:{docs:{},df:0,i:{docs:{},df:0,":":{docs:{},df:0,":":{docs:{},df:0,c:{docs:{},df:0,_:{docs:{},df:0,v:{docs:{},df:0,o:{docs:{},df:0,i:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1.4142135623730951}},df:3}}}}},s:{docs:{},df:0,t:{docs:{},df:0,r:{docs:{},df:0,":":{docs:{},df:0,":":{docs:{},df:0,f:{docs:{},df:0,r:{docs:{},df:0,o:{docs:{},df:0,m:{docs:{},df:0,_:{docs:{},df:0,p:{docs:{},df:0,t:{docs:{},df:0,r:{docs:{},df:0,"(":{docs:{},df:0,m:{docs:{},df:0,e:{docs:{},df:0,s:{docs:{},df:0,s:{docs:{},df:0,a:{docs:{},df:0,g:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:1}}}}}}}}}}}}}}}}}}}}}}}}},m:{docs:{},df:0,t:{docs:{},df:0,":":{docs:{},df:0,":":{docs:{},df:0,d:{docs:{},df:0,i:{docs:{},df:0,s:{docs:{},df:0,p:{docs:{},df:0,l:{docs:{},df:0,a:{docs:{},df:0,y:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:1}}}}}}},f:{docs:{},df:0,o:{docs:{},df:0,r:{docs:{},df:0,m:{docs:{},df:0,a:{docs:{},df:0,t:{docs:{},df:0,t:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{},df:0,"&":{docs:{},df:0,l:{docs:{},df:0,t:{docs:{},df:0,";":{docs:{},df:0,"'":{docs:{},df:0,_:{docs:{},df:0,"&":{docs:{},df:0,g:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:2}}}}}}}}}}}}}}}}}},r:{docs:{},df:0,e:{docs:{},df:0,s:{docs:{},df:0,u:{docs:{},df:0,l:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:2}}}}}}}}}},s:{docs:{},df:0,":":{docs:{},df:0,":":{docs:{},df:0,f:{docs:{},df:0,i:{docs:{},df:0,l:{docs:{},df:0,e:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:1}}}}}}}},m:{docs:{},df:0,e:{docs:{},df:0,m:{docs:{},df:0,":":{docs:{},df:0,":":{docs:{},df:0,s:{docs:{},df:0,i:{docs:{},df:0,z:{docs:{},df:0,e:{docs:{},df:0,_:{docs:{},df:0,o:{docs:{},df:0,f:{docs:{},df:0,":":{docs:{},df:0,":":{docs:{},df:0,"&":{docs:{},df:0,l:{docs:{},df:0,t:{docs:{},df:0,";":{docs:{},df:0,f:{docs:{},df:0,3:{docs:{},df:0,2:{docs:{},df:0,"&":{docs:{},df:0,g:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1.4142135623730951}},df:2}}}}}},t:{docs:{},df:0,"&":{docs:{},df:0,g:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1}},df:2}}}}}}}}}}}}}}}}}}}}}},p:{docs:{},df:0,t:{docs:{},df:0,r:{docs:{},df:0,":":{docs:{},df:0,":":{docs:{},df:0,n:{docs:{},df:0,u:{docs:{},df:0,l:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:2.449489742783178},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:3}}}}}}}}}}}},e:{docs:{},df:0,a:{docs:{},df:0,m:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1},"https://breakbuild.dev/support/":{tf:1}},df:2}},n:{docs:{},df:0,c:{docs:{},df:0,i:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.4142135623730951}},df:1,_:{docs:{},df:0,b:{docs:{},df:0,u:{docs:{},df:0,f:{docs:{},df:0,f:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{},df:0,_:{docs:{},df:0,b:{docs:{},df:0,i:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:1}}}}}}}}}}}}}}},p:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:8}},i:{docs:{},df:0,c:{docs:{},df:0,k:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/motivation/":{tf:1},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:4}},l:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:3.3166247903554},"https://breakbuild.dev/devlog/motivation/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:10}},t:{docs:{},df:0,c:{docs:{},df:0,h:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1}},df:1}}}},l:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1},o:{docs:{},df:0,n:{docs:{},df:0,e:{docs:{"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1}},df:1}},p:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:2},r:{docs:{},df:0,a:{docs:{},df:0,g:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1}},df:1}},e:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:2.449489742783178},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/chapter/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:2.449489742783178},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:9},i:{docs:{"https://breakbuild.dev/devlog/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:3}}},r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:2},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:2}},df:5,a:{docs:{},df:0,i:{docs:{},df:0,g:{docs:{},df:0,h:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:5,f:{docs:{},df:0,o:{docs:{},df:0,r:{docs:{},df:0,w:{docs:{},df:0,a:{docs:{},df:0,r:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:3}}}}}}}}}}},y:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:2}},e:{docs:{},df:0,a:{docs:{},df:0,m:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/motivation/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1.4142135623730951}},df:4,e:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951}},df:1}}}},e:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}},n:{docs:{},df:0,g:{docs:{},df:0,t:{docs:{},df:0,h:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}},i:{docs:{},df:0,c:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2},"https://breakbuild.dev/devlog/renderer/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/chapter/":{tf:1}},df:3,e:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:2}},l:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772}},df:1}}}},d:{docs:{},df:0,e:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:3.3166247903554}},df:1,_:{docs:{},df:0,b:{docs:{},df:0,y:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1}},df:1}}}}}},k:{docs:{},df:0,e:{docs:{},df:0,f:{docs:{},df:0,o:{docs:{},df:0,r:{docs:{},df:0,c:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}},n:{docs:{},df:0,g:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:3.1622776601683795},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.4142135623730951}},df:2,":":{docs:{},df:0,":":{docs:{},df:0,f:{docs:{},df:0,r:{docs:{},df:0,o:{docs:{},df:0,m:{docs:{},df:0,"(":{docs:{},df:0,'"':{docs:{},df:0,f:{docs:{},df:0,o:{docs:{},df:0,o:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}}}}}}}}},p:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:2,p:{docs:{},df:0,i:{docs:{},df:0,n:{docs:{},df:0,g:{docs:{},df:0,l:{docs:{},df:0,o:{docs:{},df:0,a:{docs:{},df:0,d:{docs:{},df:0,_:{docs:{},df:0,w:{docs:{},df:0,i:{docs:{},df:0,t:{docs:{},df:0,h:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:1}}}}}}}}}}}}}},v:{docs:{},df:0,e:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}},o:{docs:{},df:0,n:{docs:{},df:0,g:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772}},df:1}}},u:{docs:{},df:0,c:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:3.7416573867739413},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:2.8284271247461903},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:3.872983346207417},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:2}},df:7,u:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1}},df:3}}}}}},u:{docs:{},df:0,c:{docs:{},df:0,k:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951}},df:1}},f:{docs:{},df:0,f:{docs:{"https://breakbuild.dev/devlog/motivation/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1}},df:6}},t:{docs:{},df:0,t:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}},y:{docs:{},df:0,l:{docs:{},df:0,e:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:5,"/":{docs:{},df:0,c:{docs:{},df:0,o:{docs:{},df:0,n:{docs:{},df:0,v:{docs:{},df:0,e:{docs:{},df:0,n:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}}}}}}}},u:{docs:{},df:0,b:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.7320508075688772}},df:1,j:{docs:{},df:0,e:{docs:{},df:0,c:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2}},df:1}}}},m:{docs:{},df:0,o:{docs:{},df:0,d:{docs:{},df:0,u:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951}},df:1}}}}},s:{docs:{},df:0,c:{docs:{},df:0,r:{docs:{},df:0,i:{docs:{},df:0,p:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/support/":{tf:1}},df:1}}}}},e:{docs:{},df:0,q:{docs:{},df:0,u:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1}},df:2}},t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.4142135623730951}},df:3}}}},c:{docs:{},df:0,c:{docs:{},df:0,e:{docs:{},df:0,s:{docs:{},df:0,s:{docs:{},df:0,o:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/motivation/":{tf:1}},df:1}}}}}},h:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.4142135623730951}},df:2}},d:{docs:{},df:0,d:{docs:{},df:0,e:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1,l:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}},f:{docs:{},df:0,f:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}},i:{docs:{},df:0,c:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:1}}}}},g:{docs:{},df:0,g:{docs:{},df:0,e:{docs:{},df:0,s:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1}},df:2}}}}},i:{docs:{},df:0,t:{docs:{},df:0,a:{docs:{},df:0,b:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1}},df:1}}}}},m:{docs:{},df:0,m:{docs:{},df:0,a:{docs:{},df:0,r:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1}},df:2}}}}},p:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772}},df:1,":":{docs:{},df:0,":":{docs:{},df:0,f:{docs:{},df:0,n:{docs:{},df:0,p:{docs:{},df:0,t:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:2}},df:1,":":{docs:{},df:0,":":{docs:{},df:0,n:{docs:{},df:0,e:{docs:{},df:0,w:{docs:{},df:0,"(":{docs:{},df:0,'"':{docs:{},df:0,g:{docs:{},df:0,l:{docs:{},df:0,c:{docs:{},df:0,l:{docs:{},df:0,e:{docs:{},df:0,a:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1.4142135623730951}},df:1,c:{docs:{},df:0,o:{docs:{},df:0,l:{docs:{},df:0,o:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1.4142135623730951}},df:1}}}}}}}}}}}}}}}}}}}}}}}}}},f:{docs:{},df:0,i:{docs:{},df:0,c:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}},i:{docs:{},df:0,o:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951}},df:1}}}}},p:{docs:{},df:0,o:{docs:{},df:0,r:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/":{tf:1.4142135623730951},"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.449489742783178},"https://breakbuild.dev/devlog/motivation/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:3.605551275463989},"https://breakbuild.dev/support/":{tf:2.23606797749979}},df:10}},s:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1}},df:2}}}},r:{docs:{},df:0,e:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.8284271247461903},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1.4142135623730951},"https://breakbuild.dev/support/":{tf:1}},df:9},p:{docs:{},df:0,r:{docs:{},df:0,i:{docs:{},df:0,s:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:2}}}},r:{docs:{},df:0,o:{docs:{},df:0,u:{docs:{},df:0,n:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}},v:{docs:{},df:0,e:{docs:{},df:0,y:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:1}},i:{docs:{},df:0,v:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1}},df:1}}}},s:{docs:{},df:0,p:{docs:{},df:0,e:{docs:{},df:0,c:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}},i:{docs:{},df:0,c:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}},t:{docs:{},df:0,a:{docs:{},df:0,i:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/devlog/motivation/":{tf:1}},df:1}}}}}},w:{docs:{},df:0,a:{docs:{},df:0,p:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.7320508075688772}},df:6,_:{docs:{},df:0,b:{docs:{},df:0,u:{docs:{},df:0,f:{docs:{},df:0,f:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.7320508075688772}},df:5,e:{docs:{},df:0,r:{docs:{},df:0,s:{docs:{},df:0,"(":{docs:{},df:0,"&":{docs:{},df:0,a:{docs:{},df:0,m:{docs:{},df:0,p:{docs:{},df:0,";":{docs:{},df:0,m:{docs:{},df:0,u:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1.4142135623730951}},df:2}}}}}}}}}}}}}}}}},p:{docs:{},df:0,i:{docs:{},df:0,n:{docs:{},df:0,g:{docs:{},df:0,"(":{docs:{},df:0,v:{docs:{},df:0,s:{docs:{},df:0,y:{docs:{},df:0,n:{docs:{},df:0,c:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:1}}}}}}}}}}}},e:{docs:{},df:0,a:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.4142135623730951}},df:1}},e:{docs:{},df:0,p:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}},i:{docs:{},df:0,t:{docs:{},df:0,c:{docs:{},df:0,h:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:3},"https://breakbuild.dev/devlog/motivation/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1}},df:4,e:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/support/":{tf:1}},df:1}}}}}}},y:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1,m:{docs:{},df:0,b:{docs:{},df:0,o:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:2}},df:1}}}},n:{docs:{},df:0,c:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951}},df:1}},s:{docs:{},df:0,t:{docs:{},df:0,e:{docs:{},df:0,m:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.4142135623730951}},df:6}}}}}},t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1}},df:3,".":{docs:{},df:0,i:{docs:{},df:0,n:{docs:{},df:0,t:{docs:{},df:0,o:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}},_:{docs:{},df:0,s:{docs:{},df:0,t:{docs:{},df:0,r:{docs:{},df:0,i:{docs:{},df:0,n:{docs:{},df:0,g:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}}},a:{docs:{},df:0,b:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:3}},c:{docs:{},df:0,k:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/chapter/":{tf:1}},df:2}}},k:{docs:{},df:0,e:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:3.3166247903554},"https://breakbuild.dev/devlog/motivation/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:2.449489742783178},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:2},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.4142135623730951},"https://breakbuild.dev/support/":{tf:1}},df:14,n:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1}},df:2}}},l:{docs:{},df:0,k:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1}},df:4}},n:{docs:{},df:0,k:{docs:{"https://breakbuild.dev/devlog/motivation/":{tf:1}},df:1}},r:{docs:{},df:0,g:{docs:{},df:0,e:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:2},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:3},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:2.8284271247461903},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:2.6457513110645907},"https://breakbuild.dev/support/":{tf:1}},df:10,".":{docs:{},df:0,c:{docs:{},df:0,l:{docs:{},df:0,e:{docs:{},df:0,a:{docs:{},df:0,r:{docs:{},df:0,_:{docs:{},df:0,c:{docs:{},df:0,o:{docs:{},df:0,l:{docs:{},df:0,o:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.4142135623730951}},df:1}}}}}}}}}}},x:{docs:{},df:0,8:{docs:{},df:0,6:{docs:{},df:0,_:{docs:{},df:0,6:{docs:{},df:0,4:{docs:{"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1}},df:1}}}}}}}}}}},u:{docs:{},df:0,g:{docs:{},df:0,h:{docs:{},df:0,t:{docs:{},df:0,"(":{docs:{},df:0,h:{docs:{},df:0,a:{docs:{},df:0,v:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}}}}},e:{docs:{},df:0,a:{docs:{},df:0,c:{docs:{},df:0,h:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}},c:{docs:{},df:0,h:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951}},df:1,n:{docs:{},df:0,i:{docs:{},df:0,c:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:5},q:{docs:{},df:0,u:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}},o:{docs:{},df:0,l:{docs:{},df:0,o:{docs:{},df:0,g:{docs:{"https://breakbuild.dev/devlog/motivation/":{tf:1}},df:1}}}}}}},d:{docs:{},df:0,i:{docs:{},df:0,o:{docs:{},df:0,u:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.4142135623730951}},df:3}}}},l:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:2.6457513110645907},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1}},df:4}},m:{docs:{},df:0,p:{docs:{},df:0,l:{docs:{},df:0,a:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951}},df:1}}},o:{docs:{},df:0,r:{docs:{},df:0,a:{docs:{},df:0,r:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1,l:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}}}}},n:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:1,d:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1}},df:2}},r:{docs:{},df:0,m:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1}},df:2,i:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:2}}},r:{docs:{},df:0,a:{docs:{},df:0,i:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1}},df:1}},r:{docs:{},df:0,i:{docs:{},df:0,a:{docs:{"https://breakbuild.dev/devlog/motivation/":{tf:1}},df:1}}}}}},s:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.449489742783178},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.7320508075688772}},df:7,s:{docs:{},df:0,"(":{docs:{},df:0,d:{docs:{},df:0,e:{docs:{},df:0,p:{docs:{},df:0,t:{docs:{},df:0,h:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1}},df:1}}}}}}}}},x:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.4142135623730951}},df:1,u:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2},"https://breakbuild.dev/devlog/renderer/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.7320508075688772}},df:6,e:{docs:{},df:0,":":{docs:{},df:0,":":{docs:{},df:0,d:{docs:{},df:0,a:{docs:{},df:0,t:{docs:{},df:0,a:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}},t:{docs:{},df:0,e:{docs:{},df:0,x:{docs:{},df:0,t:{docs:{},df:0,u:{docs:{},df:0,r:{docs:{},df:0,e:{docs:{},df:0,d:{docs:{},df:0,a:{docs:{},df:0,t:{docs:{},df:0,a:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}}}}}}}}},"=":{docs:{},df:0,g:{docs:{},df:0,l:{docs:{},df:0,t:{docs:{},df:0,e:{docs:{},df:0,x:{docs:{},df:0,t:{docs:{},df:0,u:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/chapter/":{tf:1}},df:1}}}}}}}}},_:{docs:{},df:0,h:{docs:{},df:0,a:{docs:{},df:0,n:{docs:{},df:0,d:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951}},df:1}}}}}}}}}}}},h:{docs:{},df:0,a:{docs:{},df:0,n:{docs:{},df:0,k:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1}},df:3}},t:{docs:{},df:0,"'":{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:5}}},e:{docs:{},df:0,m:{docs:{},df:0,"(":{docs:{},df:0,w:{docs:{},df:0,h:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}},".":{docs:{},df:0,f:{docs:{},df:0,o:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:1}}}},e:{docs:{"https://breakbuild.dev/":{tf:1},"https://breakbuild.dev/support/":{tf:1}},df:2}},o:{docs:{},df:0,r:{docs:{},df:0,e:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1}},df:1}},i:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:4}}}},i:{docs:{},df:0,n:{docs:{},df:0,g:{docs:{"https://breakbuild.dev/":{tf:1},"https://breakbuild.dev/blog/my-year-with-rust/":{tf:6.082762530298219},"https://breakbuild.dev/devlog/motivation/":{tf:1},"https://breakbuild.dev/devlog/renderer/":{tf:2},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:2},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:2.8284271247461903},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:2},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:2.449489742783178}},df:16,i:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:1}},k:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/chapter/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.4142135623730951}},df:5}},r:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:2}},s:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{},df:0,r:{docs:{},df:0,o:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1.7320508075688772}},df:2}}}}}}},o:{docs:{},df:0,s:{docs:{},df:0,e:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1.4142135623730951}},df:3}},u:{docs:{},df:0,g:{docs:{},df:0,h:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/motivation/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:6,t:{docs:{"https://breakbuild.dev/":{tf:1.7320508075688772},"https://breakbuild.dev/blog/":{tf:1},"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/motivation/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1},"https://breakbuild.dev/support/":{tf:1}},df:7}}},s:{docs:{},df:0,a:{docs:{},df:0,n:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:3}}}}}},r:{docs:{},df:0,e:{docs:{},df:0,a:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:2}},df:3}},e:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1.4142135623730951}},df:3}},o:{docs:{},df:0,u:{docs:{},df:0,g:{docs:{},df:0,h:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:3.3166247903554},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:2},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1.7320508075688772}},df:5}}},w:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1}},df:2,a:{docs:{},df:0,w:{docs:{},df:0,a:{docs:{},df:0,y:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.4142135623730951}},df:2}}}}}}},u:{docs:{},df:0,m:{docs:{},df:0,b:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}},i:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1}},df:4,c:{docs:{},df:0,k:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}},e:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:3},g:{docs:{},df:0,h:{docs:{},df:0,t:{docs:{},df:0,l:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1}},df:2}}}}},l:{docs:{},df:0,e:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1.4142135623730951}},df:1}},m:{docs:{},df:0,e:{docs:{"https://breakbuild.dev/":{tf:1},"https://breakbuild.dev/blog/my-year-with-rust/":{tf:5.291502622129181},"https://breakbuild.dev/devlog/":{tf:1},"https://breakbuild.dev/devlog/motivation/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.4142135623730951},"https://breakbuild.dev/support/":{tf:1.4142135623730951}},df:15,"(":{docs:{},df:0,g:{docs:{},df:0,e:{docs:{},df:0,n:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}},s:{docs:{},df:0,"(":{docs:{},df:0,3:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}},n:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/devlog/motivation/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:2}},p:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/chapter/":{tf:1}},df:1},r:{docs:{},df:0,e:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}},l:{docs:{},df:0,";":{docs:{},df:0,d:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/chapter/":{tf:1}},df:1}}}},o:{docs:{},df:0,"(":{docs:{},df:0,o:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}},_:{docs:{},df:0,s:{docs:{},df:0,t:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:1}}}},d:{docs:{},df:0,o:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:3}},g:{docs:{},df:0,e:{docs:{},df:0,t:{docs:{},df:0,h:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:4}}},g:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1}},df:1,e:{docs:{},df:0,b:{docs:{},df:0,i:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}}},n:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1},o:{docs:{},df:0,k:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/motivation/":{tf:1}},df:2},l:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:4},"https://breakbuild.dev/devlog/motivation/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:4}},p:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:2},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:8,i:{docs:{},df:0,c:{docs:{"https://breakbuild.dev/support/":{tf:1}},df:1}}},t:{docs:{},df:0,a:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1}},df:2}}},u:{docs:{},df:0,c:{docs:{},df:0,h:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:5}},g:{docs:{},df:0,h:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}},w:{docs:{},df:0,a:{docs:{},df:0,r:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:3}}}},y:{docs:{"https://breakbuild.dev/devlog/motivation/":{tf:1}},df:1}},r:{docs:{},df:0,a:{docs:{},df:0,c:{docs:{},df:0,e:{docs:{"https://breakbuild.dev/devlog/renderer/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:2},k:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1},"https://breakbuild.dev/support/":{tf:1.4142135623730951}},df:3}},d:{docs:{},df:0,e:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:2},i:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1}},df:2}}},i:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:1},n:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1}},df:1,"(":{docs:{},df:0,i:{docs:{},df:0,"'":{docs:{},df:0,m:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}},t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:3.872983346207417},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:3.3166247903554},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:4.69041575982343}},df:6,"(":{docs:{},df:0,e:{docs:{},df:0,x:{docs:{},df:0,c:{docs:{},df:0,l:{docs:{},df:0,u:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}}}}},n:{docs:{},df:0,s:{docs:{},df:0,f:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1}},df:1}},o:{docs:{},df:0,r:{docs:{},df:0,m:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.4142135623730951}},df:1}}}},i:{docs:{},df:0,e:{docs:{},df:0,n:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:2}}}},l:{docs:{},df:0,a:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:1}}},m:{docs:{},df:0,u:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:1}}},p:{docs:{},df:0,a:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/":{tf:1},"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/":{tf:1}},df:3}}}}},p:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1.4142135623730951}},df:1},v:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{},df:0,s:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}},e:{docs:{},df:0,a:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1},t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1.4142135623730951}},df:1}}},i:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.449489742783178},"https://breakbuild.dev/devlog/":{tf:1},"https://breakbuild.dev/devlog/motivation/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1.4142135623730951}},df:11,a:{docs:{},df:0,n:{docs:{},df:0,g:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:2.6457513110645907},"https://breakbuild.dev/devlog/renderer/hello_triangle/chapter/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:3.7416573867739413},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/chapter/":{tf:1.4142135623730951}},df:8}}}},p:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:1}},v:{docs:{},df:0,i:{docs:{},df:0,a:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1}},df:1}}}}},u:{docs:{},df:0,e:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.449489742783178},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:5},s:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1}},df:2,i:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:1}}},t:{docs:{},df:0,h:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772}},df:1}}}},u:{docs:{},df:0,p:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.7320508075688772}},df:3}},r:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:3.1622776601683795},"https://breakbuild.dev/devlog/renderer/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:2},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1}},df:6}}},w:{docs:{},df:0,e:{docs:{},df:0,e:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951}},df:1}}},o:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:2},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:9}},y:{docs:{},df:0,p:{docs:{},df:0,e:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:3.1622776601683795},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:3.1622776601683795},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:2.449489742783178},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:2.6457513110645907},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:2.6457513110645907},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:4.795831523312719}},df:10,"=":{docs:{},df:0,'"':{docs:{},df:0,b:{docs:{},df:0,i:{docs:{},df:0,t:{docs:{},df:0,m:{docs:{},df:0,a:{docs:{},df:0,s:{docs:{},df:0,k:{docs:{},df:0,'"':{docs:{},df:0,"&":{docs:{},df:0,g:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:1}}}}}}}}}}},r:{docs:{},df:0,e:{docs:{},df:0,n:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1.4142135623730951}},df:1}}}}}},_:{docs:{},df:0,a:{docs:{},df:0,r:{docs:{},df:0,g:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}},b:{docs:{},df:0,i:{docs:{},df:0,t:{docs:{},df:0,d:{docs:{},df:0,e:{docs:{},df:0,p:{docs:{},df:0,t:{docs:{},df:0,h:{docs:{},df:0,d:{docs:{},df:0,e:{docs:{},df:0,s:{docs:{},df:0,c:{docs:{},df:0,r:{docs:{},df:0,i:{docs:{},df:0,p:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:1}}}}}}}}}}}}}}}},s:{docs:{},df:0,"(":{docs:{},df:0,t:{docs:{},df:0,o:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}},":":{docs:{},df:0,":":{docs:{},df:0,g:{docs:{},df:0,l:{docs:{},df:0,b:{docs:{},df:0,i:{docs:{},df:0,t:{docs:{},df:0,f:{docs:{},df:0,i:{docs:{},df:0,e:{docs:{},df:0,l:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1.4142135623730951}},df:1}}}}}}}},f:{docs:{},df:0,l:{docs:{},df:0,o:{docs:{},df:0,a:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:4}},df:1}}}}}}}}},y:{docs:{},df:0,s:{docs:{},df:0,t:{docs:{},df:0,e:{docs:{},df:0,m:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}}},o:{docs:{},df:0,s:{docs:{},df:0,q:{docs:{},df:0,u:{docs:{},df:0,a:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}}}}},u:{docs:{},df:0,3:{docs:{},df:0,2:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:2}},df:1}},8:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:1},g:{docs:{},df:0,l:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.449489742783178}},df:1}}},i:{docs:{"https://breakbuild.dev/devlog/renderer/":{tf:1}},df:1},l:{docs:{},df:0,t:{docs:{},df:0,i:{docs:{},df:0,m:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/motivation/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:4}}}},n:{docs:{},df:0,a:{docs:{},df:0,b:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:2}}},b:{docs:{},df:0,e:{docs:{},df:0,a:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1}},df:1}}},i:{docs:{},df:0,n:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1}},df:1}}},o:{docs:{},df:0,u:{docs:{},df:0,n:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1}},df:2}}}}},c:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{},df:0,t:{docs:{},df:0,a:{docs:{},df:0,i:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}},h:{docs:{},df:0,e:{docs:{},df:0,c:{docs:{},df:0,k:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951}},df:1}}}},o:{docs:{},df:0,m:{docs:{},df:0,m:{docs:{},df:0,o:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:2}}}}}},d:{docs:{},df:0,e:{docs:{},df:0,f:{docs:{},df:0,i:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:2}}},r:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1}},df:1,l:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1}},df:1}},s:{docs:{},df:0,t:{docs:{},df:0,a:{docs:{},df:0,n:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/motivation/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1},"https://breakbuild.dev/support/":{tf:1}},df:6}}}}}}}},e:{docs:{},df:0,r:{docs:{},df:0,g:{docs:{},df:0,o:{docs:{},df:0,n:{docs:{},df:0,o:{docs:{},df:0,m:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1}},df:1}}}}}}},f:{docs:{},df:0,i:{docs:{},df:0,n:{docs:{},df:0,i:{docs:{},df:0,s:{docs:{},df:0,h:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}},o:{docs:{},df:0,l:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1}},df:1}},r:{docs:{},df:0,t:{docs:{},df:0,u:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:3}}}}},r:{docs:{},df:0,i:{docs:{},df:0,e:{docs:{},df:0,n:{docs:{},df:0,d:{docs:{},df:0,l:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:1}}}}}}}},i:{docs:{},df:0,f:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1,i:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1}},df:2},o:{docs:{},df:0,r:{docs:{},df:0,m:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}},n:{docs:{},df:0,i:{docs:{},df:0,t:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951}},df:1}}}},q:{docs:{},df:0,u:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1}},df:2}},t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:2,i:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/motivation/":{tf:1.7320508075688772}},df:2},y:{docs:{},df:0,"(":{docs:{},df:0,a:{docs:{},df:0,n:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/devlog/motivation/":{tf:1}},df:1}}}},_:{docs:{},df:0,y:{docs:{},df:0,e:{docs:{},df:0,l:{docs:{},df:0,l:{docs:{},df:0,o:{docs:{},df:0,w:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:1}}}}}}}}},v:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{},df:0,s:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}},k:{docs:{},df:0,n:{docs:{},df:0,o:{docs:{},df:0,w:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:3},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:2}},df:3}}}}},l:{docs:{},df:0,e:{docs:{},df:0,s:{docs:{},df:0,s:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:3}}},i:{docs:{},df:0,k:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:3}}},n:{docs:{},df:0,e:{docs:{},df:0,c:{docs:{},df:0,e:{docs:{},df:0,s:{docs:{},df:0,s:{docs:{},df:0,a:{docs:{},df:0,r:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.4142135623730951}},df:1}}}}}}}}},o:{docs:{},df:0,f:{docs:{},df:0,f:{docs:{},df:0,i:{docs:{},df:0,c:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1}},df:1}}}}}},r:{docs:{},df:0,e:{docs:{},df:0,a:{docs:{},df:0,c:{docs:{},df:0,h:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}},s:{docs:{},df:0,o:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}},s:{docs:{},df:0,a:{docs:{},df:0,f:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:2},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:2.8284271247461903},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:2},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:4.242640687119285},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:2.449489742783178}},df:10,e:{docs:{},df:0,"/":{docs:{},df:0,u:{docs:{},df:0,n:{docs:{},df:0,c:{docs:{},df:0,h:{docs:{},df:0,e:{docs:{},df:0,c:{docs:{},df:0,k:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}}}}}},t:{docs:{},df:0,i:{docs:{},df:0,s:{docs:{},df:0,f:{docs:{},df:0,a:{docs:{},df:0,c:{docs:{},df:0,t:{docs:{},df:0,o:{docs:{},df:0,r:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:1}}}}}}}}}}},i:{docs:{},df:0,g:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1}},df:2}}},o:{docs:{},df:0,u:{docs:{},df:0,n:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/chapter/":{tf:1}},df:2}}}},t:{docs:{},df:0,a:{docs:{},df:0,b:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951}},df:1}}}},u:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}},t:{docs:{},df:0,i:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:4}}},w:{docs:{},df:0,i:{docs:{},df:0,e:{docs:{},df:0,l:{docs:{},df:0,d:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:1}}}}},r:{docs:{},df:0,a:{docs:{},df:0,p:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.7320508075688772}},df:6,_:{docs:{},df:0,o:{docs:{},df:0,r:{docs:{},df:0,"(":{docs:{},df:0,'"':{docs:{},df:0,"[":{docs:{},df:0,f:{docs:{},df:0,a:{docs:{},df:0,i:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:1}}}}}}}}}}}}}}},p:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:3.7416573867739413},"https://breakbuild.dev/devlog/motivation/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:2},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/chapter/":{tf:2},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:2},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:10,c:{docs:{},df:0,o:{docs:{},df:0,m:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:1}}},d:{docs:{},df:0,a:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/":{tf:1.4142135623730951},"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:2.6457513110645907},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.4142135623730951},"https://breakbuild.dev/support/":{tf:1.4142135623730951}},df:8,e:{docs:{},df:0,"(":{docs:{},df:0,"&":{docs:{},df:0,a:{docs:{},df:0,m:{docs:{},df:0,p:{docs:{},df:0,";":{docs:{},df:0,m:{docs:{},df:0,u:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.7320508075688772}},df:2}}}}}}}}},d:{docs:{},df:0,"/":{docs:{},df:0,d:{docs:{},df:0,r:{docs:{},df:0,a:{docs:{},df:0,w:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1}},df:1}}}}}}}}}}},l:{docs:{},df:0,o:{docs:{},df:0,a:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.4142135623730951}},df:2}}}}},s:{docs:{"https://breakbuild.dev/":{tf:1.7320508075688772},"https://breakbuild.dev/blog/my-year-with-rust/":{tf:6.4031242374328485},"https://breakbuild.dev/devlog/":{tf:1},"https://breakbuild.dev/devlog/motivation/":{tf:2.6457513110645907},"https://breakbuild.dev/devlog/renderer/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:2.6457513110645907},"https://breakbuild.dev/devlog/renderer/hello_triangle/chapter/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:5},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:3.7416573867739413},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:2.8284271247461903},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:4.242640687119285},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:3.1622776601683795},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:5.477225575051661},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:2.6457513110645907},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:3.1622776601683795},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:5.0990195135927845},"https://breakbuild.dev/support/":{tf:1.4142135623730951}},df:18,a:{docs:{},df:0,b:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/chapter/":{tf:1}},df:2}},g:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:2.449489742783178},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:3}},e:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1}},df:6}},i:{docs:{},df:0,z:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1}},df:3,e:{docs:{},df:0,")":{docs:{},df:0,".":{docs:{},df:0,c:{docs:{},df:0,a:{docs:{},df:0,s:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1}},df:1}}}}}}}}},u:{docs:{},df:0,a:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.449489742783178},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:6}}}},t:{docs:{},df:0,i:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.7320508075688772}},df:1}}}},v:{docs:{},df:0,2:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/chapter/":{tf:1}},df:2},a:{docs:{},df:0,l:{docs:{},df:0,i:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/motivation/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1.7320508075688772}},df:7,a:{docs:{},df:0,t:{docs:{},df:0,i:{docs:{},df:0,o:{docs:{},df:0,n:{docs:{},df:0,"(":{docs:{},df:0,l:{docs:{},df:0,i:{docs:{},df:0,c:{docs:{},df:0,e:{docs:{},df:0,n:{docs:{},df:0,s:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}}}}}}}}}},l:{docs:{},df:0,e:{docs:{},df:0,y:{docs:{"https://breakbuild.dev/devlog/motivation/":{tf:1}},df:1}}},u:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:3},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:3.1622776601683795},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:4.358898943540674},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:3}},df:8,a:{docs:{},df:0,b:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1}},df:1}}},e:{docs:{},df:0,'"':{docs:{},df:0,".":{docs:{},df:0,t:{docs:{},df:0,o:{docs:{},df:0,_:{docs:{},df:0,s:{docs:{},df:0,t:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}}}},"(":{docs:{},df:0,1:{docs:{},df:0,0:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1}},df:1}},e:{docs:{},df:0,s:{docs:{},df:0,p:{docs:{},df:0,e:{docs:{},df:0,c:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1}},df:1}}}}}}},"=":{docs:{},df:0,'"':{docs:{},df:0,0:{docs:{},df:0,x:{docs:{},df:0,0:{docs:{},df:0,0:{docs:{},df:0,0:{docs:{},df:0,0:{docs:{},df:0,0:{docs:{},df:0,1:{docs:{},df:0,0:{docs:{},df:0,0:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:1}}},4:{docs:{},df:0,0:{docs:{},df:0,0:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:1}}}},4:{docs:{},df:0,0:{docs:{},df:0,0:{docs:{},df:0,0:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:1}}}}}}}}}}}}}},v:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}},o:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:3.7416573867739413},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:4.58257569495584},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:4,"'":{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1}},df:1},"(":{docs:{},df:0,w:{docs:{},df:0,i:{docs:{},df:0,t:{docs:{},df:0,h:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1}},df:1}}}}}},r:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1}},df:1,i:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1}},df:2,a:{docs:{},df:0,b:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:2.6457513110645907},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:7}},d:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1},n:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.7320508075688772}},df:3}}},o:{docs:{},df:0,u:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:2}}}}},b:{docs:{},df:0,o:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:2.8284271247461903},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1}},df:4,"'":{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1}},df:1}}},e:{docs:{},df:0,c:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1}},df:2,"&":{docs:{},df:0,l:{docs:{},df:0,t:{docs:{},df:0,";":{docs:{},df:0,s:{docs:{},df:0,t:{docs:{},df:0,r:{docs:{},df:0,i:{docs:{},df:0,n:{docs:{},df:0,g:{docs:{},df:0,"&":{docs:{},df:0,g:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}}}}}}}}},2:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1}},df:1},3:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1.4142135623730951}},df:2},4:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:3},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1}},df:2,"(":{docs:{},df:0,p:{docs:{},df:0,o:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.7320508075688772}},df:1,s:{docs:{},df:0,".":{docs:{},df:0,x:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.7320508075688772}},df:1}}}}}}},t:{docs:{},df:0,o:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1.4142135623730951}},df:2,s:{docs:{},df:0,2:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1}},df:1}}}}}},r:{docs:{},df:0,b:{docs:{},df:0,o:{docs:{},df:0,s:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1}},df:3}}},i:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.7320508075688772}},df:3,f:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:1}}},s:{docs:{},df:0,i:{docs:{},df:0,o:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.449489742783178},"https://breakbuild.dev/devlog/motivation/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:3},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:2.6457513110645907},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:3.605551275463989}},df:10,"(":{docs:{},df:0,m:{docs:{},df:0,u:{docs:{},df:0,s:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:1}}}},o:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}},".":{docs:{},df:0,0:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:2}},df:1},1:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1.7320508075688772}},df:1}}}}}},t:{docs:{},df:0,_:{docs:{},df:0,s:{docs:{},df:0,o:{docs:{},df:0,u:{docs:{},df:0,r:{docs:{},df:0,c:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.7320508075688772}},df:1,e:{docs:{},df:0,".":{docs:{},df:0,a:{docs:{},df:0,s:{docs:{},df:0,_:{docs:{},df:0,p:{docs:{},df:0,t:{docs:{},df:0,r:{docs:{},df:0,"(":{docs:{},df:0,")":{docs:{},df:0,"]":{docs:{},df:0,".":{docs:{},df:0,a:{docs:{},df:0,s:{docs:{},df:0,_:{docs:{},df:0,p:{docs:{},df:0,t:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.7320508075688772}},df:1}}}}}}}}}}}}}}}}}}}}}}}},e:{docs:{},df:0,x:{docs:{"https://breakbuild.dev/devlog/renderer/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:3},"https://breakbuild.dev/devlog/renderer/hello_triangle/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:5},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:5.5677643628300215},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.4142135623730951}},df:7}},i:{docs:{},df:0,c:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:3},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:3.1622776601683795},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:2}},df:3,e:{docs:{},df:0,s:{docs:{},df:0,"(":{docs:{},df:0,p:{docs:{},df:0,l:{docs:{},df:0,u:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1}},df:1}}}}}}}}}}},t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951}},df:1,e:{docs:{},df:0,r:{docs:{},df:0,a:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951}},df:1}}}}}},i:{docs:{},df:0,a:{docs:{"https://breakbuild.dev/":{tf:1},"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.6457513110645907},"https://breakbuild.dev/devlog/renderer/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:2},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:10,b:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:1}}},d:{docs:{},df:0,e:{docs:{},df:0,o:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/motivation/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:3}}},e:{docs:{},df:0,w:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1}},df:2,_:{docs:{},df:0,a:{docs:{},df:0,r:{docs:{},df:0,g:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}},o:{docs:{},df:0,l:{docs:{},df:0,a:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1}},df:1}}}},r:{docs:{},df:0,a:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:2}}},s:{docs:{},df:0,i:{docs:{},df:0,b:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.4142135623730951}},df:1}},t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1}},df:1}}}},o:{docs:{},df:0,i:{docs:{},df:0,c:{docs:{"https://breakbuild.dev/devlog/":{tf:1}},df:1},d:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1.7320508075688772}},df:2},l:{docs:{},df:0,a:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1}},df:1}}}},s:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.6457513110645907},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:2.8284271247461903}},df:2,_:{docs:{},df:0,s:{docs:{},df:0,o:{docs:{},df:0,u:{docs:{},df:0,r:{docs:{},df:0,c:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.4142135623730951}},df:1}}}}}}},u:{docs:{},df:0,l:{docs:{},df:0,k:{docs:{},df:0,a:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:2}},df:5}}}}}},w:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1.4142135623730951}},df:2,a:{docs:{},df:0,i:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:3}},l:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951}},df:1}},n:{docs:{},df:0,"'":{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1}},df:1}},n:{docs:{},df:0,a:{docs:{},df:0,b:{docs:{"https://breakbuild.dev/":{tf:1},"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/motivation/":{tf:1}},df:3}}},t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:4.898979485566356},"https://breakbuild.dev/devlog/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/motivation/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:2},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:2.449489742783178},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:2},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:3.1622776601683795},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:2.23606797749979},"https://breakbuild.dev/support/":{tf:1}},df:12}},r:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.8284271247461903},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:2},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.4142135623730951}},df:5,"(":{docs:{},df:0,c:{docs:{},df:0,l:{docs:{},df:0,i:{docs:{},df:0,p:{docs:{},df:0,p:{docs:{},df:0,y:{docs:{},df:0,":":{docs:{},df:0,":":{docs:{},df:0,n:{docs:{},df:0,u:{docs:{},df:0,r:{docs:{},df:0,s:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:2}}}}}}},p:{docs:{},df:0,e:{docs:{},df:0,d:{docs:{},df:0,a:{docs:{},df:0,n:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:2}}}},r:{docs:{},df:0,f:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:1}}}}}}}}}}}}}}},s:{docs:{},df:0,"(":{docs:{},df:0,a:{docs:{},df:0,n:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/motivation/":{tf:1}},df:2}}}},"/":{docs:{},df:0,a:{docs:{},df:0,m:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}},m:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1,3:{docs:{},df:0,2:{docs:{"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1}},df:1}}},n:{docs:{},df:0,"'":{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}},t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2},"https://breakbuild.dev/devlog/motivation/":{tf:1}},df:2,e:{docs:{},df:0,"(":{docs:{},df:0,d:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}},t:{docs:{},df:0,c:{docs:{},df:0,h:{docs:{"https://breakbuild.dev/":{tf:1}},df:1}}},y:{docs:{"https://breakbuild.dev/":{tf:1.4142135623730951},"https://breakbuild.dev/blog/my-year-with-rust/":{tf:4.123105625617661},"https://breakbuild.dev/devlog/renderer/hello_triangle/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:2.8284271247461903},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:2.8284271247461903},"https://breakbuild.dev/support/":{tf:1}},df:15,l:{docs:{},df:0,a:{docs:{},df:0,n:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1.4142135623730951}},df:2}}}}}},e:{docs:{},df:0,a:{docs:{},df:0,s:{docs:{},df:0,e:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:1}}}},b:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.4142135623730951}},df:2,a:{docs:{},df:0,s:{docs:{},df:0,s:{docs:{},df:0,e:{docs:{},df:0,m:{docs:{},df:0,b:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}}},c:{docs:{},df:0,r:{docs:{},df:0,a:{docs:{},df:0,w:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/motivation/":{tf:1}},df:2}}}}},g:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/devlog/renderer/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:2,2:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:1}}}},e:{docs:{},df:0,b:{docs:{"https://breakbuild.dev/devlog/motivation/":{tf:1}},df:1}},i:{docs:{},df:0,g:{docs:{},df:0,h:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}},r:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:5,l:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1}},df:1}}}}},l:{docs:{},df:0,c:{docs:{},df:0,o:{docs:{},df:0,m:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}},l:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:2},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1.4142135623730951},"https://breakbuild.dev/support/":{tf:1}},df:12}},n:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:3}},x:{docs:{},df:0,t:{docs:{},df:0,r:{docs:{},df:0,a:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}},g:{docs:{},df:0,p:{docs:{},df:0,u:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:4}}},h:{docs:{},df:0,a:{docs:{},df:0,t:{docs:{},df:0,e:{docs:{},df:0,v:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1.4142135623730951}},df:5}},n:{docs:{},df:0,o:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:1}}}}},e:{docs:{},df:0,n:{docs:{},df:0,e:{docs:{},df:0,v:{docs:{"https://breakbuild.dev/blog/":{tf:1},"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1},"https://breakbuild.dev/support/":{tf:1}},df:4}}},t:{docs:{},df:0,h:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.449489742783178},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:7}}}}},i:{docs:{},df:0,t:{docs:{},df:0,e:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.7320508075688772}},df:2}}},o:{docs:{},df:0,l:{docs:{},df:0,e:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/motivation/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:2},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:8}}}},i:{docs:{},df:0,d:{docs:{},df:0,e:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.7320508075688772}},df:2,r:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:1},s:{docs:{},df:0,p:{docs:{},df:0,r:{docs:{},df:0,e:{docs:{},df:0,a:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}}}},k:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:1}},l:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1},l:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951}},df:1}},m:{docs:{},df:0,p:{docs:{},df:0,l:{docs:{},df:0,i:{docs:{},df:0,c:{docs:{},df:0,i:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}}},n:{docs:{},df:0,d:{docs:{},df:0,o:{docs:{},df:0,w:{docs:{"https://breakbuild.dev/":{tf:1},"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:4.69041575982343},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:2.8284271247461903},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:2.449489742783178},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:2.23606797749979}},df:11,"(":{docs:{},df:0,e:{docs:{},df:0,".":{docs:{},df:0,g:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1}},df:1}}}},".":{docs:{},df:0,i:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:3}},m:{docs:{},df:0,a:{docs:{},df:0,k:{docs:{},df:0,e:{docs:{},df:0,_:{docs:{},df:0,c:{docs:{},df:0,u:{docs:{},df:0,r:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1}},df:1}}}}}}}}},s:{docs:{},df:0,e:{docs:{},df:0,t:{docs:{},df:0,_:{docs:{},df:0,k:{docs:{},df:0,e:{docs:{},df:0,y:{docs:{},df:0,_:{docs:{},df:0,p:{docs:{},df:0,o:{docs:{},df:0,l:{docs:{},df:0,l:{docs:{},df:0,i:{docs:{},df:0,n:{docs:{},df:0,g:{docs:{},df:0,"(":{docs:{},df:0,t:{docs:{},df:0,r:{docs:{},df:0,u:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1}},df:1}}}}}}}}}}}}}}},s:{docs:{},df:0,h:{docs:{},df:0,o:{docs:{},df:0,u:{docs:{},df:0,l:{docs:{},df:0,d:{docs:{},df:0,_:{docs:{},df:0,c:{docs:{},df:0,l:{docs:{},df:0,o:{docs:{},df:0,s:{docs:{},df:0,e:{docs:{},df:0,"(":{docs:{},df:0,t:{docs:{},df:0,r:{docs:{},df:0,u:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1}},df:1}}}}}}}}}}}}}}}}}}},h:{docs:{},df:0,o:{docs:{},df:0,u:{docs:{},df:0,l:{docs:{},df:0,d:{docs:{},df:0,_:{docs:{},df:0,c:{docs:{},df:0,l:{docs:{},df:0,o:{docs:{},df:0,s:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1.4142135623730951}},df:1}}}}}}}}}}}},":":{docs:{},df:0,":":{docs:{},df:0,w:{docs:{},df:0,i:{docs:{},df:0,n:{docs:{},df:0,d:{docs:{},df:0,o:{docs:{},df:0,w:{docs:{},df:0,b:{docs:{},df:0,u:{docs:{},df:0,i:{docs:{},df:0,l:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:3}}}}}}}}}}}}},_:{docs:{},df:0,i:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.4142135623730951}},df:3}}},b:{docs:{},df:0,u:{docs:{},df:0,i:{docs:{},df:0,l:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1,e:{docs:{},df:0,r:{docs:{},df:0,":":{docs:{},df:0,":":{docs:{},df:0,n:{docs:{},df:0,e:{docs:{},df:0,w:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1,"(":{docs:{},df:0,")":{docs:{},df:0,".":{docs:{},df:0,b:{docs:{},df:0,u:{docs:{},df:0,i:{docs:{},df:0,l:{docs:{},df:0,d:{docs:{},df:0,"(":{docs:{},df:0,"&":{docs:{},df:0,a:{docs:{},df:0,m:{docs:{},df:0,p:{docs:{},df:0,";":{docs:{},df:0,e:{docs:{},df:0,v:{docs:{},df:0,e:{docs:{},df:0,n:{docs:{},df:0,t:{docs:{},df:0,_:{docs:{},df:0,l:{docs:{},df:0,o:{docs:{},df:0,o:{docs:{},df:0,p:{docs:{},df:0,")":{docs:{},df:0,".":{docs:{},df:0,u:{docs:{},df:0,n:{docs:{},df:0,w:{docs:{},df:0,r:{docs:{},df:0,a:{docs:{},df:0,p:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:3}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},e:{docs:{},df:0,v:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:3,e:{docs:{},df:0,n:{docs:{},df:0,t:{docs:{},df:0,":":{docs:{},df:0,":":{docs:{},df:0,c:{docs:{},df:0,l:{docs:{},df:0,o:{docs:{},df:0,s:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{},df:0,e:{docs:{},df:0,q:{docs:{},df:0,u:{docs:{},df:0,e:{docs:{},df:0,s:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:3}}}}}}}}}}}}}}}}}}}}}},i:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:2}},df:8,"'":{docs:{"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1.4142135623730951}},df:1},_:{docs:{},df:0,m:{docs:{},df:0,a:{docs:{},df:0,i:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1}},df:1}}}}}}}},p:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1},r:{docs:{},df:0,e:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1}},df:1}},s:{docs:{},df:0,h:{docs:{},df:0,l:{docs:{},df:0,i:{docs:{},df:0,s:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}},t:{docs:{},df:0,h:{docs:{},df:0,_:{docs:{},df:0,c:{docs:{},df:0,l:{docs:{},df:0,e:{docs:{},df:0,a:{docs:{},df:0,r:{docs:{},df:0,_:{docs:{},df:0,c:{docs:{},df:0,o:{docs:{},df:0,l:{docs:{},df:0,o:{docs:{},df:0,r:{docs:{},df:0,"(":{docs:{},df:0,c:{docs:{},df:0,l:{docs:{},df:0,e:{docs:{},df:0,a:{docs:{},df:0,r:{docs:{},df:0,_:{docs:{},df:0,c:{docs:{},df:0,o:{docs:{},df:0,l:{docs:{},df:0,o:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.4142135623730951}},df:1}}}}}}}}}}}}}}}}}}}}}}}},i:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1}},df:1}},o:{docs:{},df:0,u:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:3.872983346207417},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:9,"/":{docs:{},df:0,w:{docs:{},df:0,i:{docs:{},df:0,t:{docs:{},df:0,h:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:1}}}}}}}}}}},o:{docs:{},df:0,n:{docs:{},df:0,"'":{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1.4142135623730951},"https://breakbuild.dev/support/":{tf:1.4142135623730951}},df:8}},k:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1}},df:1}}},r:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:3},k:{docs:{"https://breakbuild.dev/":{tf:1},"https://breakbuild.dev/blog/":{tf:1},"https://breakbuild.dev/blog/my-year-with-rust/":{tf:6},"https://breakbuild.dev/devlog/":{tf:1},"https://breakbuild.dev/devlog/motivation/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/renderer/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:2},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:2.449489742783178},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:2}},df:16,a:{docs:{},df:0,r:{docs:{},df:0,o:{docs:{},df:0,u:{docs:{},df:0,n:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:2}}}}}},f:{docs:{},df:0,l:{docs:{},df:0,o:{docs:{},df:0,w:{docs:{"https://breakbuild.dev/devlog/motivation/":{tf:1.4142135623730951}},df:1}}}},s:{docs:{},df:0,p:{docs:{},df:0,a:{docs:{},df:0,c:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:2},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:3.1622776601683795},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1.7320508075688772}},df:4}}}}},l:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1}},df:3}},r:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:1}},s:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:3,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:2}},t:{docs:{},df:0,h:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:2,w:{docs:{},df:0,h:{docs:{},df:0,i:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:1}}}}}}},u:{docs:{},df:0,l:{docs:{},df:0,d:{docs:{},df:0,n:{docs:{},df:0,"'":{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/motivation/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1}},df:5}}}}}}},r:{docs:{},df:0,a:{docs:{},df:0,p:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1}},df:3,p:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1.4142135623730951}},df:3}}}}},e:{docs:{},df:0,n:{docs:{},df:0,c:{docs:{},df:0,h:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}},i:{docs:{},df:0,t:{docs:{},df:0,e:{docs:{"https://breakbuild.dev/":{tf:1.7320508075688772},"https://breakbuild.dev/blog/my-year-with-rust/":{tf:4},"https://breakbuild.dev/devlog/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/motivation/":{tf:1},"https://breakbuild.dev/devlog/renderer/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1.4142135623730951}},df:13,"!":{docs:{},df:0,"(":{docs:{},df:0,f:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:2}}},_:{docs:{},df:0,b:{docs:{},df:0,i:{docs:{},df:0,n:{docs:{},df:0,d:{docs:{},df:0,i:{docs:{},df:0,n:{docs:{},df:0,g:{docs:{},df:0,s:{docs:{},df:0,"(":{docs:{},df:0,g:{docs:{},df:0,l:{docs:{},df:0,o:{docs:{},df:0,b:{docs:{},df:0,a:{docs:{},df:0,l:{docs:{},df:0,g:{docs:{},df:0,e:{docs:{},df:0,n:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:1}}}}}}}}}}}}}}}}}}}}}},i:{docs:{},df:0,n:{docs:{},df:0,g:{docs:{},df:0,"/":{docs:{},df:0,l:{docs:{},df:0,o:{docs:{},df:0,o:{docs:{},df:0,k:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}}}},t:{docs:{},df:0,e:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/blog/":{tf:1},"https://breakbuild.dev/blog/my-year-with-rust/":{tf:2},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1}},df:3}}}}},o:{docs:{},df:0,n:{docs:{},df:0,g:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:3.4641016151377544},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:4,l:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}}},x:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:2},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1}},df:5,1:{docs:{},df:0,1:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1.4142135623730951},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:2}},8:{docs:{},df:0,6:{docs:{},df:0,_:{docs:{},df:0,6:{docs:{},df:0,4:{docs:{"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1}},df:1}}}}},m:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:2.23606797749979}},df:1}},n:{docs:{},df:0,a:{docs:{"https://breakbuild.dev/devlog/motivation/":{tf:1.7320508075688772}},df:1}},x:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}},y:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1}},df:5,a:{docs:{},df:0,g:{docs:{},df:0,n:{docs:{},df:0,i:{docs:{},df:0,"(":{docs:{},df:0,'"':{docs:{},df:0,y:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1}},df:1}}}}}}},e:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1,a:{docs:{},df:0,h:{docs:{"https://breakbuild.dev/support/":{tf:1}},df:1},r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:3},"https://breakbuild.dev/devlog/motivation/":{tf:1.7320508075688772}},df:2}},e:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/chapter/":{tf:1}},df:1}},l:{docs:{},df:0,l:{docs:{},df:0,o:{docs:{},df:0,w:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1.4142135623730951}},df:1}}}}},o:{docs:{},df:0,i:{docs:{},df:0,n:{docs:{},df:0,k:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1}},df:2}}},l:{docs:{},df:0,o:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1}},df:1}},u:{docs:{},df:0,n:{docs:{},df:0,g:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1}},df:2}}}}},z:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:2.23606797749979},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1}},df:4,e:{docs:{},df:0,a:{docs:{},df:0,l:{docs:{},df:0,o:{docs:{},df:0,u:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}},r:{docs:{},df:0,o:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1.7320508075688772},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:3}}},o:{docs:{},df:0,l:{docs:{},df:0,a:{docs:{"https://breakbuild.dev/":{tf:1}},df:1}}}}}},title:{root:{docs:{},df:0,a:{docs:{},df:0,t:{docs:{},df:0,t:{docs:{},df:0,r:{docs:{},df:0,i:{docs:{},df:0,b:{docs:{},df:0,u:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1}},df:1}}}}}}}},b:{docs:{},df:0,a:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}},i:{docs:{},df:0,n:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:1}}},u:{docs:{},df:0,f:{docs:{},df:0,f:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{tf:1}},df:1}}}}}},c:{docs:{},df:0,o:{docs:{},df:0,n:{docs:{},df:0,t:{docs:{},df:0,e:{docs:{},df:0,x:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{tf:1}},df:3}}},r:{docs:{},df:0,i:{docs:{},df:0,b:{docs:{},df:0,u:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/support/":{tf:1}},df:1}}}}}}}}},e:{docs:{},df:0,r:{docs:{},df:0,r:{docs:{},df:0,o:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:1}}}},x:{docs:{},df:0,c:{docs:{},df:0,u:{docs:{},df:0,r:{docs:{},df:0,s:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:1}}}}}},g:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{tf:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:2,f:{docs:{},df:0,w:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{tf:1}},df:1}}},o:{docs:{},df:0,o:{docs:{},df:0,d:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}},h:{docs:{},df:0,a:{docs:{},df:0,n:{docs:{},df:0,d:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{tf:1}},df:1},w:{docs:{},df:0,r:{docs:{},df:0,i:{docs:{},df:0,t:{docs:{},df:0,t:{docs:{},df:0,e:{docs:{},df:0,n:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{tf:1}},df:1}}}}}}}}}},e:{docs:{},df:0,l:{docs:{},df:0,l:{docs:{},df:0,o:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/chapter/":{tf:1}},df:4}}}}},m:{docs:{},df:0,o:{docs:{},df:0,t:{docs:{},df:0,i:{docs:{},df:0,v:{docs:{"https://breakbuild.dev/devlog/motivation/":{tf:1}},df:1}}}}},o:{docs:{},df:0,p:{docs:{},df:0,e:{docs:{},df:0,n:{docs:{},df:0,g:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{tf:1}},df:1}}}}}},p:{docs:{},df:0,r:{docs:{},df:0,o:{docs:{},df:0,j:{docs:{},df:0,e:{docs:{},df:0,c:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/project_setup/":{tf:1},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1}},df:2}}}}}}},r:{docs:{},df:0,e:{docs:{},df:0,n:{docs:{},df:0,d:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/":{tf:1}},df:1,t:{docs:{},df:0,a:{docs:{},df:0,r:{docs:{},df:0,g:{docs:{},df:0,e:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{tf:1}},df:1}}}}}}}}}}},u:{docs:{},df:0,s:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}},s:{docs:{},df:0,e:{docs:{},df:0,t:{docs:{},df:0,u:{docs:{},df:0,p:{docs:{"https://breakbuild.dev/devlog/renderer/project_setup/":{tf:1},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{tf:1}},df:2}}}},h:{docs:{},df:0,a:{docs:{},df:0,d:{docs:{},df:0,e:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{tf:1}},df:1}}}}},u:{docs:{},df:0,p:{docs:{},df:0,p:{docs:{},df:0,o:{docs:{},df:0,r:{docs:{},df:0,t:{docs:{"https://breakbuild.dev/support/":{tf:1}},df:1}}}}}}},t:{docs:{},df:0,r:{docs:{},df:0,i:{docs:{},df:0,a:{docs:{},df:0,n:{docs:{},df:0,g:{docs:{},df:0,l:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/chapter/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/chapter/":{tf:1}},df:4}}}}}}},u:{docs:{},df:0,g:{docs:{},df:0,l:{docs:{},df:0,i:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}},v:{docs:{},df:0,2:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/":{tf:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/chapter/":{tf:1}},df:2},e:{docs:{},df:0,r:{docs:{},df:0,t:{docs:{},df:0,e:{docs:{},df:0,x:{docs:{"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{tf:1}},df:1}}}}}},w:{docs:{},df:0,r:{docs:{},df:0,i:{docs:{},df:0,t:{docs:{},df:0,e:{docs:{"https://breakbuild.dev/devlog/renderer/":{tf:1}},df:1}}}}},y:{docs:{},df:0,e:{docs:{},df:0,a:{docs:{},df:0,r:{docs:{"https://breakbuild.dev/blog/my-year-with-rust/":{tf:1}},df:1}}}}}}},documentStore:{save:!0,docs:{"https://breakbuild.dev/":{body:"About Me\nI'm just a wannabe game developer from Germany, in the beginning of his 30s, working on other people's games since 2014, and a full time freelancer since 2018. I have been using C++ and C# more or less professionally for almost a decade at this point.\nI watch way too many cartoons(MyAnimeList), like graphics programming, am into SRPG's and card games, and I'm pretty much addicted to the Rust programming language nowadays.\nMy setup is Arch Linux with the i3 window manager, and I use Neovim for pretty much everything code related. \nAbout This Site\nMy goal is and has always been to make my own games. I decided to log my journey as I go, to share my progress, thoughts and get feedback. From writing a simple renderer to actual games. I will share how I approach and solve problems, write down alternative approaches I considered, and reasons why I decided against them and similar things. Basically making the entire process as transparent as possible. This also means that every single line of code I'm writing for this project will be Open Source. \nIf you ever find any errors, be it factual or grammatical ones, or have any\nquestions, please open an issue on this repository or contact me via any of the\nsocial media links at the bottom of this site. Read the\ncontribution page for further information.\nThis site is using Zola and based on the amazing and lightweight Abridge theme. \nLinks\n\nDevlog: Log of my journey, where I share my thoughts, progress, and approach to solving the problems as I encounter them.\nBlog: Random thoughts and ramblings.\nContribution &amp; Support: Ways on how to contribute to this project and support me.\n\n",id:"https://breakbuild.dev/",title:""},"https://breakbuild.dev/blog/":{body:"Blog\nJust a bunch of articles, thoughts, ramblings or any F.A.Q's, written whenever I feel like it. \nDon't expect any regular updates here :)\nThe main focus of this site is my devlog, where I share my work in progress,\nupdated ideally every few days.\n",id:"https://breakbuild.dev/blog/",title:""},"https://breakbuild.dev/blog/my-year-with-rust/":{body:'Summary\n"Dood, it says it\'s a 40 minute read, I ain\'t got no time man". I hear you, here\nis the summary of the points. The articles goes into more details and mentions\nexamples, but the core essence is:\n Summary \n Intro\nSome bearded man on an internet streaming platform talked about the nice\nthings that Rust offered, that went beyond for me irrelevant buzzwords like "safety" or\n"correctness". While I started to really appreciate them after using\nRust for a while, enums with pattern matching, iterator-fu, the lack of null, the amazing tools and tons of quality of life features are what actually convinced me to take a closer look into the language. As a result, I pushed my plans of taking a year off work to make video games back for a bit over a year to learn this language.\n\n\nThe Good\n▪ Rust Does Not Crash: Rust encourages correctness and the\ncommunity embraces it. Praise for the strong type system and uniform error\nhandling!\n▪ Rust Is Modern: The tools are amazing and actually got your back. Lots of quality of life features.\n▪ Rust Supports My Laziness: Impactful defaults and having the "bad" things being opt-in rather than opt-out are a huge game changer. When you are fighting the borrow checker, your solution is usually not as clean and simple as it could be.\n\nThe (potentially) Bad\n▪ Rust Is Opinionated:  Rust can feel restrictive at times. The alternative\nto common features in other languages often leads to more boilerplate. The plus side is\nthat everyone follows the guideline and tries to write (the same) idiomatic Rust.\n▪ Rust Is Not Object Oriented: Your enjoyment of Rust relies on\nwhether you are willing to adapt and potentially ditch the way you did things\nin other languages, which is not just limited to OOP. Rust is different.\n▪ Chasing Idiomatic Rust:  I notice how I waste(d) a lot of time\nchasing the idiomatic truth. When a language is opinionated like Rust, you\ndon\'t want to be the odd one out.\n▪ Dependency Hell: It\'s not uncommon to end up with hundreds of transient dependencies. This increases build times and risks, but there is also something like an extended standard library.\n▪ Bloat:  Generics and derives can add a surprising amount of lines of code "out of nowhere".\n\nThe Ugly\n▪ Lack Of Maturity:  Lack of jobs and mature libraries. Also still many\nunstable and unfinished language features.\n▪ The Borrow Checker Is Not Always Right:  The borrow checker is\nnot infallible. There are some limitations that you need to hack around.\n▪ Rewrite It In Rust: All it takes is a specific requirement \nor an unknown to break the entire architecture out of the blue. Trait objects, Sync, lifetimes,\nand async are all viral and/or feeble.\n▪ Switching To Other Languages Feels Off:  The borrow checker\nconditions you to write code in a specific way. Once you have embraced Rust\'s focus\non correctness and got used to the fact that the tools got your back, you don\'t want to miss them anymore.  \nIntro\nOne day, when I was reluctantly hacking on a web crawler in the Unity game\nengine for some contract work, I turned on some programming stream for some background noise, since\nremote work can feel pretty lonely at times.\nI picked some random streamer because he was rocking a minimalistic Linux setup using Neovim,\nsimilar to my own. By sheer coincidence, he was just starting his "Teaching Rust to total\nBeginners" stream. However, it didn\'t take long for his enthusiasm for the language and certain features\nto distract me from my work.\nEveryone knows about the Rust Evangelism Strikeforce. Overly zealous Rust\nprogrammers, who spread the word of their lord and savior to an almost annoying extent. \nThis was different. He was enthusiastic about the language, but actually showed the neat little\nthings the language has to offer, beyond just throwing around keywords I didn\'t care about.\nWho cares about non-saying things like correctness or safety?\nIt\'s not like they don\'t matter, but so far I could manage without them with no\nissues. It\'s not like a small wannabe game developer like me really cares so much\nabout the common buzzwords around Rust. To be completely honest, I am sure there were \nsome feelings of spite towards this "cult" that just made me not look into the language further, beyond superficially DuckDuckGoing some sample code and calling it hideous(I mainly blame lifetimes for that). I feel like you only really start to appreciate these keywords once you\nexperienced them firsthand, at least I did.\nInstead, this bearded man talked about enums in combination with pattern matching,\nhow there is no null and no inheritance, almost everything is an expression, all the countless quality of life features, modern tools,\npractical macros and functions for iterators and containers.\nHow error messages are actually readable, but more than that, they are actually helpful!\nAll that without sacrificing performance.\nSorry, Mr. Webcrawler, you have to wait, I am being converted right now! \nI didn\'t expect this random streamer to be the impulse that made me procrastinate\nfor over a year on my personal projects, to learn this supposed to be a "fad" of a programming\nlanguage. Thank you ToggleBit for introducing\nme to Rust :)\nNow, after a little bit over a year of learning, I decided to share my experience and thoughts\nabout Rust, expressing my love for this language, but also trying to balance by\ntalking about its issues. Let\'s start with the good things.\nThe Good\nI always feel that reducing Rust to its safety aspect is doing the language a\ndisservice. While safety might be important for big corporations, a small-time\ngame developer like me doesn\'t really care about it. For me, Rust is so much more than just safety.\nHere are my favorite things about Rust.\nRust Does Not Crash\nOkay, this is an exaggeration, but it is somewhat true, especially for safe Rust.\nThe truth is probably closer that Rust gives me a huge amount of confidence.\nWhen it compiles, it generally works.\nIt won\'t protect you from all kinds of logic errors, but it prevents a whole class of errors\nfrom happening and turns many into compile time rather than runtime ones.\nI admit, when I first started with Rust, correctness was not really a big concern. \nThe program should run of course, but crashing or bugs are not the end of the world most\nof the time, especially when it comes to games. They just happen.\nHowever, correctness is something that I really started to appreciate after using\nRust for a while. It really grew on me to a point where I don\'t want to miss it\nanymore. \nThe strong type system in addition to the ownership and lifetime rules just\nget rid of an entire class of runtime errors. There is no null, hidden implicit conversions,\nuse after free or move, or shared mutable state, at least for the most part.\nThere are also lots of useful tools to add more type safety, without any costs.\nErrors can often even be recognized almost right after writing a line of code, because they don\'t pass the compiler.\nRustAnalyzer is also doing an amazing job here. This is a huge productivity boost.\nThis is by no means unique to Rust and you get something similar in any modern\nIDE for most relevant languages. The big difference is that Rust\'s strict rules,\nbe it ownership or type safety, just catches a lot more, to a point where it\'s\nrare to not get suspicious when it compiles without any complaints. \nRust also forces you to handle all code paths. You have to be explicit about things\nthat can fail. A function doesn\'t just randomly throw some exception when something goes\nwrong. Instead, it returns a Result that the caller has to check for errors and\nhandle them, or it returns an Option if there might not be a return value at all.\nYou just can\'t accidentally call a function on a "null" object. Part of the type\nsafety is that null is not a valid state. A value might be optional, but then Rust\nforces you to deal with both cases.\nPanic exists, but there is always a non-panicking alternative. \nInstead of indexing a slice that might be out of bounds, you can call\nmy_slice.get(index). Instead of foo.unwrap(), you just handle the Result,\netc.\nif let Some(my_value) = my_slice.get(index) {\n    //do something with the value\n}\n\nmatch fallible_function() {\n    Ok(my_value) =&gt; //do something with the return value,\n    Err(error) =&gt; //handle the error\n}\n\n//or some nice helpers\nlet output = container.get(index).unwrap_or(default_value);\n\nOn the first glance this seems more verbose, but in reality the code to\nhandle this is something that should be probably written all the time in other languages, often ending up with even more verbosity.\nThe difference is that Rust forces you to write it, while in other languages,\nyou often end up procrastinating and might even ignore or forget about them. \nSince Rust expects you to deal with these cases, it has many quality of life functions and features to\nmake this easier.\nJust to clarify, panicking is not inherently bad. \nSome people might want to crash for severe logic errors in the code right away, to prevent some bigger problems.\nMy main point is that panicking is opt-in. It\'s a conscious decision. Not\nsomething that just happens because you forgot to deal with potential errors.\nI am certain that this changes how programmers deal with error handling. When you have to do\nsomething with the error anyway, be it handling it or just crashing, most will\nautomatically pick the choice that provides the better experience. \nThe side-effect is that the program ends up being more correct, because the potential\nerror cases are explicit. Nothing just silently fails or\nis null, without the programmer who is responsible knowing about it.\nThe Rust community itself has a strong sense of correctness and soundness, which\nyou will notice in third party crates, but also in the tools. Rustacians\nactually keep asking for idiomatic solutions to a point where the term\n"idiomatic Rust" has almost become a meme, but that is another point.\nThen there are the unsafe blocks. They stick out like a sore thumb and\nautomatically attract special attention, especially when something actually goes\nwrong. Luckily, they are not throwing all of Rust guarantees out of the window, which\nmake them still safer than other languages, but this is the world of FFI (calling C code, or code that can expose a C ABI), pointer dereferencing, and messing with mutable static variables among a few other things.\nThe usual suspects you want to look at when something goes really wrong.\nSeparating these bad boys from the rest does not only reduce the cognitive\noverhead when working inside these blocks, but it makes finding the causes for\nissues much easier. They are usually as small as they can be, and often\nwrapped inside safe wrappers. \nRust is Modern\nAfter treading through the hell that is CMake or "manually traversing transient dependencies in NuGet to hunt for standard 2.0 versions because of Unity", Cargo, Rust\'s package manager and build tool, was a change. Turns out, adding dependencies can actually be easy. \nNot just dependency management, but also building for various platforms,\ncross compiling from Linux to Windows or even to WebAssembly is straightforward.\nBut Cargo is not where Rust stops. Documentation, linting, formatting, LSP integration, are\namong the best from the languages that I have used so far.\nClippy, Rust\'s linter, really helps to simplify code, making it more idiomatic, and also educates the user with links that\nexplain the rationale behind the suggestions. I even opt-in for a stricter set of\nwarnings, because it is that helpful. \nRust-analyzer, an implementation of the Language Server Protocol, in short LSP, has countless code actions and makes navigation work like a charm. Some really amazing people keep diligently working on it, to a point where I always look forward to the update every Monday. There are far more code actions than one could remember. From inlining functions, to expanding macros or inserting raw JSON - just looking at the options it provides is always a surprise. \nThere are many more helpful tools for testing, benchmarking, profiling, an\ninterpreter that detects undefined behavior(miri) and much more.\nAnd the best of all, most of them are pretty much the de-facto standard in Rust. Not\nonly do they work really well together, but since most of them essentially come with Rust, or are at least expected to be used, they increase the baseline quality of the code in general. \nBut it\'s not just the tools, there are also many quality of life features in the language itself.\nSo many little handy helpers that you would not even expect from a high level language. \nHelpful macros that can embed bytes directly into the binary(useful for\nassets in small games, like game jam entries), formatting strings, things that deal\nwith boilerplate like derives and the ?-operator for bubbling up errors.\nBut my favorite are the iterators. There are just so many useful helper\nfunctions that make things easier to read and maintain. For example, to flip an image, that is to make the origin bottom left instead of top\nleft, is as easy as: \n//image_bytes is some container that stores each channel in order, e.g: [r1, g1, b1, a1, r2, g2, b2, a2,..]\nimage_bytes\n    .chunks(4 * image_width)//turn the raw bytes into rows\n    .rev()                  //reverses the order of the rows\n    .flatten()              //turns the rows back into raw bytes\n\nAnd this comes without additional costs. "Zero cost abstractions" often\nsounds misleading, but generally, iterators are generally at least as fast as\nmanually writing for-loops. flatten() and its friends are probably my\nfavorite, turning nested "arrays" into a single flat one.\nSo, when I am not sure how I want to do something, I skim through the\nIterator docs and almost always find some new useful little helper. The same is even true for containers and even basic types.\nThe actual useful error messages and lack of legacy luggage(for now) are the cherry on\ntop.\nRust Supports My Laziness\nI am lazy, but I would argue this is true for most programmers. \nCode would be much safer and easier to maintain if everyone\nwould be const correct, pay attention to the critical sections, write tests, \nwouldn\'t go for low effort hacks, properly handle errors and would actually use proper tools. \nFrom my experience, programmers in general tend to go the path of least\nresistance. \nEven a super diligent and enthusiastic programmer will get tired. Some after years of bending to unreasonable client requests, like a web crawler in a fricking game engine, while for\nothers the lunch break is enough to reach their breaking point. \nThis is why defaults are impactful.\n"More work to do the better thing" often just turns into\nprocrastination. "I do it once I am done", but then often just forgotten or\nsomething else, a seemingly more important thing, needs to be done first.\nIt\'s not just shared mutable state, but also unsafe hacks, or disabling the warnings, that are generally more work in Rust.\nSome things that are universally bad are even forbidden. You just can\'t\nhave uninitialized values or forget handling the error case. There are shortcuts\nfor the sake of productivity of course, like inserting todos!() or unwrap() during\ndevelopment, but you don\'t want them in production code and those are easy to grep for.\nI hate riding the "Rust good, C++ bad" train(I\'m picking on it because it is just the language I\'m most\nfamiliar with, not because I dislike it or anything), but having switch cases be\nfallthrough, auto generated functions you often want to manually\ndelete(copy/assignment), non-destructive move, unsafe, mutable variables in general,\nor unchecked indexing in arrays, be the default, feels just wrong and often\ncauses issues.\nHeck, it\'s not even a problem exclusive to C++ or new/intermediate devs, but even experienced\nprogrammers in other languages suffer from bad defaults. A couple months ago, there was a tweet by a C veteran who worked for decades, for\ncompanies like RAD, Valve, Oculus and Intel:\n\nThe replies mentioned how -Wimplicit-fallthrough, would have caught it right\naway or depending on the compiler, it might have been part of -Wall, -Wextra,\netc.(not sharing the rest of this tweet chain, cause the discussion kinda\nwent south after the suggestions). The point is, that even industry veterans are\nsitting there, missing things that should/could have been the default. Wasting\nthree days on something that not just Rust, but useful defaults in general, would just have prevented.\nWhy do programmers need to opt-in to -Wall and friends in the first place? And why would they even spit\nout warnings for system headers? I get that some warnings might be\nsubjective or report false positives, nothing wrong with those being optional, but an uninitialized value, the classic\nif (a = b) {}, wrong format character in printf, or even wrongly formatted inline ifs, are objectively bad.\nThere is no reason to not check for them by default, at least in debug builds.\nWarnings being opt-in just means that the people who care about them will be\nflooded with warnings for the code they didn\'t write and just end up missing the warning they care about.. defeating their whole purpose. \nPeople who need the objectively "worse", rare or unsafe/unchecked options should actually opt-in to them, rather than making the better option more work. Who cares if bounds checking is slower? Most of the time\nthe single bounds check is insignificant to the overall performance, and in the\ncases where it actually becomes a problem, you can opt-in to use the unchecked\nalternative, when you actually need it.\nAs mentioned, Rust generally follows the philosophy that the "bad" things are opt-in rather than opt-out, but it goes even a step further and its fundamental design turns\ncomplex solutions into a fight with the borrow checker. Especially when starting\nyou might think your solution is fine, it was fine in the language you used\nbefore, you know how to program, Rust is wrong.. But after embracing "the style\nthat pleases the borrow checker" and using Rust\'s uncommon language features(at\nleast uncommon when it comes to mainstream languages), I can admit that the borrow\nchecker is usually right, and the code ends up simpler and cleaner as a result. Turns\nout, it\'s easier to test and refactor when objects are not carrying mutable references\naround or are in complex graphs of relationships.\nOnce I was no longer fighting the borrow checker and saw him more as an adviser than\na hurdle, Rust became bliss.\nRust is opinionated, yes, but having an "enforced" standard with naming\nconventions and all, makes sure everyone writes the same code. It\'s super simple\nto read other people\'s code, because you are already familiar with the common\nidioms and naming conventions, and clippy will make sure the code is as simple\nand idiomatic as it should be.\n\nAll in all, I found Rust just incredible fun to write. The combination of\nmatches and enums, the flexibility of traits, the fact that almost everything is an expression, that\nthe tools actually got your back, errors are caught early or are even prevented\naltogether, and the impactful defaults make Rust just fun and kinda just makes \nyou strive for the idiomatic solution. \nHowever, not everything is great, not even in Rust. There are ugly things and\nthings that are not strictly good. So let\'s dive into those.\nThe (Potentially) Bad\nThe following things are not strictly bad. They are either necessary "evils" or highly\nsubjective. Most of them are even optional.\nRust Is Opinionated\nWhile I considered it a good thing above, and I think the net result is\ndefinitely positive, there are some arguably bad parts to Rusts opinions and\ndepending on personal preferences, they can weight differently.\nCompared to a language like C++, which pretty much follows the philosophy "do\nwhatever you want, I don\'t care", Rust can feel restrictive.\nThings like inheritance, function overloading or even default arguments are not supported by design. \nInheritance is replaced by composition. One could argue that composition is pretty much superior in all cases, but it generally leads to more boilerplate. \nYou often end up forwarding functions to the components, unless you want to(or can) make\nthem publicly accessible. That said, this is not an issue exclusive to\ncomposition, but also true for tuple structs in general(often used for the newtype\nidiom).\nHopefully, Rust will have some way to flatten fields at some point to increase\nthe ergonomics. \nFunction overloading can be somewhat replaced via trait implementations: \nmod foo {\n    pub trait Foo {\n        fn bar(&amp;self);\n    }\n\n    impl Foo for str {\n        fn bar(&amp;self) {\n            println!("I am a str");\n        }\n    }\n    impl Foo for i32 {\n        fn bar(&amp;self) {\n            println!("I\'m not :(");\n        }\n    }\n}\n\nuse foo::Foo;\n\nfn main() {\n    "fart".bar(); //I am a str\n    0_i32.bar(); //I\'m not :(\n\n    //this also works\n    Foo::bar("foo");\n    Foo::bar(&amp;32);\n}\n\nIt works for many cases where the number of arguments is the same and the types\njust differ, but it requires importing the trait into scope. More complex cases\nrequire associated types(to have an "arbitrary" number of parameters) and are just\nnot possible cleanly, without involving some From-hacks and tuples.\nThe advantage is similar to Rust\'s alternative to traditional operator\noverloading using traits: Once you understand the purpose of the trait, you know what happens\ninside the function. There should be no hidden surprise, because of its\nexplicitness. There won\'t be some street tough who decides that % is a valid\noperator to overload for the vector cross product..\nDefault arguments and even overloading to some extent(especially for "constructors"), can be replaced via the builder pattern or just config structs.\nstruct Window {\n//...\n}\n\nstruct WindowBuilder {\n//optional fields..\n}\n\nfn main() {\n    let window = WindowBuilder::new() \n        .resizeable(false)\n        //.. bunch of other settings that differ from the defaults\n        //   or are optional\n        .create(Dimension::new(1024, 768));  //mandatory fields can be added\n                                             //here or in the Builder Constructor\n\n}\n\n\nSo far, I haven\'t missed traditional overloading yet, even though that the lack of them leads to some weird automatically generated bindings, like this\ncomically humongous chunk of a fn in web-sys, which even used to break the formatting on docs.rs(scroll horizontally to take in the beauty in its entirety):\npub fn init_mouse_event_with_can_bubble_arg_and_cancelable_arg_and_view_arg_and_detail_arg_and_screen_x_arg_and_screen_y_arg_and_client_x_arg_and_client_y_arg_and_ctrl_key_arg_and_alt_key_arg_and_shift_key_arg_and_meta_key_arg_and_button_arg_and_related_target_arg(\n    &amp;self,\n    type_arg: &amp;str,\n    can_bubble_arg: bool,\n    cancelable_arg: bool,\n    view_arg: Option&lt;&amp;Window&gt;,\n    detail_arg: i32,\n    screen_x_arg: i32,\n    screen_y_arg: i32,\n    client_x_arg: i32,\n    client_y_arg: i32,\n    ctrl_key_arg: bool,\n    alt_key_arg: bool,\n    shift_key_arg: bool,\n    meta_key_arg: bool,\n    button_arg: i16,\n    related_target_arg: Option&lt;&amp;EventTarget&gt;\n)\n\nThere are also strict style, versioning and naming guidelines, API references and more or less\nforced tools that tell you about the more "idiomatic" usage. You are free to stray away from the defaults, but be sure to face a huge backlash if you ever interact or share your code with others. \nThis is not necessarily a bad thing. Coming from C++, where everyone and their\nmom uses their own conventions, subset of the language, and manage their own list of STL-thing to avoid or even re-implement.\nFrom "C with operator overloading" to template metaprogramming, "modern C++ version XX" ,traditional OOP and everything in between, it is actually a welcoming change to see similar code written in all projects. Maybe this is because Rust is still young and there are not many things that people are disagreeing with yet. The biggest debate I have seen so far is about whether to use mod.rs or the new foo.rs when it comes to submodules, "foo".to_string() vs "foo".into() vs "foo".to_owned() vs String::from("foo"), and kebab-case vs snake_case for crate names, which are all pretty harmless in the grand scheme of things.\nSome people still have their preferences, like minimizing\ndependencies, no-panic-policies, or the reliance on generics, but they rarely affect the structure of the code. The overall code will still look pretty much the same. \nThere is also the argument to be made about whether Rust makes the aforementioned "bad" things, like shared mutable state, a bit too cumbersome when you actually need them.\nRust Is Not Object Oriented\nThe biggest cultural clash for many is probably the fact that Rust is not\nobject-oriented. Well, it depends on what you consider object-orientation.\nThere is no clear definition(and some hoodlums might argue that this lack of\nclarity is the main issue with OOP in general), but some people reduce it to\nlanguage features like having the concept of "classes", as in bundling data and\nbehavior(with access modifiers), data inheritance and polymorphism, all of which exist in Rust to some\nextent. Structs are basically just classes, inheritance can be replaced with\ncomposition and polymorphism can be archived via enums, generics and trait\nobjects. So Rust offers object-oriented features from that point of view, and might\nbe considered object-oriented.\nHowever, if you look at it as actually orienting your code\naround objects and applying the GoF design patterns, following object-oriented\ndesign as it is commonly used and taught(having a bunch of "is-a" or "has-as"\nrelationships, because "it makes sense for the nouns"), it becomes more of a way\nto solve problems and organizing code than a set of language features. \nThis kind of OOP will cause you a hard time in Rust, no matter where you stand on the OOP debate.\nNo matter how you label the language or define the programming paradigms, Rust encourages grouping data based on purpose, ownership, lifetimes and the problems you want to solve.\nYou pass around "references" only when needed with the required mutability, store\nindices/ID\'s into flat containers, and use dedicated context objects, instead of storing direct\nreferences left and right. A reference is usually only temporary.\nThe difference becomes especially clear in graph-like data structures, where the data needs to keep track of some sort of\nhierarchy. The "Learn Rust With Entirely Too Many Linked Lists"-book is a great resource for these kinds of problems.\nGenerally, I found shoving the entire data as a whole in a flat container(like a Vec)\nand then keeping track of their relationships via optional indices into that\ncontainer to be a great workaround, and I would argue that this even has some advantages\nover the classic approach.\nThe bottom line is, your enjoyment of Rust relies on whether you are willing to adapt and\npotentially ditch the way you did things in other languages, which is not necessarily\nlimited to OOP, but to whatever patterns and paradigms you are familiar with.\nRust is different. \nChasing Idiomatic Rust\nAs mentioned previously, "idiomatic Rust" is a very common phrase,\nespecially amongst beginners, to a point where it almost is a meme. \nWhen the language, ecosystem and the surrounding community "share" an opinion,\nyou might be afraid to just tackle the problem on your own, at least this was(and still is\nto some extent) true for me. Instead of just doing something, I waste time\nessentially bikeshedding, or researching "idiomatic" solutions. What should be\nexported in the lib.rs, what should be reachable via the submodules? foo/mod.rs vs\nfoo.rs as sibling of foo/? A single huge trait vs multiple smaller ones(that add\nthe noise of having to almost always import them all together)? How to organize assets in the repo for\nexamples and tests? Should crates in a workspace share a common prefix? Which\nClippy lints can I ignore?(especially when it comes to number casting and\n"stuttering" like texture::Data vs texture::TextureData, where the former is\nan import nuisance).\nRust is the first language that actually makes me search for the "idiomatic\ntruth" when being unsure, before I start to think about pros/cons on my own.\nWhile in other languages, it didn\'t really matter to me, since everyone\nhad their own guidelines.\nSure, I wasted a lot of time searching the forums, API guidelines and asking\nquestions(the community is incredibly helpful and seemingly loves to talk about\nbest practices), but the Result is that this definitely increased the base\nquality(at least in my code), but more importantly, reading, interacting with and using other people\'s code becomes pretty straight forward. There are far fewer inconsistencies.\nDependency Hell\nWithout a doubt, adding dependencies to a Rust project is as simple as writing\nthe name and version(or wild card) in your Cargo.toml. No need to resort to\nheaders-only libraries, copying the source files into your project,\nwriting/looking for CMake files(or FindPackage), or building\na separate project to build the binaries for an "old" version, so you don\'t have to crawl through\nNuGet manually to grab dependencies, because the game engine you are using\nforked the runtime which only supports .net standard 2.0 dependencies...\nA simple, unified dependency manager and build tool, that actually solves most problems, is definitely great, but also comes with some\ncaveats.\nSome might argue that this causes an over reliance on dependencies in the\ncommunity. A fairly low level graphics program using winit + wgpu can end up with 100-200 transient\ndependencies. This is just from running the hello-triangle example:\n\nIt\'s basically impossible to audit them all. There could be\nmalicious code or just incompatible licenses in any of them and you need to\ntrust that everyone in this chain at least vetted their direct\ndependencies. There are some movements and tools for "trusted" dependencies,\nlike cargo vet and general\ndependency validation(licenses, sources..) via cargo-deny, but the\nsituation is far from ideal. It\'s not close to npm-kinda-bad at least.\nThough, it\'s not like C++ is super transparent either, since dependencies often rely on system libraries and\npackages that are not immediately clear. Or things are commonly\nre-written from scratch, so you end up with a dozen different\nString-reimplementations or something in a single project.\nAnother issue is that the community itself tends to recommend existing crates\nto answer questions. "How to do X?" "Here is crate Y". While the intention might\nbe "here is a crate that does what you want, you can take a look and see how they did it",\nthe result seems to be that the crates are just taken as they are and added as dependency. \nThere is nothing wrong with using dependencies per se. They are often tested,\nmaintained by multiple people and can solve many problems in a timely manner.\nRust also goes a long way to solve many problems with additive features(and\nunification) and version compatibility to reduce them as much as it can.\nHowever, aside from the mentioned risks, dependencies are also not without a cost and are often the main reason for\none the biggest complaint that Rust gets: They increase the build times.\nThe error handling crate\nthiserror is the perfect example.\nIt\'s an incredibly handy crate and basically the de facto standard for writing \nerrors in libraries. And one of the crates(together with anyhow) recommended to beginners whenever\nthey ask about errors. But its dependency on proc-macro can add a few seconds to\nthe compile times(3-5 on my machine), just to save a few lines of boilerplate.\nBasically to write this: \n#[derive(Error, Debug)]\npub enum GraphicsError {\n    #[error("failed to create context: {0}")]\n    FailedToCreateContext(String),\n    #[error("shader compilation failed { message }")]\n    ShaderCompilation {\n        message: String,\n    },\n    #[error("unknown error")]\n    Unknown,\n}\n\ninstead of this: \n//disclaimer, this is just to illustrate the example,\n//the actual content is not important\n\nstruct ShaderCompilation {\n    message: String,\n}\n\n#[derive(Debug)]\npub enum GraphicsError {\n    FailedToCreateContext(String),\n    ShaderCompilation(ShaderCompilation),\n    Unknown,\n}\n\nimpl std::error::Error for GraphicsError {}\n\nimpl Display for GraphicsError {\n    fn fmt(&amp;self, f: &amp;mut std::fmt::Formatter&lt;\'_&gt;) -&gt; std::fmt::Result {\n        match self {\n            Self::FailedToCreateContext(cause) =&gt; write!(f, "failed to create\n            context: {cause}"), \n            Self::ShaderCompilation { comp } =&gt; write!(f, "shader compilation\n            failed {}", comp.message),\n            Self::Unknown =&gt; write!(f, "unknown error"),\n\n        }\n    }\n}\n\n\nIs the thiserror solution much cleaner? Without a doubt, and this doesn\'t even touch\nits other useful features, especially all the different conversions it can\ngenerate automatically, which would result in much more boilerplate. Is it worth up to 5 seconds clean compile time? This is highly subjective, and especially for smaller crates I would argue no.\nDon\'t get me wrong, I\'m not saying to avoid crates or thiserror in\ngeneral. If you already rely on proc-macro, thiserror is basically free. It\nalso doesn\'t really impact incremental build time nearly as much, and there are a bunch of\nhelpful features(automatically creating From conversions) that makes it more\nusable in bigger projects.\nI just wanted to illustrate the overly reliance on crates that are used without\nquestions.\nIt might just be a few more seconds, but I found that each extra second adds\nanother second where I might get potentially distracted(who just sits there waiting for the\nbuild to finish?), often losing track of what I was doing.\nAnother cost when it comes to dependencies is the size. Rust\'s binaries\nare notoriously bloated unless you strip them, especially the debug ones. It doesn\'t\nhelp that cargo caches aggressively, and you often end up with artifacts from\nprevious versions. cargo prune and cargo sweep are helpful tools to solve this issue, but my local workspace is multiple GB in size, despite the final bin being just a couple\nMB. \nThat said, one huge advantage of Rust\'s dependencies are the de facto standard crates. \nThings like log, and, especially but not exclusively for graphics programming, raw-window-handle. Small, bridging crates\nthat allow you to use and swap out whatever implementations you want in the\nexecutable, as long as they are implementing the traits. They add a nice layer of\nabstraction without requiring any additional effort.\nNot just the bridges, but also Serde, Nom, rand and many\nmore are widespread, and any relevant crate supports them(where\napplicable), often via optional feature-flags. They are like an extended std.\nThere are also some issue when it comes to name and typosquatting on crates.io,\nthe main crate repository for dependencies, and the lack of namespaces is also\nfrustrating(though the latter is currently being worked on).\nUltimately, you are in charge on how many dependencies you actually want to add. \nPersonally, I tend to only add the absolute necessary ones, but I "waste" time\nrewriting things from scratch as a result. This pretty much boils down to\npersonal preferences.\nBloat\nThere is also more hidden bloat in Rust. Macros and generics can\neasily generate hundreds if not thousands of lines of code while looking\nharmless. Generics are monomorphic, which means that they are replaced with specialized instances, for every single type that\nis passed to them. This leads to higher compilation time(generation and\noptimization) and binary cost(more instructions). Luckily, the issue can be minimized \nby splitting the generic part to small functions that convert the generic\nargument into something specific, and then pass it to the shared, longer function. \n//causes literally billion lines of code or something * the number of different T\nfn bad_generic&lt;T: Into&lt;String&gt;&gt;(t: T) {\n    let t_string: String = t.into();\n    //literally billion lines of code or something\n}\n\nfn good_generic&lt;T: Into&lt;String&gt;&gt;(t: T) {\n    //Rust allows you to define structs or functions inside of other functions\n\n    //causes literally billion lines of code, but just once, so it is fine\n    fn loads_of_stuff(t: String) {\n        //literally billion lines of code or something\n    }\n\n    //this cause one line of code * the number of T\n    //a line or two is "nothing". \n    loads_of_stuff(t.into());\n}\n\nThe Rust API-guidelines also encourages being more generous with the implementation of common traits, most of them being derivable. This means that their actual implementations are generated every time the crate is being built. \n\nSo those were some potentially bad things about Rust, or more accurately, "necessary\nevils". They are not strictly bad, and are more like a trade-off, especially\nsince most of them are optional or at the very least highly subjective.\nEspecially if you can\'t let go of your previous programming style, Rust could cause a lot of friction.\nOn the other hand, if you fully embrace the Rust way of doing things, everything will just flow nicely.\nFinally, let\'s go through the ugly things..\nThe Ugly\nAs much as I like Rust, there are unfortunately some really painful things.\nLack of maturity\nAs I mentioned before, Rust is opinionated, but whether the opinions are right or wrong\nis only something that time will tell. It is unlikely, but possible that the unified community\nmight be split because of a difference in opinions at some point. It is also unknown whether\nRusts runs into its own kind of dependency hell, or if core design decisions\nmight get in the way in projects built over a long period of time.\nThere is simply no history of gigantic software using Rust for a decade.\nThe lack of mature libraries is also a common complaint. Many crates just seem to be afraid\nof hitting the 1.0 milestone. There are many breaking changes and everything\nseems to be constantly changing. There is a lot of work in progress, but very\nfew crates that are actually production ready. Rust is fairly new.\nAnother issue caused by Rust\'s novelty is that there is a lack of jobs. I like\nRust, I want to work with Rust, but comparing the list of jobs with something like C++ is still disappointing, especially after filtering out scam-tech. Let alone when you want to work in a certain niche(graphics programming) and/or work fully remotely.\nTime will solve this issue, especially since Rust has proven that it is here to stay. A\nlittle over a year ago, it looked far more uncertain, but with Rust having\nits roots now into many big tech companies, the Linux kernel and many drivers\nbeing re-written in Rust, it won\'t just\nfizzle out in a couple of years, so I expect(and hope) the job situation will work itself\nout. Unfortunately, right now it\'s still a desert.\nThe language itself also has some holes. Rust offers many useful features with its \nlifetimes, traits, and it\'s typesystem, but I am constantly hitting unstable\nfeatures or outright forbidden operations when trying to use them together in\ncertain contexts. GATs(generics on associated types) are now stable and were one of the things where you just wanted to try to use the existing language tools when you ran into a certain problem, only to be rejected by the compiler.\nOr you want to make a function constant(so it can be executed during compile time), only to be greeted by "requires feature const_fn_floating_point_arithmetic".\nThen you see some neat little iterator function in the docs, something like\nas_chunks or ways to get a slice from an iterator,\nonly to get a warning that it is an experimental feature.\nSome useful features are also missing. Be it generic specialization, proper\ncustom allocator support that goes beyond changing the global one(there is WIP\nthough on the std collections), there doesn\'t\nseem to be something like placement new(there used to be a feature, but it seems to be\nabandoned for the new placement by return\nRFC). \nStatic asserts(without some weird hacks), and variadic templates are also on my\nwishlist.\nAs mentioned before, Rust focuses on correctness. There are many tracking\nissues that seem to be stuck for years, because there is no agreement on a solution, or\nbecause it wouldn\'t work on some exotic platforms or due to a niche reason. It\'s\nquickly adding new features that people can agree on, but the "difficult"\nquestions seem to be stuck.\nThe Borrow Checker Is Not Always Right\nAnother problem is, that things that should be possible in theory are not passing the borrow\nchecker.\nThis is not to be confused with "fighting the borrow checker" to please its\nstrict requirements, but more about the borrow checker actually being wrong or\nbeing unable to process the information.\nMost commonly it\'s something like a "getter", that keeps borrowing the\nowning struct. While fields borrow the struct only partially, functions will\nborrow the entire struct for the duration of the returned borrow.\nstruct MegaStruct {\n    pub a: String,\n    pub b: String,\n}\n\nimpl MegaStruct {\n    fn get_a(&amp;mut self) -&gt; &amp;mut String {\n        &amp;mut self.a\n    }\n    fn get_b(&amp;mut self) -&gt; &amp;mut String {\n        &amp;mut self.b\n    }\n}\n\nfn main() {\n    let mut foo = MegaStruct {\n        a: "fart".to_string(),\n        b: "foo".to_string(),\n    };\n\n    //doesn\'t work\n    //let a = foo.get_a();  //a keeps borrowing foo\n    //let b = foo.get_b();  //b can\'t borrow foo anymore\n\n    //println!("{a} {b}"); // E: cant borrow foo as mutable more than once at a time\n\n    //this does work, because it only borrows foo partially\n    let a = &amp;mut foo.a;     //borrows only the field a in foo\n    let b = &amp;mut foo.b;     //borrows only the field b in foo\n    println!("{a} {b}");\n}\n\nAnother common scenario are matches(and other diverging code paths) inside a function: \nstruct MegaStruct {\n    pub data: Vec&lt;String&gt;,\n}\n\nimpl MegaStruct {\n    fn get_or_insert(&amp;mut self, index: usize) -&gt; &amp;String {\n        match self.data.get(index) {  //E: immutable borrow occurs here\n            Some(value) =&gt; value,    //E: returning this value requires self.data for \'1\n            None =&gt; {\n                self.data.push("new value".to_string());  //E: mutable borrow occurs here\n                &amp;self.data[self.data.len()-1]\n            }\n        }\n        //Note: unreachable!(); here, or an "is_some()" check at the start\n        //are hacks around this particular issue\n    }\n}\n\nThe immutable borrow of the field data could in theory be released for the None {}\nbranch, because it\'s not there, but borrows the field as \nmutable. However, the complainer, as it is right now, sees the borrow for the entirety\nof the match.\nThere is work in progress to lift the\nlimitations(Polonius), and the borrow checker will become smarter with time, but it can be a nuisance.\nRewrite it in Rust\nThis is arguably the most frustrating problem in my opinion.\nWhen starting a new project, I find myself trying out different\napproaches, just to see how it all works out. Rust often requires rewrites or\nchanges early, especially during the problem exploration or prototyping phase, which\nautomatically guides you towards a simple and clean foundation, and it is arguably one of its\nstrengths, but sometimes you encounter fundamental issues mid-development.\nChanges in the requirement, or just new knowledge about the problem space, can potentially break the entire architecture. You might be happy with the solution, and everything is working fine, but then you encounter a case\nwhere everything falls apart. I am sure this is something that just comes with\nexperience, and I encounter this not nearly as much anymore as I did when I was a few\nmonths into the language, but it can still be a brutal issue. \nImagine writing a graphics renderer. The graphics resources live on some sort of context\nobject and you return handles to the caller. You don\'t want to return a borrow\nnor the full ownership, because it makes storing and cleaning them up more of a\nhassle. A Handle(for all intents and purposes just an ID) is good enough and there is no ownership involved.\nWhen you want to actually change the resource, you call some sort of getter, to temporarily borrow the\nconcrete resource, apply the changes, then release the borrow again. \n//A shader is basically just a program living and running on the GPU\nlet fancy_shader: Handle&lt;Shader&gt; = context.create_shader(fancy_source);\n\nif let Some(shader) = context.get_shader_mut(fancy_shader) {\n    shader.set_variable("color", Color::RED);\n}\n\nAll working fine. \nThen you work through the implementation, adding meshes, render 3D objects, got\nsome fancy camera action going,\netc. ..but then you encounter a case where you need to deal with cross-resource\nreferences: \nif let Some(shader) = context.get_shader_mut(fancy_shader) {\n    //BOOM: can\'t borrow as immutable because it is already borrowed as mutable\n    if let Some(texture) = context.get_texture(amazing_texture) {  \n        shader.set_texture("texture", texture);\n    }\n}\n\nThere seems to be no way to get a reference to the texture and pass it to the\nshader. In theory, it would be possible to use context.textures.get() and\ncontext.shaders.get_mut() for the partial borrow, but unfortunately the whole\ncontext abstracts the ugly side of OpenGL, Vulkan and other graphics\nabstractions away, so the only way to "enforce" the fields is through getters in\nthe context trait(excluding the approach with generic Wrapper and associated types on the Context\ntrait for brevity).\nMaybe it is possible to pass the texture handle to the shader instead? \nNope, the shader can\'t turn the handle into a concrete texture without the\ncontext. This might sound like a case for good ol\' Rc&lt;RefCell&gt;, but it would require a complete rewrite, potentially even abandoning the Handles in the first place. \nAnother way could be to expose this function on the context itself, instead of getting the\nresources one by one, it is possible to have a unified function on the context that gets\nboth or just forwards the intended operation:\nimpl Context {\n    // return both as a single tuple\n    pub fn get_shader_mut_and_texture(\n        &amp;mut self,\n        shader_handle: Handle&lt;Shader&gt;,\n        texture_handle: Handle&lt;Texture&gt;,\n    ) -&gt; (Option&lt;&amp;mut Shader&gt;, Option&lt;&amp;Texture&gt;) {\n        (self.shaders.get_mut(shader_handle), self.textures.get(texture_handle)\n    }\n\n    //Or: no need to borrow anything for the caller. Just forwards the call\n    //using the fields directly.\n    pub fn set_shader_texture(&amp;mut self, shader_handle: Handle&lt;Shader&gt;, texture_handle: Handle&lt;Texture&gt;) {\n        if let Some(shader) = self.shaders.get(shader_handle) {\n            shader.set_texture(self.textures.get(texture_handle))\n        }\n    }\n\n}\n\nGreat, this fixed the problem.. but now this one little exception sticks out\nfrom the rest. There might be even additional cases in the future, so it\'s better to\nmove all the functions to the context right now, just so they are consistent.\nAfter all, it would be a usability nightmare to find set_variable in the shader, but set_texture\nin the context, even though both should just update a value on the shader.\nThis example is still fairly simple, and should be recognized early in development, but imagine a breaking issue like this potentially being layers deep, involving lifetimes and being in later stages in a project.. \nAll it takes is an oversight or a sudden change in requirements that could blow\nup the existing solution. The borrow checker is not wrong in this case, but it\nstill gets in the way.\n"Rewrite it in Rust" from a whole different perspective.\nTo be fair, this is true in programming in general, but Rust is stricter and\nmore opinionated, so that easy hacks and workarounds are much, much, more work\nand sometimes impossible.\nNot just the restrictions, but also the explicitness can sieve through layers of\ncode. Maybe your struct needs to be annotated with a lifetime now, which then in\nturns goes all the way to the root of your program, touching multiple struct and\nfunction on the way.\nSync, object safety and async are all feeble and viral as well. They spread\nthrough your layers, but can break from one moment to another.\nYou start using the compiler errors as a todo list, working towards the solution, always getting new\nerrors while you work through the layers, just to arrive at the final error in\nyour core trait, only to realize that it lost its object safety and can\'t be made\ninto a trait object anymore.\nPerhaps there are some performance targets that can\'t be reached or platform limitations with\nthe current approach that would require changes, which then just snowball through the modules.\nAs I mentioned, I am sure that experience will help alleviate this issue,\nand good coding practices minimize the impact, ideally just limiting it\nto the affected modules, but there are always some unknown unknowns in a project.\nThe current solution might work fine on the current backend with OpenGL, but what about Vulkan? On a different platform like Wasm or the Nintendo Switch? Or just some fancy rendering technique in a game? Possibly just an\noversight in general, since we are just humans? In the worst case, it would require a new solution from scratch.\nSome may argue that this kind of strictness leads to overall cleaner code that\nis easier to maintain, I wouldn\'t disagree with that, but no one would want to rewrite large portions of their code, let alone close to release.. But also, how is the experience on a bigger scale?\nOr with something where the entire project is an iterative process,\nlike it is in game development, where features constantly change? Rust just\nforces you to deal with the unknown unknowns at seemingly arbitrary times and\ncould potentially throw you a wrench into your plans at any day.\nIt\'s not just the borrow checker, but also potential soundness issues,\nlike aliasing. One example of this, is the popular Macroquad crate where their\nergonomic intention, a static mutable context, is unsound and would require a\nrewrite to fix.\nThe silver lining is that I found Rust code incredibly easy to refactor. \nAside from the fact that Rust leads to a simpler design without complex\ndependency graphs, the compiler becomes essentially a todo-list that you just\nwork through to finish refactoring.\nSwitching To Other Languages Feels Off\nI know. This sounds like /r/rustjerk content, feel free to skip over\nthis part, but my point is not that Rust is superior, but more that it can causes changes in general, at least it did to me. Rust just does so many things differently.\nBeing conditioned to please the borrow checker will just change how you approach problems and write code in general.\nIt takes a lot of time to switch from the "ownership and lifetime" model to the\n"Oprah handing out mutable references"-style. The cost of the context switch is\nhuge.\nAs stated multiple times now, Rust is opinionated. It is nigh impossible to\ninternalize these opinions, move to a different language and not keep following\nthose opinions. Rust also learned from the mistakes of its predecessors and added a lot of modern fluff, which you don\'t want to miss anymore.\nCorrectness alone is something that might sound bland on paper, but once\nexperienced it, it\'s something you don\'t really want to program without. Random segfaults or exceptions\nare a test of patience. Dealing with the silly defaults and different programming style/conventions is just tedious.\nIt\'s soul crushing to see a perfect fit for some iterator-fu or simple enum matching, but then having to rely on doing it\nmanually in a more verbose and error-prone way, or run into errors where the\ncompiler would have had your back.\nIt takes away a lot of the fun when you suddenly have to switch to another language. \nBut it\'s not just about fun, but also the cost you pay for context switching. Going back\nfrom/to Rust always took me a while to get used to it to hit my usual\nproductivity levels. This wasn\'t nearly as much of a problem when I was switching between C++ and C#.\nThis was a hurdle since I was/am relying on contract work, though now I am trying to work solely in Rust.\n\nConclusion\nAll in all, even after weighing the cons, Rust just ticks the right boxes for me, and I am looking forward to where\nmy journey will take me. I don\'t see myself writing code in another language in the\nforeseeable future. It\'s not that I dislike C++\nThank you for reading. If you are interested in more, check out my devlog, where I am building a commercial game in Rust from scratch, sharing my thoughts and progress along the way. As of the release of this article, I am currently writing abstractions around OpenGL for the renderer, so take a look if you are interested. \n',id:"https://breakbuild.dev/blog/my-year-with-rust/",title:"My Year With Rust: The Good, The Bad, The Ugly"},"https://breakbuild.dev/devlog/":{body:"Devlog\nIf you want the full background, read the motivation behind all\nof this. The short story is that I want to make my own games in my own engine using Rust,\nbecause it's fun.\nThis devlog is me logging my process, thoughts, and decisions during\nthis journey.\nIt's basically just me trying to solve my problems at hand, voicing my thoughts,\nand probably me refactoring multiple times. Writing these down after the fact,\nwith the \"perfect code\" would kinda go against my intentions of showing a\ntransparent and genuine process.\nIdeally, there is a new update every few days.\nProjects\nWork in Progress\n\nWriting the Renderer\n\n",id:"https://breakbuild.dev/devlog/",title:""},"https://breakbuild.dev/devlog/motivation/":{body:"History Time\nXNA used to be a popular game development environment made by Microsoft,\nused for games like Terraria, Bastion, Fez, Stardew Valley and many more. It was probably the main tool used by aspiring indie game developers back then, and even nowadays, developers use it or its many successors to make new games.\nHowever, XNA itself was announced to be discontinued almost exactly 10 years ago.\nAs one of the many wannabe game developers back then, I was looking for alternatives. To\navoid wasting time on some proprietary technology again, I spent some time\nlearning C++ and dove into OpenGL and Direct3D. \nI had a blast and finished some tiny game jam entries.\n\n\n\nMy productivity tanked, but I had fun!\nHowever, I thought playing around wouldn't bring me closer to my goals of making\nmy own commercial games, so I switched to this new rising engine that most XNA\nrefugees I knew were using. The Unity game engine. It was(and probably still is)\nthe king of prototyping and cross-platform support. Working with it was blazingly fast.\nIt locked some advanced features behind a paywall, but I thought I should stick with it to get paid\ndoing what I love. Their pricing changed shortly after, making the entire engine\nessentially free(except for the dark mode..), and their new improved 2D workflow cemented my\ndecision.\nChasing the fun\nEven though it worked out, I was getting paid doing freelance game development work, something was missing. \nThat Unity was kinda on a decline didn't help. I don't want to go into details,\nor bash the engine, it is still a perfectly valid choice and probably the best\none for productivity and jobs.\nHowever, adding many(unfinished) features, some of which split the ecosystem, made working with it a drag.\nThings that used to be pretty much instantaneous, like opening a project or entering play\nmode, started to take a while. \nStuff like that just took away the fun for me.\nMeanwhile, I had some toy projects to distract me from the accumulating\nfrustrations I had with Unity.\nNothing fancy, just a little renderer in C++ and now modern OpenGL.\n\n\n(Sorry, here should have been a cute little video. Looks like it's not supported\nin your Browserino. Sad.)\n\n(Did I mention that I am a weeb?) \n\n\n(Sorry, here should have been a cute little video. Looks like it's not supported\nin your Browserino. Sad.)\n\nI had fun! \nI decided to save up some money to take a year off work, doing the\ncowards' version of \"quitting your job to follow your dreams\": The version where you are still\navailable for previous clients or referrals, but are just not actively looking for new ones.\nIdeally, I would finish some tiny games in my custom engine and hope to reach\nramen-profitability(enough to pay my living expenses).\nIf not, I could always go back to doing Webcrawlers in Unity(and other\nsimilar fun sounding stuff..). But at least I gave it a shot.\nI could have made up countless arguments for being in control, moral reasons,\nlearning experience, or just preservation, but ultimately, going with a custom engine just boils down to fun for me.\nUsing the language and tools I like, with my preferred workflow, and actually understanding the interesting little details sounds like bliss.\n\n(source: http://abstrusegoose.com/467)\nAs it happened, my journey got slightly delayed after listening to some random\nbearded man who converted me to the church of Rust on\nsome online streaming platform.\nEven though my endeavor got pushed back by a whole year, hyperinflation is imminent, writing a custom engine and open sourcing the games are not the best preconditions for a sustainable \"business\", I am finally going to take the jump and give it a try. \nThis devlog is just me logging my journey.\n",id:"https://breakbuild.dev/devlog/motivation/",title:"My Motivation"},"https://breakbuild.dev/devlog/renderer/":{body:"Before we are able to write some games, we need the ability to draw something on the screen. \nThe renderer shouldn't do anything fancy.\nAt the very least it should be able to display 3D models(including animations),\nallow some post-processing effects via full-screen shaders, using a deferred\nrendering path, do some basic UI stuff, and work for Desktop and WebGL. \nAdvanced things like ray tracing, clustered/tiles rendering paths or all the ML-assisted\nrender-features in modern games are beyond the scope of this little renderer and\nprobably any game I am going to write in the next decade.\nEverything else will just be added as we require for the games at hand.\nI don't have a strict plan yet, but the goal is to split the Renderer at least\ninto these packages: \nContext\nHardware abstraction layer that deals with the unsafe graphics\nAPI's like OpenGL, Vulkan, etc. It's basically \"dumb\" and just exposes\nsafe function to create and manipulate the objects that are living on the graphics\ndevice and the actual draw calls. Things like vertex buffers, shaders, and textures.\nResources\nLoads and creates different kinds of resources. Loading images(that are turned\ninto textures), models of different formats, reloading on change, etc.\nCore\nData structures shared by the other packages. Things like Color,\nMaterials, Camera, and common math structures.\nRenderer\nThe actual renderer, using the other crates to offer high level functionality. \nIt deals with the render-paths, draw call sorting, etc. It's the only thing\ndirectly exposed to the game, and exports the API of the others where\nnecessary.\n",id:"https://breakbuild.dev/devlog/renderer/",title:"Writing the Renderer"},"https://breakbuild.dev/devlog/renderer/hello_triangle/":{body:"",id:"https://breakbuild.dev/devlog/renderer/hello_triangle/",title:"Hello Triangle"},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{body:'First and foremost, we need buffers. \nBuffers are "dumb" blobs of data living in the memory of the graphics\ndevice 1. \nThey can contain vertices, indices, but also shader variables and\nmore.\nThe only important things for now are the vertices.\nVertices(plural of Vertex), are essentially single points in 3D space. \nMultiple vertices make up a geometric shape(usually 3 vertices become a single triangle). 3D objects are generally made out of many triangles. A quad is made out of 2 touching triangles. That said, a vertex isn\'t just about the position in 3D space, but also about other per-vertex data, like the color, or texture coordinates, but more about that later.\nIn OpenGL, those blobs of data are stored as buffer objects. \nThe most basic thing we need are so called "Vertex Buffer Objects", or VBO\'s in\nshort. Buffer objects that contain the vertex data.\n\n1 That said, the driver is free to use the memory however it wants, and can even allocate on the stack and heap, so there is no guarantee where the memory will be ultimately allocated. What is certain is that our GPU can access the data.\n\nSo let us create a simple function in our playground.rs to create our vertex\nbuffer. This is our "safe abstraction" over the unsafe FFI calls for now. \n//create our vertex buffer object\nfn create_vbo() -&gt; gl::types::GLuint {\n}\n\nIn OpenGL, objects are referenced via their "names", which are just unsigned integers.\nTo create a buffer, we just need to call gl::GenBuffers. In OpenGL, most\ncreate-functions are pluralized and accept arrays. Also, because of C(and cross\nplatform support in general), most\nfunctions don\'t have a direct return value(especially the ones that can return arrays),\nto put the responsibility of memory management to the caller.\nSo to use GenBuffers we need to pass something that can contain the GLuints\nfor the count we pass to it. \nGenerally, generating as many buffers as we need at once is theoretically better\nfor the performance, but in reality, you are unlikely to measure a difference on\na modern machine even when generating thousands of buffers.\nSo for now, we just generate a single buffer every time we call this function.\nWe are also technically required to delete the buffer at some point, by calling\ngl::DeleteBuffers. However, we feel young and invincible, and blindly\ntrust our OS to clean up this mess once the context is destroyed. This is just\nthe playground to explore OpenGL and will be refactored into proper abstractions\nonce the triangle is there, so we just take a mental note. \nfn create_vbo() -&gt; gl::types::GLuint {\n    let mut buffer = 0;\n\n    unsafe {\n        gl::GenBuffers(1, &amp;mut buffer);\n    }\n\n    buffer\n}\n\nA single buffer without any data is frankly quite boring, so we need to shove some data into it. \nThis is now where the biggest difference between the previously mentioned DSA\nof OpenGL &gt;= 4.5 and the traditional "modern" OpenGL lies: We need to bind our\nbuffer to some global state machine before we can use it.\nIf we look at gl::BindBuffer, we will notice that we need to specify a target and the buffer. Since our buffer is going to hold our vertex data, we need to use the nonsensical named GL_ARRAY_BUFFER target. The other targets are not relevant for now.\nunsafe {\n    gl::GenBuffers(1, &amp;mut buffer);\n    //bind the buffer to our global context to the ARRAY_BUFFER "slot"\n    gl::BindBuffer(gl::ARRAY_BUFFER, &amp;buffer);\n}\n\nNow, to actually write data to it, we need to call\nglBufferData.\nNotice how it doesn\'t require our buffer as a parameter, but instead relies on the\n"target". This is the global state machine at work. Also, the same page in the\nreferences shows us mockingly the bindless "glNamedBufferData" version, just to\nshatter our dreams at the bottom with the version support table. \nAnyway, the following two parameters are just "dynamic C-Array"-style arguments.\nOne is the size of the data as a whole and the other is the pointer to the first\nelement of our data blob. Keep in mind that the data needs to be either a slice\nof a C compatible type or a struct with repr(C). \nFinally, we need to pass in some usage flags. While modern drivers are able to make\nthe decision based on actual usage, it is still recommended to follow the\nspec. There is no restriction or guarantee about the actual usage, it is merely\na hint.\nThe usage flag is made out of 2 parts, the access and the frequency.\nFor the access there are the following three values: \n\nDRAW: The user can only write data to the buffer, but they can\'t read from it.\nREAD: The user can only read the data from the buffer, but they can\'t write to it.\nCOPY: The user can\'t neither read nor write data to the buffer. Only OpenGL can. \n\nSome nifty reader might notice that there is no case for "The user can upload\ndata to the buffer and the user can read from it". The alternative is to create two buffers, one for\nreading and one for writing and then let OpenGL copy the content from to the\nother. \nThe frequency is the other half of the flags, which has also three values: \n\nSTATIC: Set the data only once\nDYNAMIC: Set/Change the data occasionally\nSTREAM: Set/Change the data constantly\n\nOpenGL defines constants for all combinations of these flags.\nFor our buffer, we want to set it but never read it(DRAW), and we only want to\nset it once(STATIC). So our usage argument is the constant STATIC_DRAW.\nIf we were to have a terrain that changes occasionally based on a texture for\nexample, we would use DYNAMIC_COPY to occasionally let OpenGL take another\nOpenGL object(a texture) to provide the data for the buffer. Though, the line between\nDYNAMIC and STREAM is not 100% defined. \nBut again, these are only hints, so nothing prevents us from using STATIC_COPY,\nwhile we set the data every frame manually, except potentially horrible\nperformance.\nFor our vbo, we set the data from a generic slice.\nInstead of caring about the usage hints, we just focus on the STATIC_DRAW, since\nwe only want to draw a triangle.\n Note \n We don\'t need to care for the lifetime of\nour data, because it is uploaded to our buffer right away. \nGenerally, OpenGL doesn\'t block, but just queues commands up until we \ncall glFlush, which then executes whatever is in the queue asynchronously.\nOur context calls implicitly glFinish on swap_buffers, which is the same as\nglFlush, with the addition that it blocks until the commands are actually\nfinished  \n//take in any data\n//WARNING: T must conform the C layout\nfn create_vbo&lt;T&gt;(data: &amp;[T]) -&gt; gl::types::GLuint {\n    let mut buffer = 0;\n\n    //the size of our blob is the size of a single element(T) * the counts of T in our slice\n    let data_size = std::mem::size_of::&lt;T&gt;() * data.len();\n\n    unsafe {\n        gl::GenBuffers(1, &amp;mut buffer);\n        gl::BindBuffer(gl::ARRAY_BUFFER, buffer);\n\n        gl::BufferData(\n            gl::ARRAY_BUFFER,\n            data_size.try_into().unwrap(), //we need to cast usize to "isize", panicking is fine in our playground\n            data.as_ptr().cast(),          //the pointer to our first element in our slice\n            gl::STATIC_DRAW,\n        )\n    }\n\n    buffer\n}\n\nThis function is in theory not safe anymore. Our buffer data requires us to conform\nto the C layout, alignment and all. This is not a problem for the native types,\nwhich are tightly packed, but more for custom struct and similar, which require\nrepr(C). To make it safe later, we will either use a trait bound or only\naccept certain slices(e.g. &amp;[u8]).\nNow that we can create our buffer, we call this function with the data of 4\nvertices in our main, right before our event_loop.run.\n#[rustfmt::skip]  //skip the default formatting to make it cleaner\nconst QUAD_VERTICES: [f32; 3 * 4] = [\n//     X,    Y,   Z    Position\n    -0.9, -0.9, 0.0, // bottom left\n    -0.9,  0.9, 0.0, // top left\n     0.9,  0.9, 0.0, // top right\n     0.9, -0.9, 0.0, // bottom right\n];\n\nlet vbo = create_vbo(&amp;QUAD_VERTICES);\n\nWe created our vertex buffer with 4 vertices, each with a single position in 3D\nspace. \nThe OpenGL coordinate system goes from -1.0 to 1.0 on all three axes. These are\nthe normalized device coordinates, or in short NDC. The origin\nis the center of the window, bottom left is -1.0 on the X and Y axes, while top\nright is 1.0 for both. Try to grab your screen and your arm points to the\nnegative Z axis, which means the positive Z axis is going towards us.\nThe whole space discussion is arguably boring and I am not nearly enough trained\nin math to explain this correctly and there are already pretty nifty resources, so look at\nlearnopengl.com or DuckDuckGo for the actual details.\nThe important thing is that our vertices sit at a distance of 0.1 on the X and Y axes away from the border of our window.\nIf we were to set the Z value to 1.0, our vertices would be as close to the\nscreen as possible before leaving it and a Z below -1.0 would mean they are\n"behind" our screen.\nWhy 4 vertices when we want to draw a triangle?\nWell, find out in the next episode of "Hello Triangle" ;)\n',id:"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/",title:"Buffers"},"https://breakbuild.dev/devlog/renderer/hello_triangle/chapter/":{body:'What better way to start than the "Hello World" of graphics programming, \ndrawing a triangle?\nWe are going to use our playground from the context chapter as\nbase.\nDrawing Stuff in OpenGL\nAs mentioned before, I won\'t go into all the details when it comes to OpenGL,\nyou are better served with the amazing learnopengl.com. This little\nseries will go more into the "practical" use and the implementation, while I will just\ngive a short TL;DR explanation at best.\nThere are a few things we need to draw in modern OpenGL:\n\nBuffer objects\nVertex Attributes\nShaders\n\nSo let\'s dive into the buffer objects first.\n',id:"https://breakbuild.dev/devlog/renderer/hello_triangle/chapter/",title:"Hello Triangle"},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{body:'Finally, we need shaders. Shaders are programs that run on the GPU, written in\na shader language(OpenGL Shading Language, or in short GLSL, in OpenGL).\nThey are the main difference between legacy and modern OpenGL. They are what makes the whole pipeline programmable.\nThere are multiple kinds of shaders, but we only care about vertex and fragment shaders for now. \nSimply put, vertex shaders are executed for every single vertex and the purpose\nis to transform them from 3D space into "clip space", often by applying all\nkinds of math operations to emulate cameras, play animations and simulate\nmovement. \nThe input-data, the vertex attributes, are what we mapped to the different input\nlocations with the VAO in the previous chapter, so the VAO needs to match the shader(at least provide\nthe data for the locations that the shader requires). Attributes that are not\nenabled by the VAO or not used by the shader are ignored.\nAfter the vertices go through the vertex shader, they go through some\nautomatic post-processing. In short, they are bundled into primitives, usually triangles, \nand are discarded if the primitive is not at least partially inside the clip space. If a\nprimitive is partially "visible", it is transformed into one or multiple primitive(s) that\nmagically fit into the space, discarding the parts that are outside. OpenGL also\ndoes some coordinate conversion into screen space and some other tests.\nThen the Rasterizer takes the surviving primitives and generates "fragments" for the "screen pixels that are covered by our\nprimitive". Fragments and pixels are basically the same for all intents and\npurposes, and Direct3D uses the term pixels for fragments, but more accurately,\na fragment is a potential pixel on the screen. So in OpenGL fragments are the input\nand pixels are the output.\nThen these fragments are processed by a fragment shader, which calculates one or more color and the depth value of the fragments, so that OpenGL then can use this information to do some additional tests(depth,\nalpha, stencil 1 and other masks), blends them, etc., and finally\nwrite the fragment to the output, like a pixel on the screen. \nThis overview is by no means exhaustive, there are more shaders and stages, but this is just the crash course. \n\n1 Stencil values are "custom values" used for some screen effects\n\nShader Sources\nSo let\'s start with a simple vertex shader, to process the vertices that we\nspecified with our VAO.\nAs mentioned, OpenGL uses the OpenGL Shading Language for shaders, which\nlooks a lot like C-based languages. GLSL is out of the scope of this series, so\nI cover the basics we need to write for our triangle and just refer to the amazing Book of Shader.\nThere are 3 parts in a shader.\nFirst, there is the input.\nOur vertex attributes, that we specified via our VAO.\nThe mapping happens either via a location attribute in the shader, or\nmanually via glBindAttribLocation.\nIf we do neither, OpenGL does it automatically and completely yolo, entirely\narbitrary. \nNo matter whether we used a location attribute or not, we need to add the type qualifier in to signal that our variable is\nan input variable, give it a type matching our attribute to some\nextent 2, and give it any name we want.\nOur position is a float made out of 3 components, which maps to a vec3 in GLSL.\nSo if we go with hard-coded locations, the first line of our shader is: \nlayout(location = 0) in vec3 pos;\n\n\n2 Providing data for a vec4, but defining it as a vec3 or even float is perfectly valid. The other way around works too, but would get us default values for the additional components.\n\nThen, we got outputs, which are defined just as our inputs, just with an out\nqualifier and without the location nonsense.\nout vec4 fragment_color;\n\nSo our vertex shader will calculate or just pass a color to our fragment shader\nlater.\nFinally, we have a main function: \nvoid main()\n{\n    gl_Position = vec4(pos, 1.0);\n}\n\ngl_Position is a built-in output variable we can use, that passes our vertex\nposition to the next stage without doing anything fancy. It\'s weirdly a vec4,\nbecause of math. Our 3D position has no perspective at all, but to make the math\nsimpler when we are going to use a "Camera" later, OpenGL does a\n"perspective divide" as part of its pipeline. It just divides the X, Y and Z\ncomponents separately by the fourth value, the W, to turn the "Clip Space" into the true NDC.\nThe higher the W, the closer are the values to the center of the screen, which allows the perspective distortion.\nThis explanation is overly simplistic, but a value of 1.0 just means that X, Y\nand Z won\'t change at all.\nLet\'s talk about interpolation while we are doing this math dump.\nSince or vertices are just "points", and the\nvertex shader is executed only for vertices, the whole area of our\nprimitives(e.g. the whole area covered by the triangles) need to calculate their values via interpolating our vertex output, so the values can be used as input for the next stages. This sounds more complicated than it is. It just means the closer a fragment is to a vertex, the closer its own value is to\nthat vertex. The further away it goes, the closer it gets to another nearer\nvertex. If Vertex A is Black and Vertex B is White, all fragments between them\nwould be grayish, getting darker closer to Vertex A and lighter closer to Vertex\nB, like a happy little gradient.\nWhich is also why we need to pass our attributes through the vertex shader, if we\nwant to make them available for our fragment shader later, which is common for\ntexture coordinates and normals.\nSo let\'s calculate our fragment_color variable in our main:\n    fragment_color = vec4(pos.x, pos.y, pos.x + pos.y, 1.0);\n\nThe calculation is a bit arbitrary for now. We turn the vertex position into a\ncolor.\nAlso, because GLSL used to be updated with each OpenGL, we need to specify a\nversion at the top of our shader source code. Since OpenGL 3.3, it is pretty straight\nforward. #version {GL_MAJOR}.{GLMINOR}0. so four our 4.3 version, it is\n#version 4.30 at the top of the shader, before anything else. \nWe could write the whole source code for the shader in a separate file and then\nload it during runtime as a file, include it via the include_string! macro, or we\ncould just define these 5 lines as a const.\nFor our playground project, I opted for the simple const: \nconst VS_SOURCE: &amp;str = r##"\n#version 430\nlayout(location = 0) in vec3 pos;\n\nout vec4 fragment_color;\n\nvoid main()\n{\n    fragment_color = vec4(pos.x, pos.y, pos.x + pos.y, 1.0);\n    gl_Position = vec4(pos, 1.0);\n}"##;\n\nNow we need to do the same for our fragment shader. \nInstead of vertex attributes, we need to use the previously defined output\nvariables, just with the in this time. It is just our fragment_color in this\ncase. Also, we declare yet another output var, which is actually going to be the\ncolor of our "pixel". We just pass it through. The layout is used for the output this time. Technically\nit is not necessary, since a single output variable is assumed to be at\nlocation 0, which is where the OpenGL spec assumes the color of our render target: \nconst FS_SOURCE: &amp;str = r##"\nlayout(location=0) out vec4 result;\n\nin vec4 fragment_color;\nvoid main()\n{\n    result = fragment_color;\n}"##;\n\nCreating The Shader Objects\nThe next step actually compiling the shaders and using them in our playground.\nThe creation is pretty straight forward, we call glCreateShader with the type\nof shader we want to create, upload the shader code with glShaderSource and\nfinally compile them with glCompileShader.\nSo let us just create our shaders first.\nlet vs = gl::CreateShader(gl::VERTEX_SHADER);\nlet fs = gl::CreateShader(gl::FRAGMENT_SHADER);\n\nNow we just upload our source code to them - \nI say "just", but it turns out that the\nglShaderSource wants pointers of pointers..\nWhat a lunatic.\nIt takes in a bunch of source code fragments and stitches them together. Which\nis also while the byte length is also a pointer, since this is how arrays work\nin C.\nLuckily, we can skip the length when we are using null-terminated string. \nWe could turn our shader code into raw byte literals with b"SOURCE CODE",\nmake sure we add a \\0 at the end and use the raw pointer to that if we like danger, and then call it a day.\nHowever, I am a coward and just bite the bullet of an additional allocation into a CString which fails\nif our str can\'t be converted into a valid C-String.\n//convert Rust Str to CString\nlet vert_source = CString::new(VS_SOURCE).unwrap();\nlet frag_source = CString::new(FS_SOURCE).unwrap();\n\ngl::ShaderSource(vs, 1, [vert_source.as_ptr()].as_ptr(), std::ptr::null());\ngl::ShaderSource(fs, 1, [frag_source.as_ptr()].as_ptr(), std::ptr::null());\n\nNow we really only need to compile them.\ngl::CompileShader(vs);\ngl::CompileShader(fs);\n\nKeep in mind that here is where we would check for compile errors. I defer this for\nour refactoring, because I am just longing for this dang triangle at this point.\nThe ShaderProgram\nWe got our shader objects, but there is a final object that we need to face, the\nShaderProgram. We see that our shaders are not really linked together. We\ndefined some input and output variables, but they are just two different\nobjects. The ShaderProgram is the one linking them together, literally. Because of it, we can\ncreate all kinds of different pipelines for our vertices, with all kinds of\ndifferent shader effects, while reusing existing shader objects. A fragment\nshader that outputs red pixels and one that outputs blue pixels might\nuse the same vertex shader for example.\nSo all we need to do is create yet another object, attach our shaders to it with\nthe conveniently named glAttachShader function, link it and et voila, we are\ndone.\nlet program = gl::CreateProgram();\ngl::AttachShader(program, vs);\ngl::AttachShader(program, fs);\ngl::LinkProgram(program);\n\nBefore the linking, we could manually set up attribute input locations in our\nvertex shader, or the output locations of the fragment shader, but since we did\nit manually in the source code, we can skip this step.\nAfter linking we should check for errors yet again, but I will use the same\nexcuse as before.\nHowever, after the linking, it is good practice to detach the shaders from the\nprogram, so that they could be properly deleted by someone who cleans up their own\nmess. So the final result looks like this: \nfn create_shader() -&gt; gl::types::GLuint {\n    let program;\n    unsafe {\n        let vs = gl::CreateShader(gl::VERTEX_SHADER);\n        let fs = gl::CreateShader(gl::FRAGMENT_SHADER);\n\n        //convert Rust Str to CString\n        let vert_source = CString::new(VS_SOURCE).unwrap();\n        let frag_source = CString::new(FS_SOURCE).unwrap();\n\n        gl::ShaderSource(vs, 1, [vert_source.as_ptr()].as_ptr(), std::ptr::null());\n        gl::ShaderSource(fs, 1, [frag_source.as_ptr()].as_ptr(), std::ptr::null());\n\n        gl::CompileShader(vs);\n        gl::CompileShader(fs);\n\n        program = gl::CreateProgram();\n        gl::AttachShader(program, vs);\n        gl::AttachShader(program, fs);\n        gl::LinkProgram(program);\n        gl::DetachShader(program, vs);\n        gl::DetachShader(program, fs);\n\n        //we are free to delete shaders,\n        // since our program only contains the linked program\n        gl::DeleteShader(vs);\n        gl::DeleteShader(fs);\n    }\n\n    program\n}\n\nDon\'t forget to call our new function.\nlet shader_program = create_shader();\n\nAnd that\'s it, now we can draw the triangle.. Finally..\nHello Triangle\nAll that is left is to bind the vao and the shader. We technically never unbound\nthe vao, but it is good practice to bind it in case some hoodlum touches\nOpenGL\'s global state machine.\nWe do this right after the clear.\nunsafe {\n    gl::UseProgram(shader_program);\n    gl::BindVertexArray(vao);\n}\n\nAnd in our loop, right after the clear, we call glDrawArrays.\nAs the name suggests, it draws what we specified with our VAO.\nThe first parameter is the mode, the kind of primitive we want to use.\nThere are multiple kinds of primitives, but we are mostly interested in the\ntriangle versions. GL_TRIANGLE will take the first 3 vertices to make a\ntriangle out of them, then the next 3 and so on. GL_TRIANGLE_STRIP will take\nthe first 3 vertices as well, but each subsequent vertex will re-use the\nprevious two vertices to create a new triangle. \nThe next two parameters are for the first and the count. \nAs mentioned before, a VAO can be used for an arbitrary amount of meshes. \nWith the first parameter we specify the index of the first index in our VAO,\nthat belongs to the mesh we wan\'t to draw. The count specifies how many\nvertices belong to our mesh.\nLong story short, we want: \ngl::DrawArrays(gl::TRIANGLES, 0, 3);\n\nright before swapping the buffers.\nThere it is! Our magnificent triangle, our first geometry before we start\nconquering the graphics world!\nChange the first argument from a 0 to a 1, for a different triangle!\nInstead of using the first 3 vertices in our buffer that stored 4, we are\ndrawing the last 3 now.\nChange the mode from GL_TRIANGLES to GL_TRIANGLE_STRIP, for no visible\nchange! Because it only works differently starting with the 4th vertex. So let\'s set\nfirst back to a 0, and the count to 4 and we are no longer bound to mere\ntriangles! I mean sure, we are drawing two overlapping triangles,\neverything we will ever draw will be made of triangles, because that is the only way to draw things in OpenGL,\nbut still! (well, we will take a look at points and lines one day)\n\nBeautiful!.. is something else.. Sure, we are programmers, not artists, but even\nwe should have been able to come up with more aesthetically pleasing colors.. At least\nsomething that doesn\'t repel us.\nAnyway, this concludes our playground project. We know a bit more about OpenGL to\na point where we could try to make some proper abstractions, clean up our mess\nand start with proper error checking and handling. \nFinal playground.rs:\n\ncac_graphics/context/examples/playground.rs\nuse context::{gl43_core as gl, opengl};\nuse raw_gl_context::GlContext;\nuse winit::{\n    dpi::LogicalSize,\n    event::{Event, WindowEvent},\n    event_loop::{ControlFlow, EventLoop},\n    window::WindowBuilder,\n};\n\nconst VS_SOURCE: &amp;str = r##"\n#version 430\nlayout(location = 0) in vec3 pos;\n\nout vec4 fragment_color;\n\nvoid main()\n{\n    fragment_color = vec4(pos.x, pos.y, pos.x + pos.y, 1.0);\n    gl_Position = vec4(pos, 1.0);\n}"##;\n\nconst FS_SOURCE: &amp;str = r##"\n#version 430\nlayout(location=0) out vec4 result;\n\nin vec4 fragment_color;\nvoid main()\n{\n    result = fragment_color;\n}"##;\n\nfn create_shader() -&gt; gl::types::GLuint {\n    let program;\n    unsafe {\n        let vs = gl::CreateShader(gl::VERTEX_SHADER);\n        let fs = gl::CreateShader(gl::FRAGMENT_SHADER);\n\n        //convert Rust Str to CString\n        let vert_source = CString::new(VS_SOURCE).unwrap();\n        let frag_source = CString::new(FS_SOURCE).unwrap();\n\n        gl::ShaderSource(vs, 1, [vert_source.as_ptr()].as_ptr(), std::ptr::null());\n        gl::ShaderSource(fs, 1, [frag_source.as_ptr()].as_ptr(), std::ptr::null());\n\n        gl::CompileShader(vs);\n        gl::CompileShader(fs);\n\n        program = gl::CreateProgram();\n        gl::AttachShader(program, vs);\n        gl::AttachShader(program, fs);\n        gl::LinkProgram(program);\n        gl::DetachShader(program, vs);\n        gl::DetachShader(program, fs);\n        gl::UseProgram(program);\n\n        gl::DeleteShader(vs);\n        gl::DeleteShader(fs);\n    }\n\n    program\n}\nfn create_vao(vbo: gl::types::GLuint) -&gt; gl::types::GLuint {\n    let mut vao = 0;\n\n    unsafe {\n        gl::GenVertexArrays(1, &amp;mut vao);\n        gl::BindVertexArray(vao);\n\n        gl::EnableVertexAttribArray(0);\n        gl::VertexAttribFormat(0, 3, gl::FLOAT, gl::FALSE, 0);\n        gl::VertexAttribBinding(0, 0); //attribute 0 uses buffer binding 0\n\n        gl::BindVertexBuffer(0, vbo, 0, std::mem::size_of::&lt;f32&gt;() as i32 * 3);\n    }\n\n    vao\n}\n\nfn create_vbo&lt;T&gt;(data: &amp;[T]) -&gt; gl::types::GLuint {\n    let mut buffer = 0;\n\n    //the size of our blob is the size of a single element(T) * the counts of T in our slice\n    let data_size = std::mem::size_of::&lt;T&gt;() * data.len();\n\n    unsafe {\n        gl::GenBuffers(1, &amp;mut buffer);\n        gl::BindBuffer(gl::ARRAY_BUFFER, buffer);\n\n        gl::BufferData(\n            gl::ARRAY_BUFFER,\n            data_size.try_into().unwrap(), //we need to cast usize to "isize", panicking is fine in our playground\n            data.as_ptr().cast(),          //the pointer to our first element in our slice\n            gl::STATIC_DRAW,\n        )\n    }\n\n    buffer\n}\n\nfn main() {\n    let event_loop = EventLoop::new();\n    let window = WindowBuilder::new().build(&amp;event_loop).unwrap();\n\n    //create a context from the existing winit window\n    let gl_context = GlContext::create(\n        &amp;window,\n        raw_gl_context::GlConfig {\n            alpha_bits: 0,\n            version: (4, 3),\n            profile: raw_gl_context::Profile::Core,\n            ..Default::default()\n        },\n    )\n    .unwrap();\n\n    context.make_current();\n\n    gl::load_with(|symbol| context.get_proc_address(symbol));\n\n    unsafe {\n        gl::ClearColor(1.0, 0.0, 0.0, 1.0);\n    }\n\n    #[rustfmt::skip]  //skip the default formatting to make it cleaner\nconst QUAD_VERTICES: [f32; 3 * 4] = [\n//     X,    Y,   Z    Position\n-0.9, -0.9, 0.0, // bottom left\n-0.9,  0.9, 0.0, // top left\n0.9,  0.9, 0.0, // top right\n0.9, -0.9, 0.0, // bottom right\n];\n\n    let vbo = create_vbo(&amp;QUAD_VERTICES);\n    let vao = create_vao(vbo);\n    let shader_program = create_shader();\n\n    unsafe {\n        gl::UseProgram(shader_program);\n        gl::BindVertexArray(vao);\n    }\n\n    event_loop.run(move |event, _, control_flow| {\n        *control_flow = ControlFlow::Poll;\n\n        match event {\n            Event::WindowEvent {\n                event: WindowEvent::CloseRequested,\n                window_id,\n            } if window_id == window.id() =&gt; *control_flow = ControlFlow::Exit,\n            Event::MainEventsCleared =&gt; unsafe {\n                gl::Clear(gl::COLOR_BUFFER_BIT);\n                gl::DrawArrays(gl::TRIANGLE_STRIP, 0, 4);\n\n                context.swap_buffers();\n            },\n            _ =&gt; {}\n        }\n    });\n}\n\n\n\nLink to the repository\n',id:"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/",title:"Shaders"},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{body:'Now that we filled our buffers, we need to tell OpenGL how to\ninterpret the data. We do this with Vertex Array Objects(VAO\'s).\nVAO\'s basically explain which vertex attribute 1 uses data\nfrom what buffer and how the data needs to be interpreted. In short: It makes\nthe per-vertex input variables in our shader read the data from our buffers.\nTo illustrate, a VAO tells the graphics device for example:\n"Vertex Attribute 0 is in Buffer 1, begins at position BYTE_OFFSET, it has 3 components(x, y, z) of the type F32, and the offset between each vertex is STRIDE_BYTES".\nThis allows us to store the data in the buffers however we want. We could shove\nit all into a single buffer, defining one vertex at a time [position0, color0, normal0, position1, color1, normal1, ..], which is also known as interleaving, group them\nper attribute [position0, position1, .., color0, color1, .., normal0, normal1, ..], or have\nthe attributes in any other order/position in one or more buffer objects. That\nsaid, it is not possible to take a single attribute(like the positions) and split\nit into multiple buffers. Generally, interleaving is better than\nnon-interleaving, because the GPU can just take all attributes that belong to\nthe vertex it wants to draw, by visiting a single memory location(since they are next to\neach other), rather than going to multiple different ones, taking one at a time.\nHowever, interleaving is often more effort and requires manually processing the\nvertex data to store them in a wanted format, which is also why many engines\nconvert 3D-Assets into a custom format.\nIt is important to note that there is no direct relationship between models/meshes and VAOs. The VAO just stores the sources of our vertex streams and their layouts.\nWe could have all vertices from all our models/meshes inside a single buffer and use the same VAO for all of them.\nIn that case we just need to pass to our future draw call the index of the first vertex of the mesh we want to draw, in addition to the number of vertices that\nbelong to that mesh, but more about that later.\nThere can only be one active VAO at a time.\nIn compatibility profiles, there is a default VAO(with the name "0"), while in core\nprofiles, binding the VAO 0 will tell our context that we have no VAO currently\nbound at all.\n\n1 Vertex Attributes are per-Vertex data. Things like the position, color, texture coordinate and normals of a vertex\n\nSo, as before, we start with a function in our playground.rs \n//creates the vertex array object\nfn create_vao() -&gt; gl::types::GLuint {\n}\n\nCreating the actual object is almost exactly as creating the buffer objects, plural\nand all, with the difference that we call glGenVertexArrays instead of glGenBuffers.\nWe also bind the vao right away, since we need it shortly after:\n    let mut vao = 0;\n    unsafe {\n        gl::GenVertexArrays(1, &amp;mut vao);\n        gl::BindVertexArray(vao);\n    }\n    vao\n\nAnd again, we are technically supposed to delete the objects manually with\nglDeleteVertexArrays.\nNow we only need to describe the data we laid out in our buffer.\nThere are two ways to do this, the old "modern" way and the new way since we are\nusing OpenGL 4.3.\nThe Old "Modern" Way\nLet\'s start with the old way with glVertexAttribPointer, as it is common since OpenGL 3.3.\nThere are 3 different functions that convert our data into different types. \nglVertexAttribPointer is the one we are mainly going to use, which\nproduces floating point values, glVertexAttribIPointer generates integers and\nglVertexAttribLPointer creates doubles. All of them can produce the values as\nscalars(single value) or vectors2. We will just\nlook at glVertexAttribPointer for now, that is the float variant of these\nfunctions.\n\n2 To clarify, these have nothing to do with the Vec data structure.\nThey are mathematical vectors. A 2 dimensional vector, or in short vec2 has an X and a Y value, while a vec3 also has an additional Z and a vec4 also has an additional W value.\n\nJust to recall, this is our buffer data: \n#[rustfmt::skip]  //skip the default formatting to make it cleaner\nconst QUAD_VERTICES: [f32; 3 * 4] = [\n//     X,    Y,   Z    Position\n    -0.9, -0.9, 0.0, // bottom left\n    -0.9,  0.9, 0.0, // top left\n     0.9,  0.9, 0.0, // top right\n     0.9, -0.9, 0.0, // bottom right\n];\n\nSo we need to tell OpenGL that our previously created buffer has the data for\nthe positions, which are interleaved(unintentionally, because we just have positions\nfor now), start at byte 0, and each position is made out\nof 3 F32 components. Additionally, we need to bind the attribute to an index,\nso that the shader will later be able to access them.\nThe first parameter for the glVertexAttribPointer, is the index, which has a non-saying description: \n\nSpecifies the index of the generic vertex attribute to be modified.\n\nGenerally when working with new OpenGL functions, I skim through the error-section at\nthe bottom of the docs(more about error handling later).\nGL_INVALID_VALUE is generated if index is greater than or equal to GL_MAX_VERTEX_ATTRIBS.    \nGL_INVALID_VALUE is generated if size is not 1, 2, 3, 4 or (for glVertexAttribPointer), GL_BGRA.   \nGL_INVALID_ENUM is generated if type is not an accepted value.   \nGL_INVALID_VALUE is generated if stride is negative.  \nGL_INVALID_OPERATION is generated if size is GL_BGRA and type is not GL_UNSIGNED_BYTE, GL_INT_2_10_10_10_REV or GL_UNSIGNED_INT_2_10_10_10_REV.  \nGL_INVALID_OPERATION is generated if type is GL_INT_2_10_10_10_REV or GL_UNSIGNED_INT_2_10_10_10_REV and size is not 4 or GL_BGRA.  \nGL_INVALID_OPERATION is generated if type is GL_UNSIGNED_INT_10F_11F_11F_REV and size is not 3.  \nGL_INVALID_OPERATION is generated by glVertexAttribPointer if size is GL_BGRA and normalized is GL_FALSE.  \nGL_INVALID_OPERATION is generated if zero is bound to the GL_ARRAY_BUFFER buffer object binding point and the pointer argument is not NULL.  \n\nWe don\'t need to understand most of them, but just by skimming we get a sense of\nthe allowed values for the arguments. We will immediately find an important piece\nof information:\n\nGL_INVALID_VALUE is generated if index is greater than or equal to GL_MAX_VERTEX_ATTRIBS.\n\nIn other words, our index must be less than GL_MAX_VERTEX_ATTRIBS.\nWhat is this magic constant? Well, it\'s hardware dependent. Generally, it is 16\non most machines, but to check for ourselves, we can look at the associated gets\nat the bottom of the doc, which leads us to the docs with the different get functions.\nWhich Get we use doesn\'t matter, but looking at the description for our\nconstant, we will find: \n\nGL_MAX_VERTEX_ATTRIBS\ndata returns one value, the maximum number of 4-component generic vertex attributes accessible to a vertex shader.\nThe value must be at least 16.\n\nSo we know that 16 is a safe assumption. To check for our hardware we can inspect\nthe value ourself: \nlet mut max_attributes = 0;\ngl::GetIntegerv(gl::MAX_VERTEX_ATTRIBS, &amp;mut max_attributes;\nprintln!("max_attributes}") //prints 16\n\nWhich means that we can only have 16 different vertex attributes, which then\noccupy the locations 0 - 15. \nThe next parameter is the confusingly named size. It has nothing to do with\nsize, but is just the number of components for a specific attribute. Our position\nhas an X, Y and Z value, so it has 3 components(it\'s a vec3) to describe the position of a\nsingle vertex. It could be 1, 2, 3, 4 or a special constant GL_BGRA(only\nrelevant for Direct3D compatibility).\nThe type will usually be floating point, which is also the case for our position.\nHowever, there are more types available like basic types like GL_BYTE, GL_INT, to more esoteric ones like GL_INT_2_10_10_10_REV. The latter is relevant for attributes like normals, which don\'t need the whole bit depth available, but\ncould store their components in a single 32 bit value(10 bits each for X, Y and Z and 2\nbits for a potential W) . However,\nglVertexAttribPointer will always convert integers to floats! We would need to\nuse glVertexAttribIPointer to get integers.\nThe normalized parameter is only relevant if our vertex input data is made out of \nintegers. If it\'s false, it will convert them via a c-style cast to floats, taking the values as they are, "putting a .0 behind them".\nIf it\'s true, it will map signed values from [-max, max] to [-1.0, 1.0] and\nunsigned ones from [0, max] to [0.0, 1.0], with the power of math. The actual\nmath behind it depends on the OpenGL version. So as an example, it will\nturn the byte 128 into either 128.0(GL_FALSE), or 0.5(GL_TRUE).\nFor floating points(as with our position), it is irrelevant.\nThe stride value describes the bytes between each subsequent value of the\nattribute. So basically the bytes between position_for_vertex_0 and\nposition_for_vertex_1, .. It is a constant, so the stride must be the same for\nall values for an attribute in the vertex stream. Since we only have our position for now, we are\nrunning into a special case where the data is tightly packed, but also\ninterleaved. So to make things simple, we just use a stride of 0. A stride of 0\nmeans that OpenGL should figure it out(by making the stride essentially the size\nof the byte size of a single vertex attribute value).\nFinally, we come to the "pointer" attribute, which is an awkward pointer because\nthis function is being reused. It was used to pass the pointer to vertex data\nbefore vertex buffers were invented, but in "modern" OpenGL it\'s just a relative byte offset to\nthe first value of our attribute inside that buffer. Our buffer starts with\nour positions, so this is just another 0, albeit an awkwardly cast one, or just\na null pointer.\nSo in code, it means: \ngl::VertexAttribPointer(0, 3, gl::FLOAT, gl::FALSE, 0, std::ptr::null());\n// alternative with "proper" casting\ngl::VertexAttribPointer(0, 3, gl::FLOAT, gl::FALSE, 0, (0 as *const usize).cast());  \n\nHowever, to finally use it, we need to enable it.\ngl::EnableVertexAttribArray(0);\n\nThis is necessary to make the attribute actually being recognized by the shader\nlater. Both of these functions are state associated with our bound VAO.\nOne final step is missing.\nHow does the VAO know which buffer to use? \nWe need to bind a buffer as GL_ARRAY_BUFFER target, before we call glVertexAttribPointer!\nAfterwards, we can unbind the VBO or bind a completely different one, or keep it\nbound, the VAO won\'t change the binding, unless we also call glVertexAttribPointer\nagain.\nSo it makes sense to pass the vbo to our function to bind it(even if it is already\nbound since we never unbound it), just to avoid potential issues with the global\nstate machine(we don\'t want to accidentally bind the wrong VBO).\nSo the final function should look like this:\nfn create_vao(vbo: gl::types::GLuint) -&gt; gl::types::GLuint {\n    let mut vao = 0;\n    unsafe {\n        gl::GenVertexArrays(1, &amp;mut vao);\n        gl::BindVertexArray(vao);\n        gl::BindBuffer(gl::ARRAY_BUFFER, vbo);            \n        gl::VertexAttribPointer(0, 3, gl::FLOAT, gl::FALSE, 0, std::ptr::null());\n        gl::EnableVertexAttribArray(0);\n    }\n\n    vao\n}\n\nAlso, let us not forget to actually call this function with our vbo: \n//..\n    let vbo = create_vbo(&amp;QUAD_VERTICES);\n    let vao = create_vao(vbo);\n//..\n\nThat\'s it! Also, notice how we never specified the vertex count nor byte size\nfor the attribute. They only have a start in the buffer. Only when we draw later\nwill we tell OpenGL how many vertices we want to draw.\nThe New Way\nAs we noticed, OpenGL relies on the global state machine to make the association\nwith a buffer and a vertex attribute. Not just that, but the attribute\ndefinition, or the vertex layout as a whole, is directly tied to the storage. \nIf we have two different buffers for two different meshes, with the same\nlayout(just the positions packed together), we would need to do the whole\nglVertexAttribPointer nonsense again. Surely, there must be a way to just define the layout separately from the actual data, right? \nWell, enter OpenGL 4.3.\nOpenGL 4.3 introduced a new set of functions that split the data source from\nthe attribute layout. Instead of the glVertexAttribPointer, we call\nglVertexAttribFormat to describe the attribute. This function comes with the same set of friends, the "normal", the L and the I variants, just as its predecessor.\nThe parameters are the same as before. We specify the attribute index, the\ncomponents, the type and whether it is normalized. The only difference is that\nthe stride parameter is gone and lo and behold, we don\'t need to cast for the\nrelative offset anymore. It takes in a GLuint instead of a weird pointer.\nAlso, it is not a relative offset into the buffer anymore, but a relative offset\nto the start of the attribute itself.\nSimple example: \nImagine we have a jumbo-buffer containing the vertex attributes for a "Mr.\nPotatohead" at the start of the buffer, followed by lots of nonsense, then the\ndata for a magnificent "Robert E. O. Speedwagon"-model. Both use the same\nlayout, that is the first attribute in their layout is the position, then their\nnormals, then their color, etc.. So the relativeoffset for their position is both 0, for their normals is the byte size of the position attribute(s), and their color is the byte size of the positions and the normals. \nWhere the actual Potatohead and the Speedwagon start is done later.\n//old\n//gl::VertexAttribPointer(0, 3, gl::FLOAT, gl::FALSE, 0, std::ptr::null());\n//new\ngl::VertexAttribFormat(0, 3, gl::FLOAT, gl::FALSE, 0);\n\nUnfortunately the documentation is a bit wonky, since it describes relativeoffset as: \n\nThe distance between elements within the buffer.\n\nIt is more correct later in the docs: \n\nrelativeoffset is the offset, measured in basic machine units of the first element relative to the start of the vertex buffer binding this attribute fetches from.\n\nOpenGL is weird.\nNow, to specify the Buffer, we need to call glBindVertexBuffer.\nImportant to notice is that bindingindex has nothing to do with our attribute\nindex. Instead, we will bind our buffer to this index.\nThen we just specify our buffer(no more need to bind it anymore!).\nThen the offset to the first element in the buffer for out layout. \nThis is what points to the first attribute of Potatohead or Speedwagon in our\njumbo buffer, and we still don\'t need to use a pointer, isn\'t that amazing?\nFinally, there is the stride again, keeping its meaning. It tells how many\nbytes are between the different vertices. That is the bytes between Position0\nand Position1, and so on.\nThe great thing about the stride being decoupled from the attribute format, is that we\nset it on a per-buffer base. Some buffers store them interleaved, others don\'t,\nour format doesn\'t care how it\'s stored, it is something that the buffer binding\nshould take care of.\nOne bummer is that a stride of 0 doesn\'t mean packed anymore, but we are now\nrequired to pass it to the function ourselves. One benefit is that a stride of\nzero means really zero, so we could provide "default values" for layouts that\ndon\'t provide the attributes. They wouldn\'t "advance" anymore.\nSo for us it means: \n//the distance to the next vertex is always size of a single position(3 * size of f32).\ngl::BindVertexBuffer(0, vbo, 0, std::mem::size_of::&lt;f32&gt;() as i32 * 3); \n\nThe only step missing is to tell OpenGL which bindingindex belongs to which\nattribute. So we just call\nglVertexAttribBinding.\ngl::VertexAttribBinding(0, 0); //attribute 0 uses the buffer at bindingindex 0\n\nKeep in mind that we still need to enable the attribute, just like before.\nSo the function using the new way looks like this: \nfn create_vao(vbo: gl::types::GLuint) -&gt; gl::types::GLuint {\n    let mut vao = 0;\n\n    unsafe {\n        gl::GenVertexArrays(1, &amp;mut vao);\n        gl::BindVertexArray(vao);\n\n        gl::EnableVertexAttribArray(0);\n        gl::VertexAttribFormat(0, 3, gl::FLOAT, gl::FALSE, 0);\n        gl::VertexAttribBinding(0, 0); \n\n        gl::BindVertexBuffer(0, vbo, 0, std::mem::size_of::&lt;f32&gt;() as i32 * 3); \n    }\n\n    vao\n}\n\nI know, this looks boring with just one attribute. It will all unfold once we\nadd more attributes later, but let us first draw this dang triangle by executing\nfunny programs on our GPU that are called shaders :)\n',id:"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/",title:"Vertex Attributes"},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/":{body:"",id:"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/",title:"Hello Triangle V2"},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{body:"So far we only used winit and raw-gl-context for our window and context\ncreations. However, to be certain that our current abstraction works with\ndifferent context providers, we will try glfw.\nGLFW stands for Graphics Library Framework and is a lightweight solution to\ncreate a window and OpenGL/Vulkan context. \nIn C++ it's one of the most common solutions in addition to SDL2.\nWell, let's see how our abstraction works with this C-based library.\nFirst of all, we need to follow the prerequisites as described on the crates.io\npage and actually install GLFW\non our machine. I use Arch by the way, so I only had to call:\npacman -S glfw\n\nbut your mileage may vary.\nThen we add it to our cargo.toml as another dev-dependency, disabling the\ndefault-features again(unless you need wayland support): \n\ncac_graphics/context/Cargo.toml\n#alternative window and context creation\nglfw = { version = \"0.*\", default-features = false }\n\n\nNow, we can pretty much yoink the sample code, just how we did with winit.\nHowever, I added some window hints to make sure we get suitable context, and I\nalso made it a debug context, to make sure we get (more) debug messages with our\ncallback.\nAlso, we don't need event handling, so I just checked for ESC to close the window and removed the event handler\n Note \n Because I am using a tiling window manager, I make the window not resizeable.\nThis has the effect that the window \"pops out\" of the tiles and is floating on\ntop.  \nInstead of putting it into main, I rename our existing one to winit_main and\nthis new one glfw_main, so that we can toggle between them in our actual main.\nuse glfw::{Action, Context, Key};\n\nfn glfw_main() {\n    let mut glfw = glfw::init(glfw::FAIL_ON_ERRORS).unwrap();\n\n    // Create a windowed mode window and its OpenGL context\n    // window hints have to be set before the window is created\n    glfw.window_hint(glfw::WindowHint::ContextVersion(4, 3));\n    glfw.window_hint(glfw::WindowHint::OpenGlProfile(\n        glfw::OpenGlProfileHint::Core,\n    ));\n    glfw.window_hint(glfw::WindowHint::OpenGlDebugContext(true));\n    glfw.window_hint(glfw::WindowHint::Resizable(false));\n\n    let (mut window, events) = glfw\n        .create_window(300, 300, \"Hello this is GLFW\", glfw::WindowMode::Windowed)\n        .expect(\"Failed to create GLFW window.\");\n\n    window.set_key_polling(true);\n    window.make_current();\n\n    while !window.should_close() {\n        glfw.poll_events();\n        for (_, event) in glfw::flush_messages(&amp;events) {\n            if let glfw::WindowEvent::Key(Key::Escape, _, Action::Press, _) = event {\n                window.set_should_close(true)\n            }\n        }\n    }\n}\n\nIf all went well, running it should open a little window.\nNow we implement our GLContext trait over a newtype again. GLFW is one of the\naforementioned dependencies that actually require mutability for swap_buffers\nand get_proc_address, so our foresight paid off!\n\ncac_graphics/context/examples/playground.rs\nstruct GLFWContext(glfw::Window);\nimpl opengl::GLContext for GLFWContext {\n    fn swap_buffers(&amp;mut self) {\n        self.0.swap_buffers()\n    }\n\n    fn get_proc_address(&amp;mut self, name: &amp;'static str) -&gt; *const std::ffi::c_void {\n        self.0.get_proc_address(name)\n    }\n}\n\n\nNow we try to do the same with did before: We try to create our context after\nmaking the GLContext current.\nlet mut context = opengl::Context::new(GLFWContext(window))?;\n\nHowever, now we run into an issue: glfw gives us a window, which also acts as\ncontext. If we were to transfer ownership, we wouldn't be able to use the window\nanymore.\nRust throws at us: \nerror[E0382]: borrow of moved value: `window`\n   --&gt; context/examples/playground.rs:204:12\n    |\n195 |     let (mut window, events) = glfw\n    |          ---------- move occurs because `window` has type `glfw::Window`, which does not implement the `Copy` trait\n...\n202 |     let context = opengl::Context::new(GLFWContext(window))?;\n    |                                                    ------ value moved here\n203 |\n204 |     while !window.should_close() {\n                 ^^^^^^^^^^^^^^^^^^^^^ value borrowed here after move\n\nLet's take a moment to appreciate the amazing error messages that Rust provides.\nWell, it makes sense. We can't move ownership when we are using the object\nafterwards. There are two possible solutions.\nWe either do what Rust-programmers hate and use shared mutable ownership, also known as good ol' Rc&lt;RefCell&lt;T&gt;&gt;, so our\nwindow and context can co-exist, or we add another function to expose the\n\"inner context\" somehow.\n Note \n Actually, GLFW allows us to create a RenderContext from the Window, which we\ncould pass to our Context with no problems. Its intended use is for sharing the\ncontext between threads, so it would be kinda a misuse. We would also need to\nexpose something else to load the function pointers. Exposing the \"inner\"\nfield seems to be the better alternative.  \nWhile this is probably one of the few cases where Rc&lt;RefCell&lt;T&gt;&gt; is not that\nbad, since the overhead is negligible(just a few calls per frame) and since we\nare limited to the main thread anyway, and there should never be a borrow issue,\nexposing the inner field seems to be valuable in general.\nSo let's just add this function to our Context: \n\ncac_graphics/context/src/opengl.rs\npub fn raw_context(&amp;mut self) -&gt; &amp;mut C {\n    &amp;mut self.gl_context\n}\n\n\nand then adjust the calls in our main. While we are at it, let's add our OpenGL\ncalls as well: \nfn glfw_main() -&gt; anyhow::Result&lt;(), anyhow::Error&gt; {\n\n    //..\n\n    let mut context = opengl::Context::new(GLFWContext(window))?;\n\n    unsafe {\n        gl::ClearColor(1.0, 0.0, 0.0, 1.0);\n    }\n\n    #[rustfmt::skip]  //skip the default formatting to make it cleaner\n    const QUAD_VERTICES: [f32; 3 * 4] = [\n        //     X,    Y,   Z    Position\n        -0.9, -0.9, 0.0, // bottom left\n        -0.9,  0.9, 0.0, // top left\n        0.9,  0.9, 0.0, // top right\n        0.9, -0.9, 0.0, // bottom right\n    ];\n\n    let vbo = create_vbo(&amp;QUAD_VERTICES);\n    let vao = create_vao(vbo);\n    let shader_program = create_shader();\n\n    unsafe {\n        gl::UseProgram(shader_program);\n        gl::BindVertexArray(vao);\n    }\n\n    while !context.raw_context().0.should_close() {\n        unsafe {\n            gl::Clear(gl::COLOR_BUFFER_BIT);\n            gl::DrawArrays(gl::TRIANGLE_STRIP, 0, 4);\n        }\n        context.update();\n\n        glfw.poll_events();\n        for (_, event) in glfw::flush_messages(&amp;events) {\n            if let glfw::WindowEvent::Key(Key::Escape, _, Action::Press, _) = event {\n                context.raw_context().0.set_should_close(true)\n            }\n        }\n    }\n    Ok(())\n}\n\nThere are some ways to make it a bit more ergonomic, like abusing Deref or\nchanging the GLContext trait, but it's literally just 2 calls, so we can marginally bear it without making anyone angry.\nNow, let's get rid of dem pesky GL calls in our playground.\n\nLink to the repository\n",id:"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/",title:"GLFW"},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/chapter/":{body:"We just yeeted all of our code into our playground, didn't care\nabout error handling, validating any input, nor care about cleaning up\nour resources and we have some potentially unsound holes in our design.\nThat we also have gl calls in our main loop is just the tip of the iceberg.\nHowever, this is how I generally like to tackle new things in programming: Explore the\nproblem in some throwaway program, then once I have a better idea of what I\nneed, I start thinking about proper data organization and abstractions.\nI feel like Rust's strict ownership rules really encourage this kind of\nthinking, or you end up rewriting your code later.\nEven when coming up with the API, the playground can serve as a way to get a feel for the ergonomics and usability. What good is an abstraction when we have to store or refer to our context as RenderContext&lt;Context=OpenGL, Texture=GLTexture, Buffer=GLBuffer, ..&gt; or store resources as concrete implementation dependent types, like a OpenGLBuffer, so that swapping our backend will force us to change the fields in dozens of structs, or we end up with heavy generics all over the place? \nSo let's go back to our triangle, and do it properly this time!\n",id:"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/chapter/",title:"Hello Triangle V2"},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{body:'We managed to weasel our way out of error handling so far. However, since we are\nnow entering the stage of proper abstractions, error handling is part of that.\nSo let\'s create an error module.\n Why not thiserror? \n We could use the thiserror crate, it\'s an amazing crate to avoid a lot of boilerplate, especially when it comes to all the conversion functions.\nHowever, adding proc-macro2 as a transient dependency seems a bit heavy. We are not\ngoing to do anything where we need to touch multiple error types or require\nnested errors, nor do we need any conversions, so there is not a lot of\nboilerplate that thiserror would save in our particular case.  \nOur Error Module\nWriting our own error types is fairly straightforward.\nWe use an Enum, and implement the Error trait, which also requires us to\nimplement Display and Debug. That\'s it.\n\ncac_graphics/context/src/error.rs\nuse std::fmt::Display;\n\n#[derive(Debug)]\npub enum Error {\n    //The Context doesn\'t fit the requirements\n    InvalidContext(String),\n}\n\nimpl std::error::Error for Error {}\n\nimpl Display for Error {\n    fn fmt(&amp;self, f: &amp;mut std::fmt::Formatter&lt;\'_&gt;) -&gt; std::fmt::Result {\n        match self {\n            Self::InvalidContext(error) =&gt; write!(f, "invalid context, caused by {error}"),\n        }\n    }\n}\n\n\nand add it to our lib.rs \npub mod error;\n\nThat\'s it. We will just add another variant to our enum and another message in\nthe Display implementation for new error types. The message itself follows the\nAPI guidelines of using lower case, with no trailing punctuation.\nWe also spit out an error message, which might depend on the specific context we\nare trying to create. It could make sense to split the InvalidContext error further, like\n"InvalidContextVersion" and such, or create dedicated error types for the\ndifferent context implementations(OpenGL, Vulkan, ..), but for now this "catch\nall" is enough. It\'s not like we would handle them differently. If one fails, we\njust try another one or we panic.\nNow back to our opengl.rs, we make the context creation fallible.\nRight now there are only 2 things that could fail: The context doesn\'t support\nour OpenGL version(must be &gt;= 4.3), or our function pointers are not\nloaded.\nSo we first check if we loaded the function pointers for a function that existed\nsince legacy OpenGL(glGet), then we use the same function to get the version\nof our context.\n//cac_graphics/context/src/opengl.rs\nimpl&lt;C: GLContext&gt; Context&lt;C&gt; {\n    pub fn new(mut context: C) -&gt; Result&lt;Self, Error&gt; {\n        //load all the OpenGL 4.3 function pointers\n        gl::load_with(|name| context.get_proc_address(name));\n\n\n        if !gl::GetIntegerv::is_loaded() {\n            return Err(Error::InvalidContext(String::from(\n                "failed to load OpenGL fn pointers",\n            )));\n        }\n\n        let mut version = (0, 0);\n        unsafe {\n            gl::GetIntegerv(gl::MAJOR_VERSION, &amp;mut version.0);\n            gl::GetIntegerv(gl::MINOR_VERSION, &amp;mut version.1);\n        }\n\n        if version.0 &lt; 4 || (version.0 == 4 &amp;&amp; version.1 &lt; 3) {\n            return Err(Error::InvalidContext(format!(\n                "version 4.3 required, received {}.{}",\n                version.0, version.1\n            )));\n        }\n\n        Ok(Self {\n            gl_context: context,\n        })\n    }\n    //..\n}\n\nSince OpenGL is forward compatible, we only have to check if the version is\nlower than 4.3. A context with the version 4.6 works perfectly fine, so would a\npossibly future 5.1. \nWe are just checking a single function pointer instead of all we need. That\nmeans our program will panic if a not-loaded function is called, but at that point there\nis something severely wrong with our bindings or the OpenGL library itself. \nTo be sure, we could hijack the loader function and check if the pointer is valid\nbefore returning it in the gl::load_with closure, but this will probably produce\nunsatisfactory results, since it does not seem to be guaranteed to return null\npointers on failure. For example, manually calling\ncontext.get_proc_address("EvenSpeedwagonIsAfraid") will return a non-null\npointer on my Linux machine. It is possible that it might behave differently on other devices/with\nother drivers. Maybe I am missing something here(really encourage some input on\nthat to edit this part!), but it doesn\'t seem reliable for our purpose.\nThanks to our clippy lints, the function looks noisy in our editor: \n\nWe could mute this noise, but we might as well just document our assumptions\nabout the error cases. On one hand, we will often need to change/rewrite the\ndocs, but on the other hand, nothing is more soul crushing than writing all the\ndocs at the end, which just increases the odds that we procrastinate on them.For now, we just\nbear it until we reach a point with our abstractions where we are happy, that is\nwhen removed all stray gl calls and unwraps() from our playground. We embrace the noise as a\nfeature, not a problem, like a little warning light we should deal with in the\nnear future, while we still have the failure cases in our head.\nIf you want to mute them for now, you can just add #[allow(clippy::missing_errors_doc)] before the function/struct, enable it for the entire module, or do it for the entire crate.\nDon\'t forget to adjust the playground.rs to make the error check. We change\nthe return value of our main to anyhow\'s Kirby-Result, and we use the ?\noperator on our construction. We ignore the unwraps() in the other parts for\nnow, because we will nuke our playground anyway in the near future, and we just\nwant to make sure that our error handling works.\nfn main() -&gt; anyhow::Result&lt;()&gt; {\n//...\n    let mut context = opengl::Context::new(gl_context)?;\n//...\n\nWe can test it by changing the requested version in the GlConfig, to make our context creation\nfail with:\nError: invalid context, caused by version 4.3 required, received 3.3\n\nIt\'s not the best message, but it does its job.\nFinally, there is one more thing we want to do:\nValidating our OpenGL calls.\nOpenGL Error Callback\nAs mentioned before, OpenGL relies on global state and constants. We don\'t have\nthe same type safety and guarantees as with Rust when we invoke gl calls.\nHowever, OpenGL offers tools to validate its state and the calls we make.\nThe old way was to poll the value of\nglGetError and check the status code.\nBecause polling the state after every single call is tedious, there are 2 common\ntraps used in practice. One is to poll the state at the end of the frame(since\nit\'s a queue it will not clear the previous errors) to check for errors in\ngeneral, and then in the debug step to manually insert it in the code to actually find the culprit.\nThe other trap is the use of macros to wrap all gl calls to automatic\npoll after the call, like GL_CALL(glClear(GL_COLOR_BUFFER_BIT)), which adds\nneedless verbosity and noise.\nGenerally, any OpenGL function binding generator worth its salt, allows the option for debug variants, which does the polling after invoking the actual function, so that the call site doesn\'t have to deal with it. They usually also come with debug callbacks. Our used gl_generator is not different.\nNowadays, even an OpenGL 3.3 context wants to generally check for the GL_KHR_debug\nor ARB_debug_output output extensions, which are supported on pretty much all\nhardware that came out in the past decade.\nWith 4.3 the functionality has been made core, so that we can just use\nglDebugMessageCallback, which will be automatically called once there is a GL\nerror. This might require a specific debug context, depending on the implementation. \nSo all we have to do is create the callback, which just logs the debug messages,\nand then enable it in our context creation. We will just use the log crate and\nlet the user deal with how they want to display them.\n\ncac_graphics/context/src/opengl.rs\nextern "system" fn debug_callback(\n    source: u32,\n    kind: u32,\n    id: u32,\n    severity: u32,\n    _length: i32,\n    message: *const i8,\n    _user_param: *mut std::ffi::c_void,\n) {\n    let source = match source {\n        gl::DEBUG_SOURCE_API =&gt; "API",\n        gl::DEBUG_SOURCE_SHADER_COMPILER =&gt; "SHADER COMPILER",\n        gl::DEBUG_SOURCE_WINDOW_SYSTEM =&gt; "WINDOW SYSTEM",\n        gl::DEBUG_SOURCE_OTHER =&gt; "OTHER",\n        gl::DEBUG_SOURCE_APPLICATION =&gt; "APPLICATION",\n        gl::DEBUG_SOURCE_THIRD_PARTY =&gt; "THIRD PARTY",\n        _ =&gt; "UNKNOWN",\n    };\n\n    let kind = match kind {\n        gl::DEBUG_TYPE_ERROR =&gt; "ERROR",\n        gl::DEBUG_TYPE_DEPRECATED_BEHAVIOR =&gt; "DEPRECATED",\n        gl::DEBUG_TYPE_UNDEFINED_BEHAVIOR =&gt; "UNDEFINED BEHAVIOUR",\n        gl::DEBUG_TYPE_PORTABILITY =&gt; "PORTABILITY",\n        gl::DEBUG_TYPE_PERFORMANCE =&gt; "PERFORMANCE",\n        _ =&gt; "UNKNOWN",\n    };\n\n    let error_message = unsafe {\n        std::ffi::CStr::from_ptr(message)\n            .to_str()\n            .unwrap_or("[FAILED TO READ GL ERROR MESSAGE]")\n    };\n\n    match severity {\n        gl::DEBUG_SEVERITY_HIGH =&gt; log::error!("{id}: {kind} from {source}: {error_message}"),\n        gl::DEBUG_SEVERITY_MEDIUM =&gt; log::warn!("{id}: {kind} from {source}: {error_message}"),\n        gl::DEBUG_SEVERITY_LOW =&gt; log::info!("{id}: {kind} from {source}: {error_message}"),\n        gl::DEBUG_SEVERITY_NOTIFICATION =&gt; {\n            log::trace!("{id}: {kind} from {source}: {error_message}");\n        }\n        _ =&gt; log::trace!("{id}: {kind} from {source}: {error_message}"),\n    };\n}\n\n\nIt looks kinda verbose, but we just banish it at the bottom of our module and\nforget about it.\nAll we do is turning all the weird constants(which\nare just numbers), into readable &amp;str\'s. The CStr::from_ptr is unfortunate\nthough, because we only get an i8 pointer for the message.. It should be\nnull-terminated by default, so we can ignore the message length and in the worst\ncase just have some message that tells us that the conversion failed.\nFinally, we use the severity for the different log levels.\nAnd in our new-function we enable it with: \n//cac_graphics/context/src/opengl.rs\npub fn new(mut context: C) -&gt; Result&lt;Self, Error&gt; {\n    //...\n    unsafe {\n        gl::Enable(gl::DEBUG_OUTPUT);\n        gl::DebugMessageCallback(Some(debug_callback), std::ptr::null());\n    }\n    Ok(Self {\n        gl_context: context,\n    })\n}\n\nLater, we can use environment variables, feature flags or profiles to\nconditionally enable it.\nSo, let\'s run our program and we see... nothing.\nThe reason is that we still need to use a logging implementation to actually log\nthe messages. In the context creation chapter, we added the env_logger\ncrate for this, but any other logger, like simple_logger, fern, log4rs,\netc. work. env_logger is simple and it\'s easy to modify with environment\nvariables.\n//cac_graphics/context/examples/playground.rs\nfn main() -&gt; anyhow::Result&lt;()&gt; {\n    env_logger::Builder::from_env(env_logger::Env::default().default_filter_or("warn"))\n        .format_timestamp(None)\n        .init();\n\n//...\n}\n\nWe use a default level to log everything above "warn", which means either\n"warnings" or "error". But we could change this by using the environment\nvariable RUST_LOG. For example, to get more information, we could just run\nRUST_LOG="context=trace" cargo run --example playground\n\nto print all log levels for the crate "context"(our crate).\nTo verify whether it is working, we can change to just trace and see some output\nfrom winit: \n\nDepending on your driver, you might see some log like:\n UNKNOWN from API: Buffer detailed info: Buffer object 1 (bound to GL_ARRAY_BUFFER_ARB, usage \nhint is GL_STATIC_DRAW) will use VIDEO memory as the source for buffer object operations.\n\nWorry not, it\'s not an error, just some info.\nNow, let\'s add an actual error in our playground to test the message callback.\nWe make a reasonable error. When we want to clear the color of\nour screen, we accidentally use the wrong constant, because there is no\ntype-safety. \n\ncac_graphics/context/examples/playground.rs\n//...\n    unsafe {\n        //Spoiler: This should have been COLOR_BUFFER_BIT instead, what a silly error\n        gl::Clear(gl::COLOR);\n    }\n\n\nNow we run it again, and boom goes the dynamite: \n\n"Invalid clear bits", there we go.\nIt tells us what went wrong, it is kinda pretty, albeit spammy(because it\'s in a loop), it is everything we want.\nNow, let\'s get back to that GLFW-thingy.\n Warning \n Since our current context dependency doesn\'t allow us to create a specific\nOpenGL debug context, it is possible that there are different or no messages at\nall, depending on your platform. We will take care of this in the next chapter.  \n\nLink to the repository\n',id:"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/",title:"Error Handling"},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{body:"The first thing we have to think about is our context itself.\nDo we want the ability to select it during runtime, or is hard-wiring it during\ncompilation fine?\nIs there a closed set of contexts, or should there be the\nability to potentially create specialized contexts from the outside? \nThen there is the whole mess with the global state machine and binding \nresources, which are more or less unique to OpenGL.\nThere are dozens of questions, some more relevant than others. Many of them\ncould be answered with YAGNI(\"You Aren't Gonna Need It\"), at least right now.\nWe start simple, then try to figure out if/how it works out with some more\nadvanced examples.\nAlso, just because we go with one approach doesn't mean we can't adjust our\narchitecture down the road. In fact, it is almost guaranteed.\nAfter a bit of back and forth and sketching different approaches in our\nplayground, we decide that it is fine to have the context being defined during\ncompile time. Rust's amazing enums will allow us to use static dispatch later as\nwell, so it will be no problem to define fallback backends. \nThe compile time approach has the benefit that we can have per-implementation\nconfigurations. Our OpenGL context for example can require anything with a\nproc-address to load the function pointers, while wgpu is fine with something\nthat uses raw-window-handle.\nSo, let's start with the simplest thing first. We define an OpenGL\ncontext.\nSo we add the file opengl.rs to the src of our context, to create out \"OpenGL\nContext\"\n\ncac_graphics/context/src/opengl.rs\npub struct Context {\n}\n\n\nMy ability to name things is laughable, so feel free to use whatever\nname you prefer. To follow Rust's\nAPI-Guidelines, we avoid the \"OpenGL\" prefix for this struct, since it's already the module name.\nLet's not forget to add this module to our lib.rs:\n\ncac_graphics/context/src/lib.rs\npub mod opengl;\n\n\nThe creation of a window and the actual OpenGL-context are closely related, and\non certain platforms, the window has to be created with specific GL attributes\nin mind.\nFor that reason, we only require the bare necessities to create our graphics\ncontext and let the user pick whatever window / OpenGL context creation\ncombination they want. We used winit and raw-gl-context in our playground, but anything that allows\nus to load OpenGL functions should work, for example glutin, glfw, or SDL2.\nThis has the huge benefit that the OpenGL abstraction is completely platform\nindependent. We can always add abstraction layers for the GLContext later, or\njust integrate the common ones via feature flags.\nThere is an argument to be made to make our graphics Context take ownership\nof the GLContext, to make sure our own context will not outlive the GLContext.\nThis is less about the function pointers, but more about the OpenGL objects\nhaving their lifetimes being tied to the context itself. Taking ownership of the\nGLContext means that our own Context also takes ownership over the GL objects!\nThere are other ways to archive this, but we are probably never going to do anything else but calling swap buffers on the\ngl_context. Maybe making it (not) current later, but making the changes for that\nare trivial.\nSo with this in mind, we abstract the GLContext via a trait and store it in our\ngraphics Context via a generic:\n\ncac_graphics/contest/src/opengl.rs\nuse crate::gl43_core as gl;\n\npub trait GLContext {\n    fn swap_buffers(&amp;mut self);\n    fn get_proc_address(&amp;mut self, name: &amp;'static str) -&gt; *const std::ffi::c_void;\n}\n\npub struct Context&lt;C: GLContext&gt; {\n    gl_context: C,\n}\n\nimpl&lt;C: GLContext&gt; Context&lt;C&gt; {\n    pub fn new(mut context: C) -&gt; Self {\n        gl::load_with(|name| context.get_proc_address(name));\n        Self {\n            gl_context: context,\n        }\n    }\n\n    pub fn update(&amp;mut self) {\n        self.gl_context.swap_buffers();\n    }\n}\n\nTechnically, our trait function and also the update() function don't have to take a mutable self\nright now. However, we use the power of foresight to know that we will\ndefinitely fiddle with the context state here at some point, and we also assume\nthat some context implementations treat swap_buffers as a mutable operation.\nNow we need to adjust our playground.rs.\nOur playground sees our own crate as an external one, which is the point of examples.\nThey should show how you use the crate from the point of view of a user.\nSince we are making the abstraction via a trait, and we want the external\nraw-gl-context to implement that trait, we are violating the orphan rule. \nimpl opengl::GLContext for GlContext {  \n// Error: only traits defined in the current crate can be\n// implemented for types defined outside of the crate\n// define and implement a trait or new type instead\n} \n\nThis rule prevents us implementing external traits on external structs. The\nreason for that is that two crates could implement the same trait on the same\nstruct with different implementations, and the compiler wouldn't know which one to pick.\nRust's error messages are useful as always and tell us the solution without a\nspoiler warning. We need to use the New Type Idiom.\nIt's just a tuple struct wrapping our intended struct. It's now our own type,\ncontaining the external one.\nstruct GLContext(GlContext);\n\nNow we can implement the trait for our new type: \nimpl context::opengl::GLContext for GLContext {\n    fn swap_buffers(&amp;mut self) {\n        self.0.swap_buffers();\n    }\n\n    fn get_proc_address(&amp;mut self, name: &amp;'static str) -&gt; *const std::ffi::c_void {\n        self.0.get_proc_address(name)\n    }\n}\n\nAnd adjust our main: \n{% code(name=\"cac_graphics/context/examples/playground.rs\") %}\nuse context::{gl43_core as gl, opengl};\n\n//..\n\n//create a context from the existing winit window\nlet gl_context = GlContext::create(\n    &amp;window,\n    raw_gl_context::GlConfig {\n        alpha_bits: 0,\n        version: (4, 3),\n        profile: raw_gl_context::Profile::Core,\n        ..Default::default()\n    },\n)\n.unwrap();\ngl_context.make_current();\nlet gl_context = GLContext(gl_context);\n\nlet mut context = opengl::Context::new(gl_context);\n\n//..\n\n// replace gl_context.swap_buffers() in the event_loop with \ncontext.update();\n\n\nRunning it shows that everything is dandy.\nOur solution has the advantage that our context can control when\nswap_buffers() should happen, so that it can do calls before and after it(important\nbecause of the implicit glFinish in swap_buffers). Granted, it is a bit verbose, but we can\njust implement the trait for specific context crates later, avoid the New Type\nand put them behind a feature flag.\nHowever, certain context implementations treat the context just as a global, and\nthere is not a lot we can do about that, except praying that the GLContext will\nalways outlive ours(spoiler, it won't. Changing the window mode is\nusually enough to destroy the context). We could fiddle with some check that\nprobes whether an object still exists and then invalidate all \"references\" to the\nobjects, but for now, let us just avoid this stuff.\nSome other context implementations tie the GLContext to a window(e.g. glfw-rs),\nand we really don't want to deal with Window nonsense in our context.\nSome things might make sense, a window is just like a canvas after all, but taking control of the main loop or dealing with\ninput and device events are definitely out of the scope of a small render\ncontext. We are going to try glfw soon, to check if our abstraction works.\nSo far, we just created the context without any validations, so let's change that. \nNow is also a great time to start with proper Error-types.\nAt this point, adding all the source files at the bottom of\nevery page, is becoming a bit too cumbersome. So I will just add the link to the\nrepository with the code from now on.\n\nLink to the\nrepository\n",id:"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/",title:"The GL Context"},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{body:"We can finally start moving the raw GL calls into proper abstractions, being ideally backend\nagnostic. \nBefore we start with the actual GL calls, we can put our current update()\nfunction into an abstraction first. We are certain that all backends will use\nsome sort of update function. So we might as well start with that.\nRight now, our update function, which just swaps buffers on our context for now,\nis tied to our opengl::Context. Let's create a trait that\nwill be shared by all the different implementations.\nAs I mentioned before, my naming skills are as great as my art skills - just\ndreadful. So it's no surprise that this shared trait, that is the namesake for our\ncrate, will just be boringly called Context.\nBecause it is such an integral part of this crate, we might as well write it\ninto our lib.rs, since there is very little reason in creating a dedicated \nmodule, except for being a laughingstock for adding yet another thing called context into this madness.\nHey, at least we can just use RustAnalyzer's code actions to rename them\nautomatically, once we hit a creative spark.\n\ncac_graphics/context/src/lib.rs\npub trait Context {\n    fn update(&amp;mut self);\n}\n\n\n(Geez, at least call this ContextTrait or something..)\nNow we go to our opengl::Context\nAnd implement this trait by extracting the already existing update function into\nit.\nimpl&lt;C: GLContext&gt; crate::Context for Context&lt;C&gt; {\n    fn update(&amp;mut self) {\n        self.gl_context.swap_buffers();\n    }\n}\n\nDon't forget to import it in our playground.rs\nuse context::{gl43_core as gl, opengl, Context as _};\n\nThe reason we use the as _ is that we don't need to refer to the trait via\nits name, but since it is a trait, we need to bring it into the scope to use it.\nThe advantage is that we avoid potential name clashes, like the already existing \nuse glfw::Context. Naming things is hard.\nAnd that's it, everything should still work.\nRenderTarget\nThe next functions on the agenda are glClear and glClearColor.\nOn the first glance, they look straight forward, we just add the functions to\nthe trait in our lib.rs and pass the required arguments to them. After giving it a bit of\nthought, we come to the conclusion that things are not quite that simple.\nWe don't want to tie our context to a specific API, the whole point of this abstraction is to be\nAPI-agnostic. We want to leave the global state machine of OpenGL!\nNot just that, but what if we don't want to clear the screen, but another\ntarget, like a texture we are rendering to? Or not even the whole screen, but\nonly a small part of it? \nSo our first abstraction should be some sort of RenderTarget. Our canvas if\nyou will. We will pass it to the draw call later, together with the shader and\nVAO and what not. The caller should not care how the context does it, all that\ncounts is the result; drawing to whatever is passed as target.\nWe also don't want to have to constantly clear the screen on every single draw call either, but rather let the user decide when to and how to clear.\nSo the best way to deal with that, would be a dedicated struct that represents\nour render target. We get rid of the global scope, the user can copy and store\nit, and use it to clear whenever they want.\nLet's just add a render_target.rs to our source files, with some naive\ndefinition.\n\ncac_graphics/context/src/render_target.rs\npub struct RenderTarget {\n    pub clear_color: Option&lt;(f32, f32, f32, f32)&gt;, \n}\n\nimpl RenderTarget {\n    pub fn clear(&amp;self) {\n        //TODO: clear\n    }\n}\n\n\nDon't forget to add it to our lib.rs.\npub mod render_target;\n\n Note \n Instead of always creating the file and then adding the module to the lib.rs, I usually just\nadd the module first and use the amazing RustAnalyzer to automatically create the file.  \nHowever, how are we actually going to clear?\nIn fact, how can we make the connection to the actual context?\nSounds like a job for some generics!\nActually, I used the current playground to sketch around with different\nsolutions. From having actual associated types to get the backend-specific\ntypes or wrappers, to plain enums or shoving every single function into a single context\ntrait, or a dozen different traits on the context. None of that felt really\ngood, some even were tedious. Ultimately, I ended up with \"passing around the\ncontext\" as the most ergonomic solution, so let's take a look at that. Chances are that we might need to refactor, but\nlet's first give it a try.\nFirst we need some sort of trait bound, so we can call the actual \"context\nspecific functions\". Our root context trait might be the first\nto consider, but using the power of foresight again, we know that we would be\nworking towards some mega-trait, if we shove everything into that one.\nIt's not just the RenderTarget, but probably a dozen functions for every single GL object, all kinds of draw\nfunctions, etc. This is fine in theory, but incredibly unwieldy when we actually\nimplement it.\nAnother issue is the naming of the functions. For example, a simple create() could\napply to every single GL objects, and we also probably want to have different create\nfunctions with different parameters, so we might end up with humorously long\nnames, like create_buffer_with_f32(), create_vertex_buffer_from_slice, etc.\nThere is no easy way to group the functions belonging to that buffer, unless we\nlook at the parameters and/or return value, or we use some weird naming\nconventions, like starting all functions with a prefix, like\nbuffer_create_vertex_buffer_from_slice.\nOn the other hand, having too many smaller traits is annoying when\nit comes to actually using the functions, because traits need to be in scope.\nHaving a single Context-trait is fine, but always importing a dozen is a drag.\nThe issue is even enhanced when there is a naming clash. \nWe are trying to find a middle ground, by using smaller traits, but not force\nthem to be exposed to the user. In fact, our abstractions will use trait bounds\nonly on the small subset of traits they need, but there won't be any need to\nimport them, because we just relay the call inside our struct implementation.\nLet's add a little trait to our render_target.rs: \n//It's a different Context, I swear!\npub trait Context {\n    fn clear(&amp;mut self, target: &amp;RenderTarget);\n}\n\nAnd make the Context in the lib.rs require implementing that Context.\npub trait Context: render_target::Context {\n    fn update(&amp;mut self);\n}\n\nNow we can adjust our clear function in the RenderTarget impl: \nimpl RenderTarget {\n    pub fn clear&lt;C: Context&gt;(&amp;self, ctx: &amp;mut C) {\n        ctx.clear(self);\n    }\n}\n\nThis might look confusing and tedious to write.\nHowever, actual implementation per backend will be done just once after this point.\nThe alternative would be to use some sort of PhantomData, to make the entire struct contain the type information of the\nContext-implementation, but then we would \"infect\" all code trying to store or reference that type.\nFor example, our future game wants to store a RenderTarget in its struct of some sub-menu, like for some sort of a minimap.\nJust a little part of the main window.\nWe would need to make the sub-menu, the main menu owning that sub-menu, the game class owning that main-menu \nand so on, all be generic over that Context we created at the start of the main.\nI mean, sure, there are far worse things to do, but there is no reason to\nnot contain this virality to just the code base that needs to know.\nAnd this ignores potential technical roadblocks, like being able to switch the\nbackends during runtime rather than compile time. \nThis function just passes the responsibility to the Context implementation.\nSo all we need to do is to call my_target.clear(&amp;mut ctx) later.\nThe caller doesn't need to know how the clear works. The struct might contain\na handle to a native GL resource, just call an associated function with some\narguments or whatever else. \n Why not put the swap_buffers() into the RenderTarget as well? \n Since our RenderTarget is an abstraction for our \"canvas\", there might be an\nargument to add the swap_buffers() to \"update\" the screen to the\nrender_target::Context. However, this is an implementation detail, depending on the graphics backend. Some\nrequire us to do it, others don't. There is very little benefit in exposing this\nboring implementation detail to the user, especially because it comes with a lot\nof hidden implications, like stalling the thread to wait for the glFinish(). For\nnow, it works fine in the update function since it's a global operation.  \nNow we only need to implement this Context for our OpenGL-Context. We put it\ninto our opengl module for now, but we will definitely put this into a dedicated\nfile once we add more functions to it.\n\ncac_graphics/context/src/opengl.rs\nimpl&lt;C: GLContext&gt; render_target::Context for Context&lt;C&gt; {\n    fn clear(&amp;mut self, target: &amp;render_target::RenderTarget) {\n        if let Some(color) = target.clear_color {\n            unsafe {\n                gl::ClearColor(color.0, color.1, color.2, color.3);\n                gl::Clear(gl::COLOR_BUFFER_BIT);\n            }\n        }\n    }\n}\n\n\nThis implementation does two things. It sets the clear color AND does the\nclearing of the screen. There is very little reason in doing it the OpenGL way\nwith clear flags, when we can just check whether there is a color to clear or\nnot, via some sort of Option. Once we have other clear flags, like for the depth\nvalues, we can use Option for them as well. I don't think there will ever be a\ncase where we want a clear color, but not clear the target with it.\nThis might cause some performance penalty, given that we\nare always adding another GL-call when we clear, because we always set the color, even if it didn't change.\nOn the plus side we also have the opportunity to just cache the current global clear color and compare it with the\nnew one or use some sort of dirty flag on our RenderTarget, to make this\nconditional, if it ever becomes an actual performance issue.\nIn reality, this performance impact is negligible. The important thing is we got a lot of flexibility with the implementation that is hidden away from the caller. As mentioned before, this abstraction should work\nwith textures and whatnot later, so we can just add a handle to the\nRenderTarget struct to enable that when we are at that point.\nAll that is now left is the actual construction of a RenderTarget.\nSince the RenderTarget is not something that lives on the GPU, at least when it\ncomes to the \"Screen\", we can just have basic constructors. \nimpl RenderTarget {\n    pub fn new() -&gt; Self {\n        Self { clear_color: None }\n    }\n\n    pub fn with_clear_color(clear_color: (f32, f32, f32, f32)) -&gt; Self {\n        Self {\n            clear_color: Some(clear_color),\n        }\n    }\n}\n\nNo need for generics or trait bounds, at least for the simple case where we just\nwant to target the screen. The constructors seem a bit overkill given that we\njust have a single field, but it will be way more useful once we add more to this\nstruct.\nBack to our playground, we remove the raw glClearColor() and glClear calls\nwith our new RenderTarget. We also rename our context object, because we are\ngoing to pass it around a lot. So we will just shorten its name to ctx. \n//when we create the context\nlet mut ctx = opengl::Context::new(GLFWContext(window))?;\nlet screen = RenderTarget::with_clear_color((0.0, 1.0, 0.0, 1.0));\n\n//right before our DrawArrays inside the loop\nscreen.clear(&amp;mut ctx);\n\nNow, our background should be green. \nI agree that passing the context around might be a bit off-putting, especially\nwhen you are new to Rust. However, there is no real alternative in this case.\nHaving the constructor be part of the context works, sure, but then there is the\nissue of saving the struct. Having to store it as\nRenderTarget&lt;opengl::Context&gt; is more painful, imho. \nAnother viable alternative could be to avoid the immediate calls, and just queue up a\nbunch of graphics commands instead. This also adds some multi-thread potential,\nbecause the lists only store commands instead of executing an actual graphics API. \nOur actual Renderer will likely go that route, but for now, the immediate calls\nare sufficient.\nHowever, look at this hideous tuple for the color and its pretentious double parentheses.\nAt this point we might add some proper Colors struct.\nColors\nIt's only a tiny detour, I swear, we will go into the color space nonsense later,\nbut for now, having some simple abstractions for the colors instead of using\ntuples would be nice.\nSince Colors seems to be quite a commonly shared type, we put it into a new\npackage into our workspace, the one that should contain all sorts of utility and\ncommon behavior, the core package.\nSo inside our workspace root we create a new library\n#cac_graphics/\ncargo new --lib core\n\nThen we add it to our workspace, next to our context:\n\ncac_graphics/Cargo.toml\n[workspace]\nmembers = [\"context\", \"core\"]\n\n\nAnd finally, add it as dependency to our context: \n\ncac_graphics/context/Cargo.toml\n[dependencies]\n# ...\n#core utility, data structs, etc.\ncore = { path = \"../core\"  }\n\n\nNow we remove the junk in the lib.rs, add our trusty clippy lints and import the color module.\nWhile we are here, we will also re-export the upcoming Color\nstruct, because it is such a fundamental and commonly used type later, that it\nmight live in the root of our utility.\nOne thing first, there are different ways to represent colors.\nOpenGL requires floating points in the range of 0.0 - 1.0, but almost everyone will run into the\nu8 based colors in the 0-255 range at some point, so we might as well be clear now and give us room to add other types later.\nIn fact, it is almost guaranteed we will add them at some point(spoiler alert, when we are writing the automated tests).\nSo we call it color32, to signal we store 32 bits per channel.\nSo, what this all means, is:\n\ncac_graphics/core/src/lib.rs\n#![warn(clippy::nursery)]\n#![warn(clippy::perf)]\n#![warn(clippy::pedantic)]\n\npub mod color32;\npub use color32::Color32;\n\n\n Why not just a Color enum? \n True, differentiating the colors by their bits is a great use for enums.\nHowever, enums always assume the size of the biggest variant, which means our\nfuture Color8 will take as much size as the Color32 variant, making it 4x as big\nas it needs to be. This is especially painful, because the 8 bit variant is\ncommonly used when dealing with textures or pixel data, so the scale actually\nmatters, since we are in the tens of thousands if not more.  \nNow, let's add a simple struct to the color module: \n#[derive(Debug, PartialEq, Copy, Clone)]\n#[repr(C)]\npub struct Color32 {\n    r: f32,\n    g: f32,\n    b: f32,\n    a: f32,\n}\n\nWe just added some overall useful derives and made sure that we can send it over\nFFI(rept(C)), since we plan on using it with OpenGL later.\nNow a few functions to actually use and create the colors, following Clippy's\nadvice while we are at it, to make them const and [must_use]. Because they are unlikely to change, there is no need to postpone this.\nimpl Color32 {\n    #[must_use]\n    pub const fn from_rgb(r: f32, g: f32, b: f32) -&gt; Self {\n        Self { r, g, b, a: 1.0 }\n    }\n\n    #[must_use]\n    pub const fn from_rgba(r: f32, g: f32, b: f32, a: f32) -&gt; Self {\n        Self { r, g, b, a }\n    }\n\n    #[must_use]\n    pub const fn as_rgb(&amp;self) -&gt; (f32, f32, f32) {\n        (self.r, self.g, self.b)\n    }\n\n    #[must_use]\n    pub const fn as_rgba(&amp;self) -&gt; (f32, f32, f32, f32) {\n        (self.r, self.g, self.b, self.a)\n    }\n}\n\nThe \"weird\" naming for the constructors and hiding the channels is intentional\nand will make more sense later. The short story is that colors are actually\nin color spaces, and we want to follow Rust's philosophy of being explicit where it\nmatters. There should be no question about the used space, which is why they\nwill use different sets of \"getters\" and \"setters\" and just convert on demand.\nIt would be nice to have some constants for our colors, to avoid \nfiddling with the channels and be aesthetically more pleasing than bright red or\ngreen. So we just add some at the top of our impl: \nimpl Color32 {\n    /// Almost black with a touch of green\n    pub const DARK_JUNGLE_GREEN: Self = Self::from_rgb(0.102, 0.141, 0.129);\n    /// Grape like purple\n    pub const PERSIAN_INDIGO: Self = Self::from_rgb(0.20, 0.0, 0.30);\n    /// Dirty White\n    pub const GAINSBORO: Self = Self::from_rgb(0.79, 0.92, 0.87);\n    /// It's really nice to look at\n    pub const UNITY_YELLOW: Self = Self::from_rgb(1.0, 0.92, 0.016);\n\n    /// The Color Black\n    pub const BLACK: Self = Self::from_rgb(0.0, 0.0, 0.0);\n    /// The Color Red\n    pub const RED: Self = Self::from_rgb(1.0, 0.0, 0.0);\n    /// The Color Blue\n    pub const BLUE: Self = Self::from_rgb(0.0, 0.0, 1.0);\n    /// The Color Green\n    pub const GREEN: Self = Self::from_rgb(0.0, 1.0, 0.0);\n    /// The Color Yellow\n    pub const YELLOW: Self = Self::from_rgb(1.0, 1.0, 0.0);\n    /// The Color White \n    pub const WHITE: Self = Self::from_rgb(1.0, 1.0, 1.0);\n}\n\nI used some random online tool to find the\nnames of some colors I want. It provides the percentage of the channels, so the\nconversion is simple(just move the decimal to the front). Since the hamster\nbegins to hobble for me when it comes to art, I also add some comment\ndescribing the colors with my muggle eyes. Later we might add actual sample colors\nto the docs, but for now it should only make sense for us.\nThis all might seem to be better put into the user side of things, letting them\nimplement the colors they prefer, but I feel like having some common set of\ncolors inside the renderer itself is nice for some quick prototyping and\ntesting.\nNow we run back to our OpenGL stuff and update the render target to accept\nactual colors, to hide the hideous tuples:\n\ncac_graphics/context/examples/playground.rs\nlet screen = RenderTarget::with_clear_color(Color32::DARK_JUNGLE_GREEN);\n\n\n\ncac_graphics/context/src/render_target.rs\n#[derive(Copy, Clone)]\nuse core::Color32;\n//..\n\npub struct RenderTarget {\n    pub clear_color: Option&lt;Color32&gt;,\n}\n\nimpl RenderTarget {\n    pub fn with_clear_color(clear_color: Color32) -&gt; Self {\n        Self {\n            clear_color: Some(clear_color),\n        }\n    }\n    //..\n}\n\n\n\ncac_graphics/context/src/opengl.rs\nimpl&lt;C: GLContext&gt; render_target::Context for Context&lt;C&gt; {\n    fn clear(&amp;mut self, target: &amp;render_target::RenderTarget) {\n        if let Some(color) = target.clear_color {\n            let (r, g, b, a) = color.as_rgba();\n            unsafe {\n                gl::ClearColor(r, g, b, a);\n                gl::Clear(gl::COLOR_BUFFER_BIT);\n            }\n        }\n    }\n}\n\n\n\nMore than 2000 words in and we basically only cleared the screen.. Guess we will look\nat the GL objects in the next chapter.\n\nLink to the repository\n",id:"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/",title:"RenderTargets"},"https://breakbuild.dev/devlog/renderer/project_setup/":{body:"",id:"https://breakbuild.dev/devlog/renderer/project_setup/",title:"Project Setup"},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{body:'It makes sense that the first thing to do is actually setting up the project.\nI want to talk about my personal global settings first.\nPersonal Settings\nInside my project directory, but outside the actual workspaces and projects, I have a .cargo/config.toml for "global" configurations on my machine.\nThings like the linker(I\'m using mold), but\nalso the current build target. \nI found that mold helps with link times, but\nyour mileage may vary. However, specifying the target is a one stone two\nbirds kinda thing. It makes my editor less annoying when trying to write code\nfor another platform, because it is  marked as inactive otherwise. Not only is this\nmore noise, but it also disables the inline errors.\nBasically, turning this: \n\nInto this:\n\nI\'m using Neovim and its LSP with RustAnalyzer, so no clue if other setups run into similar problems.\nThere might be other ways, but the other benefit is to work around a specific cargo issue, that\nwould force a full rebuild of the dependencies when building for different\nplatforms, when rust flags are involved(e.g., when using the mold linker above).\nHaving this config outside the actual project workspaces makes sure that I don\'t pollute the actual repositories\nwith personal settings. Cargo crawls through the current and parent directories(and its own home) and considers all configs for the build. \nAnother benefit is that it makes calls to run, check, test and build, use the specified\ntarget by default. It\'s still possible to pass the --target argument to cargo,\nbut most of the time I tend to stick with a specific target for a while before\nmoving on, so this switch is just more comfortable.\nSo my personal config file outside the actual projects looks like this:\n\n~/projects/.cargo/config.toml\n[build]\n#see https://github.com/rust-lang/cargo/issues/9239#issuecomment-792600349\n#just comment in the "current" target\n#target = "x86_64-unknown-linux-gnu"  #own machine, Arch btw\ntarget = "wasm32-unknown-unknown"\n\n#Mold\n[target.x86_64-unknown-linux-gnu]\nlinker = "clang"\nrustflags = ["-C", "link-arg=-fuse-ld=/usr/bin/mold"]\n\n\nCreating The Workspace\nAfter coming up with a cool name, the next step is to actually create the\nworkspace for all the graphics packages we are going to write. \nSplitting the renderer into multiple packages will help with the incremental\nbuild times later, because cargo just needs to rebuild what has changed.\n#cac for cacatuidae, the family of the magnificent cockatiels, and cockatoos\ncargo new --lib cac_graphics\n\nThere is no new --workspace in cargo yet, but --lib makes sure that the\ngenerated .gitignore adds the Cargo.lock\nfile. Alternatively, we just use the one provided default one, when we create a new repository on GitHub, which works as well.\nThen we remove the src directory, and replace the content of the Cargo.toml with a workspace definition.\nOne thing I also always do when dealing with heavy IO(like game assets), is to add an opt-level for debug builds(dev profile). It doesn\'t really affect build times, but without it, a large glTF-scene can take minutes instead of seconds to load. I found out about it when I played around with bevy, thanks to the incredible unofficial cheat book. I pretty much end up enabling optimizations in all game related projects at some point, where I am almost considering adding it to my personal .cargo/config. Because profile settings in a workspace are only taken from the root, we can do this now once, for all future binaries in this workspace.\nSo for now, my workspace only contains the directory .git, a .gitignore and the\nCargo.toml with the content: \n\ncac_graphics/Cargo.toml\n[workspace]\nmembers = [] \n\n# To avoid unbearable long loading times for assets,\n# it is required to at least have a minor opt-level\n[profile.dev]\nopt-level = 1\n\n\n\nLink to the repository\n',id:"https://breakbuild.dev/devlog/renderer/project_setup/chapter/",title:"Project Setup"},"https://breakbuild.dev/devlog/renderer/the_context/":{body:"",id:"https://breakbuild.dev/devlog/renderer/the_context/",title:"The Context"},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{body:'Now that we got our workspace set up, it is time to add the first member, the graphics context. We add a new library package inside our workspace by calling: \ncargo new --lib context\n\nand adding it into the members field of the Cargo.toml in the root.\n\ncac_graphics/Cargo.toml\n[workspace]\nmembers = ["context"]\n\n\n Note \n It is also possible to just have a single directory called "crates" and glob\nall members automatically with members = ["crates/*"], but I just prefer adding them\nexplicitly.  \nThe context could be seen as "hardware abstraction layer", "GfxDevice" or similar thing. It is just used as a wrapper around the underlying\ngraphics API\'s and allows us using OpenGL, Vulkan and whatever else under a unified API to communicate with the graphics hardware. It\'s not going to do any fancy ordering, render passes, materials, or other high level\nthings, those will be part of the core renderer crate. \nThe main purposes of this Context are: \n\nstoring and reading blobs of data on the GPU)\nspecify the vertex layout\ncompile shaders and set shader specific variables\ndraw the vertex layout with a specific shader\n\nBasically everything that OpenGL and friends provide, just in a safe wrapper.\nThis might sound awfully similar to the problem that wgpu solves, and since we are using Rust, we might as well use it. \nHowever, the reason I decided to go with our own abstraction is the ability to make our own opinionated decisions. I also have more fun writing and understanding the low-level API\'s :).\nThat said, I also plan to add wgpu as a possible backend as part of this context\nabstraction at some point.\nI am already somewhat comfortable with OpenGL, so it will be the main focus for\nnow. Though, I won\'t go into all the details of it, but try to give some summaries where necessary. learnopengl.com does a far better\njob than I ever could when it comes to learning materials for OpenGL. \nThe attentive reader might have noticed that I didn\'t say anything about\nwindows. The reason is that our Context should work with\nwinit, glfw\nand anything else that supports a way to create a graphics context. This gives\nus a lot of flexibility later, especially when targeting different platforms. We\ncan have separate binaries with their own platform specific requirements(some\nneed to be non-blocking, for example), without making a potentially unergonomic sacrifice in our Renderer. We will basically never take ownership of the main loop.\nSetting Up The Playground\nI found that Rust highly encourages an exploratory style of programming, where you reach for quick and dirty solutions, to\nunderstand your problems and your data, before you discard that junk to do it\nproperly again. Otherwise, we will end up frequently rewriting it in Rust later, rather than sooner.\nSo I often start with a basic "playground.rs" in the examples directory that is not checked into the\nversion control system, where I just "sketch" different solutions until I am\ncontent. This also helps with figuring out an ergonomic API.\nFor this, we need some dev-dependencies, which we add to our context/Cargo.toml.\nwinit to create a simple window, env_logger to have some basic logging support later and anyhow for error bubbling.\nIf you have any other preferences, feel free to use those instead. None of them\nwill be directly tied to our library later, and the user is free to pick whatever\nthey prefer. It\'s just what we will be using for this playground, our examples,\nand tests.\nWhile we are at it, let\'s also add log as a dependency for our crate, because we will definitely end up using it later. It\'s like part of the "extended standard library", crates that are the de facto standard. Log just allows us to log, without knowing about any specific logging implementation (like the aforementioned env_logger).\nI don\'t need winit\'s Wayland support on my dev machine for testing, so I disabled it and\nonly enable X11. This will reduce the total dependencies from 130 to "just" 48,\ncold build times from 54.71s to 18.74s, and more importantly incremental build\ntimes from 2.16s to just 0.82s for me. Looking at the features the crates provide and only enabling the\none you actually require, makes a huge difference :) \nThe drawback is that we need to pass it as command line argument when we are\ntrying to run our tests on Wayland later.\nThe final Cargo.toml like this for now(we will modify the package stuff later):\n\ncac_graphics/context/Cargo.toml\n[package]\nname = "context"\nversion = "0.1.0"\nedition = "2021"\n\n[dependencies]\n#logging abstraction\nlog = "0.*"\n\n[dev-dependencies]\n#error handling\nanyhow = "1.*"\n#logging implementation\nenv_logger = "0.*"\n#window creation\nwinit = { version = "0.*", default-features = false, features =["x11"] }  \n\n\nNow, we yoink winit\'s example code from their readme, put it into\ncac_graphics/context/examples/playground.rs and run the example.\ncargo run --example playground\n\nIt opens an empty window without displaying anything, which makes sense.\n Note \n It\'s possible that you won\'t see anything, because on some window\nmanagers the window only appears when its content is actually updated/drawn to.  \nThe next step would be to create an actual graphics context to load and call some\ngraphics functions.\nBut let us talk about our target graphics API first.\n\nLink to the repository\n(We only added the playground.rs to the repository to make sharing easier)\n',id:"https://breakbuild.dev/devlog/renderer/the_context/chapter/",title:"The Context"},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{body:' Note \n This is a simple excursion about writing the previously generated OpenGL\nbindings from scratch. Feel free to just skim through this chapter or skip it\naltogether.  \nIn the previous chapter we have set up a simple playground for us.\nBefore going further into the context creation, let\'s start with a simple\nexcursion about the OpenGL bindings. \nOur playground is currently using automatically generated gl bindings.\nHowever, the OpenGL spec is huge and many of the functions/types are legacy\nluggage, or at least not needed for our purpose. For example, there are around\n800 lines of constant, while we only need a few dozens of them at best.\nThe generated file is a humongous &gt;800kb chunkster.\nSo, how much "bloat" are we generating by using a bindings generator over just\nwriting what we need? \nWell, let\'s write some bindings and compare the result :)\nWriting Bindings From Hand\nThe gl.xml on the official OpenGL-Registry repository defines everything that is needed.\nGenerally, the bindings require 4 parts: \n\ndefining the GL types \nsetting the GL constants \ndefining the functions\nloading the function pointers\n\nThe easiest thing to start with are the actual function definitions. \nOur playground from the previous chapter requires calls to glClear and glClearColor.\nThey are defined as this, in the XML-file:\n\ngl.xml\n&lt;command&gt;\n     &lt;proto&gt;void &lt;name&gt;glClear&lt;/name&gt;&lt;/proto&gt;\n     &lt;param group="ClearBufferMask"&gt;&lt;ptype&gt;GLbitfield&lt;/ptype&gt; &lt;name&gt;mask&lt;/name&gt;&lt;/param&gt;\n     &lt;glx type="render" opcode="127"/&gt;\n&lt;/command&gt;\n&lt;command&gt;\n    &lt;proto&gt;void &lt;name&gt;glClearColor&lt;/name&gt;&lt;/proto&gt;\n    &lt;param group="ColorF"&gt;&lt;ptype&gt;GLfloat&lt;/ptype&gt; &lt;name&gt;red&lt;/name&gt;&lt;/param&gt;\n    &lt;param group="ColorF"&gt;&lt;ptype&gt;GLfloat&lt;/ptype&gt; &lt;name&gt;green&lt;/name&gt;&lt;/param&gt;\n    &lt;param group="ColorF"&gt;&lt;ptype&gt;GLfloat&lt;/ptype&gt; &lt;name&gt;blue&lt;/name&gt;&lt;/param&gt;\n    &lt;param group="ColorF"&gt;&lt;ptype&gt;GLfloat&lt;/ptype&gt; &lt;name&gt;alpha&lt;/name&gt;&lt;/param&gt;\n    &lt;glx type="render" opcode="130"/&gt;\n&lt;/command&gt;\n\n\nThis is a lot of noise. All we need are the return values, the name of the\nfunction, and types and names of the parameters. Instead of crawling through\nthe XML, we could also just be searching for the functions in the\nrefpages or on\ndocs.gl.\n//C Specification\nvoid glClear(GLbitfield mask);\nvoid glClearColor(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);\n\nIt\'s less "correct", but way easier to read. A worthwhile trade-off.\nBoth are void functions, which means they have no return values. glClear\ntakes a mask with the type GLbitfield and glClearColor takes in the 4 color\nchannels as GLfloat. Just as the XML specifies, but more concise! Great!\nMore than that, they also describe the accepted values.\nFor example, the parameters for glClear specify the mask argument with: \n\nmask \nBitwise OR of masks that indicate the buffers to be cleared. The three masks are GL_COLOR_BUFFER_BIT, GL_DEPTH_BUFFER_BIT, and GL_STENCIL_BUFFER_BIT\n\nSo we also know that we require the 3 constants for the buffer bits as well.\nThis relation is specified in the XML via the group, but makes finding everything\nthat is needed even less convenient than just using the docs.\nNow that we know the types we are going to need, the next step is to define them in our code.\nFirst we need the "platform" definitions. Things that map OpenGL-types to FFI-compatible Rust types.\nThings like GLint and GLEnum being defined with\ncompatible "c types" that will be used for the FFI calls.\nLuckily, there is an official table with a description and the number of bits for each\ntype on the khronos wiki. The\nalternative would be reading the official specs.\nC typeBitdepthDescription\nGLboolean1+A value, either GL_TRUE or GL_FALSE\nGLbyte8Signed, 2\'s complement binary integer\nGLubyte8Unsigned binary integer\nGLshort16Signed, 2\'s complement binary integer\nGLint32Unsigned binary integer\nGLuint32Signed, 2\'s complement binary integer\nGLenum32An OpenGL enumarator value\nGLsizeptrpointer sizeNon-negative binary integer size for memory offsets and ranges\nGLfloat32An IEEE-754 floating-point value\nGLbutfield32A bitfield value\n......\n\nWhich makes it pretty straight forward.\npub mod handmade_gl {\n    pub mod types {\n        use core::ffi;\n\n        pub type GLbitfield = ffi::c_uint;\n        pub type GLfloat = ffi::c_float;\n    }\n}\n\nThis is by no means exhaustive. As mentioned, the point of this exercise is to\ndefine just as little as needed and keep adding as we go. GLbitfield and GLfloat\nare all we need for glClear and glClearColor.\nNow, we can also define the constants.\nAs mentioned, glClear also defines 3 constants for the clear bits.\nThis is where the\nXML is handy. We can just search for the constant definitions and copy the values: \n&lt;enums namespace="GL" group="AttribMask" type="bitmask"&gt;\n    ..\n    &lt;enum value="0x00000100" name="GL_DEPTH_BUFFER_BIT" group="ClearBufferMask,AttribMask"/&gt;\n    ..\n    &lt;enum value="0x00000400" name="GL_STENCIL_BUFFER_BIT" group="ClearBufferMask,AttribMask"/&gt;\n    ..\n    &lt;enum value="0x00004000" name="GL_COLOR_BUFFER_BIT" group="ClearBufferMask,AttribMask"/&gt;\n    ..\n&lt;/enums&gt;\n\nWhich translates into this in Rust-land:\nmod handmade_gl {\n    //constants\n    const GL_COLOR_BUFFER_BIT: GLbitfield   = 0x00004000;\n    const GL_DEPTH_BUFFER_BIT: GLbitfield   = 0x00000100;\n    const GL_STENCIL_BUFFER_BIT: GLbitfield = 0x00000400;\n}\n\nNow that this is done, let\'s define all the gl functions and\ntheir signatures as types for convenience.\nmod handmade_gl {\n    type Clear = unsafe extern "system" fn(mask: types::GLbitfield);\n    type ClearColor = unsafe extern "system" fn(\n        red: types::GLfloat,\n        green: types::GLfloat,\n        blue: types::GLfloat,\n        alpha: types::GLfloat,\n    );\n\nThe extern "system" specifies that Rust calls external functions through a foreign function\ninterface(FFI). They are in an external library. \nAll that is left is to create the function pointers.\nLet\'s start by defining a struct for the function pointers, that loads the\nfunctions via some sort of loader function, that uses the "name" to return a\npointer.\nmod handmade_gl {\n    struct FnPtr {\n        //the actual function to call\n        ptr: *const core::ffi::c_void,\n        //symbol of the function\n        name: &amp;\'static str,\n    }\n\n    impl FnPtr {\n        pub const fn new(name: &amp;\'static str) -&gt; Self {\n            Self {\n                ptr: core::ptr::null(),\n                name,\n            }\n        }\n\n        // TODO: error handling :P\n        pub unsafe fn load(\n            &amp;mut self,\n            loader: impl Fn(&amp;str) -&gt; *const core::ffi::c_void,\n        ) {\n            self.ptr = loader(self.name);\n        }\n    }\n}\n\nNow let\'s define all the functions. They are static mutables, but it\'s also\npossible to put them into a struct or organize them differently. \nAlso, we will define a function that will load all the function pointers we need.\nmod handmade_gl {\n    mod fn_ptrs {\n        pub(super) static mut CLEAR: super::FnPtr = super::FnPtr::new("glClear");\n        pub(super) static mut CLEAR_COLOR: super::FnPtr = super::FnPtr::new("glClearColor");\n    }\n\n\n    pub fn load_with(loader: impl Fn(&amp;str) -&gt; *const core::ffi::c_void) {\n        unsafe {\n            fn_ptrs::CLEAR.load(&amp;loader);\n            fn_ptrs::CLEAR_COLOR.load(&amp;loader);\n        }\n    }\n}\n\nNow it should be clear what that weird proc_address from before was all about:\nThe proc_address is just a function that looks up the symbol that we pass to it. \nIt\'s pretty much (like) taking a loaded dynamic library(.dll) and then getting the addresses of the functions by looking them\nup via their name.\nFinally, we need to "map" the pointers with the concrete function types.\nWhat good is a pointer if we can\'t pass arguments to it?\nTo do this, we just define the gl functions one last time, "cast" the pointers\ninto the concrete function type with a transmute, and then invoke them with arguments.\n    pub unsafe fn Clear(bits: GLbitfield) {\n        //"casts" the function pointer inside the CLEAR instance into the\n        //actual Clear type and invokes it\n        unsafe {\n            core::mem::transmute::&lt;_, ClearType&gt;(fn_ptrs::CLEAR.ptr)(bits);\n        }\n    }\n\n    pub unsafe fn ClearColor(\n        red: types::GLfloat,\n        green: types::GLfloat,\n        blue: types::GLfloat,\n        alpha: types::GLfloat,\n    ) {\n        //"casts" the function pointer inside the CLEAR_COLOR instance into the\n        //actual ClearColor type and invokes it\n        unsafe {\n            core::mem::transmute::&lt;_, ClearColorType&gt;(fn_ptrs::CLEAR_COLOR.ptr)(\n                red, green, blue, alpha,\n            );\n        }\n    }\n\nThere is clearly an opportunity to write a macro_rules! that deals with all\nthe boilerplate. However, before going further into this madness, let\'s compare\nthe results with the initial approach at the top. \nLet\'s not forget to replace the gl:: in our main fn with our handmade_gl\nmodule.\nResults\nThese are the results after re-building and running the example multiple times\nand taking the averages, running --release with:\n[profile.release]\nstrip = "symbols"\nlto = true \ncodegen-units = 1 \nopt-level = "s"\n\n(and bin size running once without any of these flags)\nApproachBuild time (clean / incremental)Binary Size without/with strippingload_with() time\ngl generator16.47s / 0.86s5.2MB / 755kb1.6ms\n"handmade"14.69s / 0.86s4.9MB / 639kb7.6µs\n\nSo, the huge caveat is that we only loaded a handful of symbols. \nMeanwhile, gl_generator loaded "everything". There is barely any difference and adding more and more functions will reduce\nthe gains further. \nGiven that the differences are largely negligible in the grand scheme of things, especially when we are going to load\ngame assets later anyway, which makes a few 100kb a drop in the bucket, and the whole endeavor nothing more than a\nlearning experience. There are also even more things to consider, like fallback\nfunctions and extensions.\nThe \'load_with()\' time is more interesting, but even then we are just looking at\n1.6ms when the game is being loaded. It\'s not something that is noticeable or\nneeds to scale.\nGranted, having to define the function pointers manually like this allows us to\nadd logs/traces, or add additional validation layers, ideally behind some feature flag. It is\npossible to validate the values in many cases, like glClear accepting a\nGLbitfield, but only accepting the bitwise OR of any of the three clear constants\nwe defined above, would make this an ideal candidate for manual validation. \nAlso, before the debug callback function in OpenGL was widely\nsupported, this used to be a great opportunity to insert glError polling\nafter each call(which is also possible with gl_generator settings). \nSince we are targeting OpenGL 4.3, we get this all with glDebugMessageCallback,\nwhich we will add in one of the next chapters.\nFinal code:\nuse raw_gl_context::GlContext;\n\nuse winit::{\n    event::{Event, WindowEvent},\n    event_loop::{ControlFlow, EventLoop},\n    window::WindowBuilder,\n};\n\npub mod handmade_gl {\n    pub mod types {\n        use core::ffi;\n\n        pub type GLbitfield = ffi::c_uint;\n        pub type GLfloat = ffi::c_float;\n    }\n\n    pub const COLOR_BUFFER_BIT: GLbitfield = 0x00004000;\n    pub const DEPTH_BUFFER_BIT: GLbitfield = 0x00000100;\n    pub const STENCIL_BUFFER_BIT: GLbitfield = 0x00000400;\n\n    type Clear = unsafe extern "system" fn(mask: types::GLbitfield);\n    type ClearColor = unsafe extern "system" fn(\n        red: types::GLfloat,\n        green: types::GLfloat,\n        blue: types::GLfloat,\n        alpha: types::GLfloat,\n    );\n\n    struct FnPtr {\n        ptr: *const core::ffi::c_void,\n        name: &amp;\'static str,\n    }\n\n    impl FnPtr {\n        pub const fn new(name: &amp;\'static str) -&gt; Self {\n            Self {\n                ptr: core::ptr::null(),\n                name,\n            }\n        }\n\n        pub unsafe fn load(\n            &amp;mut self,\n            loader: impl Fn(&amp;str) -&gt; *const core::ffi::c_void,\n        ) -&gt; Option&lt;()&gt; {\n            self.ptr = loader(self.name);\n            self.ptr.is_null().then_some(())\n        }\n    }\n\n    mod fn_ptrs {\n        pub(super) static mut CLEAR: super::FnPtr = super::FnPtr::new("glClear");\n        pub(super) static mut CLEAR_COLOR: super::FnPtr = super::FnPtr::new("glClearColor");\n    }\n\n    pub unsafe fn Clear(bits: GLbitfield) {\n        unsafe {\n            core::mem::transmute::&lt;_, Clear&gt;(fn_ptrs::CLEAR.ptr)(bits);\n        }\n    }\n\n    pub unsafe fn ClearColor(\n        red: types::GLfloat,\n        green: types::GLfloat,\n        blue: types::GLfloat,\n        alpha: types::GLfloat,\n    ) {\n        unsafe {\n            core::mem::transmute::&lt;_, ClearColor&gt;(fn_ptrs::CLEAR_COLOR.ptr)(red, green, blue, alpha);\n        }\n    }\n\n    pub fn load_with(proc_address: impl Fn(&amp;str) -&gt; *const core::ffi::c_void) {\n        unsafe {\n            fn_ptrs::CLEAR.load(&amp;proc_address);\n            fn_ptrs::CLEAR_COLOR.load(&amp;proc_address);\n        }\n    }\n}\n\nfn main() {\n    let event_loop = EventLoop::new();\n    let window = WindowBuilder::new().build(&amp;event_loop).unwrap();\n\n    //create a context from the existing winit window\n    let context = GlContext::create(\n        &amp;window,\n        raw_gl_context::GlConfig {\n            alpha_bits: 0,\n            ..Default::default()\n        },\n    )\n    .unwrap();\n    context.make_current();\n\n    handmade_gl::load_with(|symbol| context.get_proc_address(symbol));\n\n    unsafe {\n       handmade_gl::ClearColor(1.0, 0.0, 0.0, 1.0);\n    }\n\n    event_loop.run(move |event, _, control_flow| {\n        *control_flow = ControlFlow::Poll;\n\n        match event {\n            Event::WindowEvent {\n                event: WindowEvent::CloseRequested,\n                window_id,\n            } if window_id == window.id() =&gt; *control_flow = ControlFlow::Exit,\n            Event::MainEventsCleared =&gt; {\n                unsafe {\n                   handmade_gl::Clear(gl::COLOR_BUFFER_BIT);\n                }\n                context.swap_buffers();\n            }\n            _ =&gt; {}\n        }\n    });\n}\n\n',id:"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/",title:"[Excursion] Handwritten GL Bindings"},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{body:'Why OpenGL\nOpenGL development has been mostly abandoned for Vulkan nowadays, so why would\nanyone still want to target OpenGL? \nFor starters, it is widely supported, and the drivers are matured. It\'s also way\nsimpler than Vulkan, but also makes cross-platform support way easier. It is\npossible to target Desktops, Web Browsers and mobile devices with almost the same\nsubset.\nHowever, the goal of this context abstraction is to be graphics API agnostic\nanyway, so it is always possible to add another one and will even be required\nfor console support at some point. However, I also want to write a\nwgpu backend in the near future, just to test the\n"flexibility" of the context and compare the performance differences.\nAdding Vulkan later is also not off the table either.\nSo in short, OpenGL is a great entry-level API which runs almost everywhere,\nwhich makes it an ideal candidate for our first game.\nI am also a bit more familiar with OpenGL than the other graphics API\'s, so I\nhope to hit the point where we can start with the actual game sooner :)\nOpenGL Versions\nSince we are going to use OpenGL, the first thing we should think about is about the OpenGL version we want to\ntarget. While it is possible to target multiple versions with a single backend and infest our code base with if\'s to pick the better alternative when supported, it adds an unnecessary overhead and bloat. Instead, we can target a specific version, poll some extensions when needed(for example, debug callback is a great extension in 3.3 to poll for), and when needed, just implement a different backend altogether for\nanother version. Let\'s say to have a dedicated 3.3 backend and a separate 4.6 one.\nWhich version we want to target depends first and foremost on the "OpenGL flavor"\nwe are aiming for. There are basically 3.\n\n\nLegacy OpenGL\nAlso known as "fixed function pipeline" or "immediate mode OpenGL", is a straightforward way to draw things, but comes with a worse performance. You will end up with\nfar more API calls, need to send more data around, and is not nearly as flexible as the programmable pipeline.\nIt\'s the OpenGL-style that uses glBegin, glEnd, glMatrixMode, etc., and\nwas deprecated with the release of OpenGL 3.0\n\n\n"Modern" OpenGL\nThis is the "programmable pipeline", where you mostly deal with shaders,\nprograms that run on the GPU in various stages of the process, and uses vertex\narray objects to store the format of vertex data. This is pretty much OpenGL\n3.0 - 4.4.\n\n\nBindless OpenGL\nBindless is about "Direct State Access"(DSA). This changes the previous way of globally binding objects to the context to\n"named" access. Functions take in the object that they are going to manipulate\ninstead of relying on global state, where the latter often leads to\naccidentally querying or changing the state of the wrong object. This leads\nnot only to fewer errors, but also to more efficiency(no need to constantly\nbind things or keep track of the current bindings).\nThis is pretty much OpenGL &gt;= 4.5.\n\n\nThere are also the core and the compatibility profiles, where the latter just enabled\nsupport for the fixed function pipeline in the newer versions, though they don\'t\nwork with programmable pipeline ones(so it\'s not really possible to mix both\nways). OpenGL features are generally additive, so this profile split was a\nway to separate the "new" OpenGL from the legacy luggage.\nWhich versions of these flavors we want to use depends on the functionality that\nwe need from the API and the available support on the target platform. 3.3 is a solid choice for a wide range of hardware and\ndriver maturity, but handy functions like compute shaders came with 4.3. Apple\ndevices also stopped support for OpenGL versions above 4.1.\nRealistically speaking, most Desktop systems support the decade old 4.5 according to the steam\nhardware survey. More than 90% support\nDX-12 capable hardware, which is pretty much the same hardware that supports\n4.5.\nExtensions can muddle this choice further, because it is possible to create\nan older context, but get the "newer" functionality via extensions.\nSo frankly speaking, it is kinda messy.\nBut which one to pick?\nLegacy OpenGL is an easy no for our purposes, because it doesn\'t make use of any modern hardware. \nThe question between "modern" and bindless OpenGL is more difficult.\nBindless makes things easier and more efficient, but "modern" supports a wider\nrange of hardware. Since our goal is to support WebGL, non-bindless makes a lot of\nsense. Also, arguably, we would just pick Vulkan if we need state-of-the-art efficiency.\nOpenGL 4.3 Core seems to be the best bet for us. It has a great overlap with GLes3, which is used as base for WebGL2,\nhas compute shaders and debug callbacks. Historically, GLes3.0 was created from\na subset of OpenGL 3.3, but OpenGL 4.3 includes functionality to increase the\ncompatibility between them. It might be a bummer to be unable to support macOS,\nbut frankly speaking, I don\'t care about this developer-unfriendly platform.\nCreating the context\nBefore we can do any fancy OpenGL calls, we need to create an OpenGL context.\nWe are going to use the raw-gl-context crate.\nIt works with RawWindowHandle\'s, so it\'s pretty straight forward with winit.\n//create a context from the existing winit window\nlet context = GlContext::create(\n    &amp;window,\n    raw_gl_context::GlConfig {\n        alpha_bits: 0,\n        version: (4, 3),\n        profile: raw_gl_context::Profile::Core,\n        ..Default::default()\n    },\n)\n.unwrap();\n\n//actually use the context\ncontext.make_current();\n\nLet\'s not forget to add it to our Cargo.toml.\n[dev-dependencies]\nraw-gl-context = "0.*"\n\n Note \n Note: On my machine, X11 requires zero alpha bits in the context creation with Nvidia drivers. \nIn theory, just using the default should be fine. It\'s a known issue with some\nworkarounds, but since I don\'t need alpha bits for now, it is a problem for\nfuture me.  \nThat\'s it.\nCreating an OpenGL-context using the Core profile, requesting the version 4.3,\nthen "activating" the context. Activating means making the OpenGL-context the\ncurrent context of the calling thread. A thread can only have one context being bound,\nand a context can only be bound to a single thread at a time. This makes\nmulti-threading in OpenGL a major pain, so we will use an alternative to\nbypass this issue later.\nFinally, in our event_loop, we will call \ncontext.swap_buffers();\n\nto swap the front with the back buffer. The details are not important, but to\nput it simply, it "updates" the content of the screen. We are generally drawing\nto the back buffer, but the window displays the front buffer. So to actually see\nwhat we have drawn, we swap them. We haven\'t drawn anything yet, so the screen is\njust black. swap_buffers waits for the issued calls to be finished before it\nswaps. Keep in mind, this is just a minimalistic explanation and in reality, it\nis not uncommon for having more than two buffers(e.g. triple-buffering) or\nswap_buffers blocking until the monitor refreshes before swapping(vsync).\nGenerating the Bindings\nNow that we have an OpenGL-context, we can load the OpenGL functions.\nThe easiest way is to use any bindings generator, which loads the function\npointers we need for us.\nWe can use a web-service like glad to download the files\nwith the bindings, write a simple build.rs that uses\ngl_generator or use any of the already\ngenerated bindings like gl(OpenGL 4.6 Core),\ngl33(OpenGL 3.3).\nWe will go with gl_generator for no reason in particular.\nThe example code shows creating a build.rs in the project and uses the output\ndirectory environment variable to include it into the modules, but since this\nshould pretty much never change, we can create a simple throwaway project to generate\nthe bindings just once, and copy them into our project. Feel free to stick with\nthe version as described in the docs, where you re-generate the bindings\nevery time they change/you create a new clean build. I just think that the\nextra build.rs in our project is unnecessary noise, especially once we\nneed to generate other bindings. The drawback is that we have now a 27K lines of\ncode, &gt;800kb monster in our repo.\n#in some empty dir \ncargo new --lib gl_bindings\n\nadd gl_generator as build dependency:\n\ngl_bindings/Cargo.toml\n[build-dependencies]\n#OpenGL Context Creation\ngl_generator = "*"\n\n\nNow we create a build.rs in the root of the project:\n\ngl_bindings/build.rs\nuse std::fs::File;\nuse gl_generator::{Api, Fallbacks, GlobalGenerator, Profile, Registry};\n\nfn main() {\n    let mut file = File::create("gl43_core.rs").unwrap();\n\n    Registry::new(Api::Gl, (4, 3), Profile::Core, Fallbacks::All, [])\n        .write_bindings(GlobalGenerator, &amp;mut file)\n        .unwrap();\n}\n\n\nBuilding the project with cargo build should now create a file with the name gl43_core.rs in\nthe project root.\ngl_generator also allows us to adjust the generated bindings. The GlobalGenerator\nallows us to access OpenGL functions from anywhere in the project(that has\naccess to the gl43_core module), without passing some context around. This makes\nthings far simpler for us. We are not going to expose the gl lib to the public\nand we will use a different way to tie the lifetime to the actual gl context.\nWe just copy the generated file into the src dir of our context member.(don\'t forget to delete the throwaway gl_bindings project afterwards, it\'s just clutter on our hard drive now)\nTo access the bindings from our playground, we need to modify the existing\nlib.rs on our src directory. While we are at, we remove the existing content,\nand for the sake of our sanity, we will just mute clippy for the gl module,\nbecause we will get 2k warnings otherwise. We do that by adding some allow\nattributes right before we declare the module, or to avoid noise in our source\nfiles, we add the "module wide" attributes at the top of the gl43_core.rs, which\ncan take a while depending on how great our text editor deals with huge files.\nAlso, while we are dealing with lints, let\'s add the stricter pedantic and the\nexperimental nursery lints to our crate, just because Clippy is that useful. \n\ncac_graphics/context/src/lib.rs\n#![warn(clippy::pedantic)]\n#![warn(clippy::nursery)]\n\npub mod gl43_core;\n\n\n\ncac_graphics/context/src/gl43_core.rs\n#![allow(clippy::pedantic)]\n#![allow(clippy::nursery)]\n#![allow(clippy::all)]\n\n\nFun fact, allow(clippy::all) doesn\'t disable all lints. Pedantic and nursery\nlints, both of which we added to our lib.rs, must be disabled additionally.\nAlternatively, we could manually enable the warnings for the lints we care\nabout, like how EmbarkStudios does\nit.\nNow we need to modify our examples/playground.rs, to alias the gl module with a\nmore ergonomic name.\n\ncac_graphics/context/examples/playground.rs\nuse context::gl43_core as gl;\n\n\nFinally, we can load the OpenGL functions right after we made our context\ncurrent: \ncontext.make_current();\n\ngl::load_with(|symbol| context.get_proc_address(symbol));\n\nThe bindings generated with gl_generator expose a load_with function that will load the function pointers of our OpenGL functions one by one. \nNow, we can test it by calling the following 2 OpenGL functions in our playground.\nBefore the event_loop.run(..) \n//set a clear color for later\nunsafe {\n    gl::ClearColor(1.0, 0.0, 0.0, 1.0);\n}\n\nand before swap_buffers()\n// clear the "screen" with the previously set clear color\nunsafe {\n    gl::Clear(gl::COLOR_BUFFER_BIT);\n}\n\nBecause they are just function pointers, calling functions over FFI(basically calling non-Rust\nfunctions), they need to be in unsafe blocks.\nUnsafe might sound dangerous and scary, but it just means that Rust can\'t guarantee that these\nfunctions follow its safety principles, so the burden is on the programmer.\nBasically  just another day for any C++ programmer, just limited to a handful\nlines of code.\nThe final playground should look like this:\n\ncac_graphics/context/examples/playground.rs\nuse context::gl43_core as gl;\n\nuse raw_gl_context::GlContext;\nuse winit::{\n    event::{Event, WindowEvent},\n    event_loop::{ControlFlow, EventLoop},\n    window::WindowBuilder,\n};\nfn main() {\n    let event_loop = EventLoop::new();\n    let window = WindowBuilder::new().build(&amp;event_loop).unwrap();\n\n    //create a context from the existing winit window\n    let context = GlContext::create(\n        &amp;window,\n        raw_gl_context::GlConfig {\n            alpha_bits: 0,\n            version: (4, 3),\n            profile: raw_gl_context::Profile::Core,\n            ..Default::default()\n        },\n    )\n    .unwrap();\n\n    //actually use the context\n    context.make_current();\n\n    //load the OpenGL functions with the context\n    gl::load_with(|symbol| context.get_proc_address(symbol));\n\n    unsafe {\n        //red and alpha channels as 1.0, rest as 0.0\n        gl::ClearColor(1.0, 0.0, 0.0, 1.0);\n    }\n\n    event_loop.run(move |event, _, control_flow| {\n        *control_flow = ControlFlow::Poll;\n\n        match event {\n            Event::WindowEvent {\n                event: WindowEvent::CloseRequested,\n                window_id,\n            } if window_id == window.id() =&gt; *control_flow = ControlFlow::Exit,\n            Event::MainEventsCleared =&gt; {\n                unsafe {\n                    // clear the "screen"\n                    gl::Clear(gl::COLOR_BUFFER_BIT);\n                }\n            // "update" the screen\n                context.swap_buffers();\n            }\n            _ =&gt; {}\n        }\n    });\n}\n\n\nIf everything works, there should now be a window with a red background when\nrunning the example. And we can dive into the next steps.\nUnderstanding the gl calls above is not important for now, the main thing is to\njust test whether OpenGL works. If it fails, there might be some system\ndependencies missing, but simply said glClear(GL_COLOR_BUFFER_BIT) clears the "screen", in a color that\nwe specify with glClearColor.\n Note \n I will use the OpenGL notation when referring to the functions in text,\ninstead of the Rust notation with the module as namespace. The reason for that\nis that it makes finding the docs easier, but also less dependent on the\nOpenGL bindings solution(and imports). E.g. glClear(GL_COLOR_BUFFER_BIT) instead of \ngl::Clear(gl::COLOR_BUFFER_BIT)  \nNow we can get our hands dirty.\n\nLink to the repository\n',id:"https://breakbuild.dev/devlog/renderer/the_context/opengl/",title:"OpenGL"},"https://breakbuild.dev/support/":{body:"Contribution &amp; Support\nThis project is done just by me, at least for now. I appreciate all kinds of contributions and help, to improve the quality of this little endeavor.\nThis site is also free from any tracking. So engaging with the contribution channels is a great way to let me know if there is even an interest in all\nof this, which helps me to justify spending more time :)\nContribute\nIf you find any grammar, spelling or factual errors, no matter how small, I\nencourage you to open an issue on GitHub, send a pull request, send me a private message on Reddit, or let me know on any other channel down below. \nIf you want to discuss certain posts or topics, or have any question, you can do so on GitHub as well.\nJust open an issue. Maybe this might also help the one or other person who runs into\nthe same question, or increases the understanding for people who didn't even\nthought about that specific case. Don't feel shy :)\nI will make sure to mention everyone who contributes in any capacity\nbelow this paragraph.1\nSupport\nThis blog is not running any ads or use affiliate links in any capacity,\nI won't take any sponsors, track any data nor put anything behind a paywall or some email subscription.\nAll the code and the eventual games are going to be open-source, even the ones\ntargeted for Steam or other commercial releases. The repositories are linked in the respective project pages in my Devlog(/devlog). I won't ask for money on any other page except this one.\nHowever, it would be foolish to not accept any goodwill by some generous readers.\nAny money donated helps me justifying spending more time on this project. \nI will list the supporters and their contributions below this page.1\nSo yeah, if you enjoy my content, you can support this little project by donating to any of the following channels:\nBuyMeACoffee\n\n1\nThis site only uses JavaScript for the theme switcher and the search. This\nmeans there are no dynamic updates, but instead, the list of contributors will be updated whenever a new post hits this site, which is ideally every few days.\n\n",id:"https://breakbuild.dev/support/",title:"Contribution and Support"}},docInfo:{"https://breakbuild.dev/":{body:152,title:0},"https://breakbuild.dev/blog/":{body:25,title:0},"https://breakbuild.dev/blog/my-year-with-rust/":{body:4644,title:5},"https://breakbuild.dev/devlog/":{body:59,title:0},"https://breakbuild.dev/devlog/motivation/":{body:353,title:1},"https://breakbuild.dev/devlog/renderer/":{body:154,title:2},"https://breakbuild.dev/devlog/renderer/hello_triangle/":{body:0,title:2},"https://breakbuild.dev/devlog/renderer/hello_triangle/buffers/":{body:808,title:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/chapter/":{body:57,title:2},"https://breakbuild.dev/devlog/renderer/hello_triangle/shaders/":{body:1461,title:1},"https://breakbuild.dev/devlog/renderer/hello_triangle/vertex-attributes/":{body:1395,title:2},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/":{body:0,title:3},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/alternative-contex/":{body:534,title:1},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/chapter/":{body:101,title:3},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/error-handling/":{body:1007,title:2},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/gl-context/":{body:670,title:2},"https://breakbuild.dev/devlog/renderer/hello_triangle_v2/render-target/":{body:1628,title:1},"https://breakbuild.dev/devlog/renderer/project_setup/":{body:0,title:2},"https://breakbuild.dev/devlog/renderer/project_setup/chapter/":{body:351,title:2},"https://breakbuild.dev/devlog/renderer/the_context/":{body:0,title:1},"https://breakbuild.dev/devlog/renderer/the_context/chapter/":{body:480,title:1},"https://breakbuild.dev/devlog/renderer/the_context/handwritten-bindings/":{body:1093,title:4},"https://breakbuild.dev/devlog/renderer/the_context/opengl/":{body:1218,title:1},"https://breakbuild.dev/support/":{body:182,title:2}},length:24},lang:"English"},function(){function u(e){var d=new u.Index;return d.pipeline.add(u.trimmer,u.stopWordFilter,u.stemmer),e&&e.call(d,d),d}var i,f,e,d,c,h,b,v,g,p,k,_,m,y,w,x,I,j,T,L,S,C,R,G,t;u.version="0.9.5",((lunr=u).utils={}).warn=(t=this,function(e){t.console&&console.warn&&console.warn(e)}),u.utils.toString=function(e){return null==e?"":e.toString()},(u.EventEmitter=function(){this.events={}}).prototype.addListener=function(){var e=Array.prototype.slice.call(arguments),d=e.pop();if("function"!=typeof d)throw new TypeError("last argument must be a function");e.forEach(function(e){this.hasHandler(e)||(this.events[e]=[]),this.events[e].push(d)},this)},u.EventEmitter.prototype.removeListener=function(e,d){this.hasHandler(e)&&-1!==(d=this.events[e].indexOf(d))&&(this.events[e].splice(d,1),0==this.events[e].length)&&delete this.events[e]},u.EventEmitter.prototype.emit=function(e){var d;this.hasHandler(e)&&(d=Array.prototype.slice.call(arguments,1),this.events[e].forEach(function(e){e.apply(void 0,d)},this))},u.EventEmitter.prototype.hasHandler=function(e){return e in this.events},(u.tokenizer=function(e){var d,t;return arguments.length&&null!=e?Array.isArray(e)?(d=(d=e.filter(function(e){return null!=e})).map(function(e){return u.utils.toString(e).toLowerCase()}),t=[],d.forEach(function(e){e=e.split(u.tokenizer.seperator);t=t.concat(e)},this),t):e.toString().trim().toLowerCase().split(u.tokenizer.seperator):[]}).defaultSeperator=/[\s\-]+/,u.tokenizer.seperator=u.tokenizer.defaultSeperator,u.tokenizer.setSeperator=function(e){null!=e&&"object"==typeof e&&(u.tokenizer.seperator=e)},u.tokenizer.resetSeperator=function(){u.tokenizer.seperator=u.tokenizer.defaultSeperator},u.tokenizer.getSeperator=function(){return u.tokenizer.seperator},(u.Pipeline=function(){this._queue=[]}).registeredFunctions={},u.Pipeline.registerFunction=function(e,d){d in u.Pipeline.registeredFunctions&&u.utils.warn("Overwriting existing registered function: "+d),e.label=d,u.Pipeline.registeredFunctions[d]=e},u.Pipeline.getRegisteredFunction=function(e){return e in u.Pipeline.registeredFunctions!=1?null:u.Pipeline.registeredFunctions[e]},u.Pipeline.warnIfFunctionNotRegistered=function(e){e.label&&e.label in this.registeredFunctions||u.utils.warn("Function is not registered with pipeline. This may cause problems when serialising the index.\n",e)},u.Pipeline.load=function(e){var t=new u.Pipeline;return e.forEach(function(e){var d=u.Pipeline.getRegisteredFunction(e);if(!d)throw new Error("Cannot load un-registered function: "+e);t.add(d)}),t},u.Pipeline.prototype.add=function(){Array.prototype.slice.call(arguments).forEach(function(e){u.Pipeline.warnIfFunctionNotRegistered(e),this._queue.push(e)},this)},u.Pipeline.prototype.after=function(e,d){u.Pipeline.warnIfFunctionNotRegistered(d);e=this._queue.indexOf(e);if(-1===e)throw new Error("Cannot find existingFn");this._queue.splice(e+1,0,d)},u.Pipeline.prototype.before=function(e,d){u.Pipeline.warnIfFunctionNotRegistered(d);e=this._queue.indexOf(e);if(-1===e)throw new Error("Cannot find existingFn");this._queue.splice(e,0,d)},u.Pipeline.prototype.remove=function(e){e=this._queue.indexOf(e);-1!==e&&this._queue.splice(e,1)},u.Pipeline.prototype.run=function(e){for(var d=[],t=e.length,r=this._queue.length,o=0;o<t;o++){for(var s=e[o],l=0;l<r&&null!=(s=this._queue[l](s,o,e));l++);null!=s&&d.push(s)}return d},u.Pipeline.prototype.reset=function(){this._queue=[]},u.Pipeline.prototype.get=function(){return this._queue},u.Pipeline.prototype.toJSON=function(){return this._queue.map(function(e){return u.Pipeline.warnIfFunctionNotRegistered(e),e.label})},(u.Index=function(){this._fields=[],this._ref="id",this.pipeline=new u.Pipeline,this.documentStore=new u.DocumentStore,this.index={},this.eventEmitter=new u.EventEmitter,this._idfCache={},this.on("add","remove","update",function(){this._idfCache={}}.bind(this))}).prototype.on=function(){var e=Array.prototype.slice.call(arguments);return this.eventEmitter.addListener.apply(this.eventEmitter,e)},u.Index.prototype.off=function(e,d){return this.eventEmitter.removeListener(e,d)},u.Index.load=function(e){e.version!==u.version&&u.utils.warn("version mismatch: current "+u.version+" importing "+e.version);var d,t=new this;for(d in t._fields=e.fields,t._ref=e.ref,t.documentStore=u.DocumentStore.load(e.documentStore),t.pipeline=u.Pipeline.load(e.pipeline),t.index={},e.index)t.index[d]=u.InvertedIndex.load(e.index[d]);return t},u.Index.prototype.addField=function(e){return this._fields.push(e),this.index[e]=new u.InvertedIndex,this},u.Index.prototype.setRef=function(e){return this._ref=e,this},u.Index.prototype.saveDocument=function(e){return this.documentStore=new u.DocumentStore(e),this},u.Index.prototype.addDoc=function(s,e){var l;s&&(e=void 0===e||e,l=s[this._ref],this.documentStore.addDoc(l,s),this._fields.forEach(function(e){var d,t=this.pipeline.run(u.tokenizer(s[e])),r=(this.documentStore.addFieldLength(l,e,t.length),{});for(d in t.forEach(function(e){e in r?r[e]+=1:r[e]=1},this),r){var o=r[d],o=Math.sqrt(o);this.index[e].addToken(d,{ref:l,tf:o})}},this),e)&&this.eventEmitter.emit("add",s,this)},u.Index.prototype.removeDocByRef=function(e){e&&!1!==this.documentStore.isDocStored()&&this.documentStore.hasDoc(e)&&(e=this.documentStore.getDoc(e),this.removeDoc(e,!1))},u.Index.prototype.removeDoc=function(e,d){var t;e&&(d=void 0===d||d,t=e[this._ref],this.documentStore.hasDoc(t))&&(this.documentStore.removeDoc(t),this._fields.forEach(function(d){this.pipeline.run(u.tokenizer(e[d])).forEach(function(e){this.index[d].removeToken(e,t)},this)},this),d)&&this.eventEmitter.emit("remove",e,this)},u.Index.prototype.updateDoc=function(e,d){d=void 0===d||d;this.removeDocByRef(e[this._ref],!1),this.addDoc(e,!1),d&&this.eventEmitter.emit("update",e,this)},u.Index.prototype.idf=function(e,d){var t="@"+d+"/"+e;return Object.prototype.hasOwnProperty.call(this._idfCache,t)?this._idfCache[t]:(d=this.index[d].getDocFreq(e),e=1+Math.log(this.documentStore.length/(d+1)),this._idfCache[t]=e)},u.Index.prototype.getFields=function(){return this._fields.slice()},u.Index.prototype.search=function(e,d){if(!e)return[];e="string"==typeof e?{any:e}:JSON.parse(JSON.stringify(e));var t=null;null!=d&&(t=JSON.stringify(d));for(var r=new u.Configuration(t,this.getFields()).get(),o={},s=Object.keys(e),l=0;l<s.length;l++){var n=s[l];o[n]=this.pipeline.run(u.tokenizer(e[n]))}var a,i={};for(a in r){var f=o[a]||o.any;if(f){var c=this.fieldSearch(f,a,r),h=r[a].boost;for(v in c)c[v]=c[v]*h;for(v in c)v in i?i[v]+=c[v]:i[v]=c[v]}}var b,v,g=[];for(v in i)b={ref:v,score:i[v]},this.documentStore.hasDoc(v)&&(b.doc=this.documentStore.getDoc(v)),g.push(b);return g.sort(function(e,d){return d.score-e.score}),g},u.Index.prototype.fieldSearch=function(e,c,d){var h=d[c].bool,t=d[c].expand,d=d[c].boost,b=null,v={};return 0!==d?(e.forEach(function(i){var e=[i],f=(1==t&&(e=this.index[c].expandToken(i)),{});e.forEach(function(e){var d=this.index[c].getDocs(e),t=this.idf(e,c);if(b&&"AND"==h){var r,o={};for(r in b)r in d&&(o[r]=d[r]);d=o}for(r in e==i&&this.fieldSearchStats(v,e,d),d){var s=this.index[c].getTermFrequency(e,r),l=this.documentStore.getFieldLength(r,c),n=1,a=1,s=s*t*(n=0!=l?1/Math.sqrt(l):n)*(a=e!=i?.15*(1-(e.length-i.length)/e.length):a);r in f?f[r]+=s:f[r]=s}},this),b=this.mergeScores(b,f,h)},this),b=this.coordNorm(b,v,e.length)):void 0},u.Index.prototype.mergeScores=function(e,d,t){if(!e)return d;if("AND"==t){var r={};for(o in d)o in e&&(r[o]=e[o]+d[o]);return r}for(var o in d)o in e?e[o]+=d[o]:e[o]=d[o];return e},u.Index.prototype.fieldSearchStats=function(e,d,t){for(var r in t)r in e?e[r].push(d):e[r]=[d]},u.Index.prototype.coordNorm=function(e,d,t){for(var r in e){var o;r in d&&(o=d[r].length,e[r]=e[r]*o/t)}return e},u.Index.prototype.toJSON=function(){var d={};return this._fields.forEach(function(e){d[e]=this.index[e].toJSON()},this),{version:u.version,fields:this._fields,ref:this._ref,documentStore:this.documentStore.toJSON(),index:d,pipeline:this.pipeline.toJSON()}},u.Index.prototype.use=function(e){var d=Array.prototype.slice.call(arguments,1);d.unshift(this),e.apply(this,d)},(u.DocumentStore=function(e){this._save=null==e||e,this.docs={},this.docInfo={},this.length=0}).load=function(e){var d=new this;return d.length=e.length,d.docs=e.docs,d.docInfo=e.docInfo,d._save=e.save,d},u.DocumentStore.prototype.isDocStored=function(){return this._save},u.DocumentStore.prototype.addDoc=function(e,d){this.hasDoc(e)||this.length++,this.docs[e]=!0===this._save?function(e){if(null===e||"object"!=typeof e)return e;var d,t=e.constructor();for(d in e)e.hasOwnProperty(d)&&(t[d]=e[d]);return t}(d):null},u.DocumentStore.prototype.getDoc=function(e){return!1===this.hasDoc(e)?null:this.docs[e]},u.DocumentStore.prototype.hasDoc=function(e){return e in this.docs},u.DocumentStore.prototype.removeDoc=function(e){this.hasDoc(e)&&(delete this.docs[e],delete this.docInfo[e],this.length--)},u.DocumentStore.prototype.addFieldLength=function(e,d,t){null!=e&&0!=this.hasDoc(e)&&(this.docInfo[e]||(this.docInfo[e]={}),this.docInfo[e][d]=t)},u.DocumentStore.prototype.updateFieldLength=function(e,d,t){null!=e&&0!=this.hasDoc(e)&&this.addFieldLength(e,d,t)},u.DocumentStore.prototype.getFieldLength=function(e,d){return null!=e&&e in this.docs&&d in this.docInfo[e]?this.docInfo[e][d]:0},u.DocumentStore.prototype.toJSON=function(){return{docs:this.docs,docInfo:this.docInfo,length:this.length,save:this._save}},i={ational:"ate",tional:"tion",enci:"ence",anci:"ance",izer:"ize",bli:"ble",alli:"al",entli:"ent",eli:"e",ousli:"ous",ization:"ize",ation:"ate",ator:"ate",alism:"al",iveness:"ive",fulness:"ful",ousness:"ous",aliti:"al",iviti:"ive",biliti:"ble",logi:"log"},f={icate:"ic",ative:"",alize:"al",iciti:"ic",ical:"ic",ful:"",ness:""},e="[aeiouy]",d="[^aeiou][^aeiouy]*",c=new RegExp("^([^aeiou][^aeiouy]*)?[aeiouy][aeiou]*[^aeiou][^aeiouy]*"),h=new RegExp("^([^aeiou][^aeiouy]*)?[aeiouy][aeiou]*[^aeiou][^aeiouy]*[aeiouy][aeiou]*[^aeiou][^aeiouy]*"),b=new RegExp("^([^aeiou][^aeiouy]*)?[aeiouy][aeiou]*[^aeiou][^aeiouy]*([aeiouy][aeiou]*)?$"),v=new RegExp("^([^aeiou][^aeiouy]*)?[aeiouy]"),g=/^(.+?)(ss|i)es$/,p=/^(.+?)([^s])s$/,k=/^(.+?)eed$/,_=/^(.+?)(ed|ing)$/,m=/.$/,y=/(at|bl|iz)$/,w=new RegExp("([^aeiouylsz])\\1$"),x=new RegExp("^"+d+e+"[^aeiouwxy]$"),I=/^(.+?[^aeiou])y$/,j=/^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/,T=/^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/,L=/^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/,S=/^(.+?)(s|t)(ion)$/,C=/^(.+?)e$/,R=/ll$/,G=new RegExp("^"+d+e+"[^aeiouwxy]$"),u.Pipeline.registerFunction(u.stemmer=function(e){var d,t,r,o,s,l,n,a;return e.length<3||("y"==(t=e.substr(0,1))&&(e=t.toUpperCase()+e.substr(1)),n=p,(s=g).test(e)?e=e.replace(s,"$1$2"):n.test(e)&&(e=e.replace(n,"$1$2")),n=_,(s=k).test(e)?(a=s.exec(e),(s=c).test(a[1])&&(e=e.replace(s=m,""))):n.test(e)&&(l=(a=n.exec(e))[1],(n=v).test(l))&&(e=l,r=w,o=x,(n=y).test(e)?e+="e":r.test(e)?e=e.replace(s=m,""):o.test(e)&&(e+="e")),(s=I).test(e)&&(e=(l=(a=s.exec(e))[1])+"i"),(s=j).test(e)&&(l=(a=s.exec(e))[1],d=a[2],(s=c).test(l))&&(e=l+i[d]),(s=T).test(e)&&(l=(a=s.exec(e))[1],d=a[2],(s=c).test(l))&&(e=l+f[d]),n=S,(s=L).test(e)?(l=(a=s.exec(e))[1],(s=h).test(l)&&(e=l)):n.test(e)&&(l=(a=n.exec(e))[1]+a[2],(n=h).test(l))&&(e=l),(s=C).test(e)&&(l=(a=s.exec(e))[1],n=b,r=G,(s=h).test(l)||n.test(l)&&!r.test(l))&&(e=l),n=h,(s=R).test(e)&&n.test(e)&&(e=e.replace(s=m,"")),"y"==t&&(e=t.toLowerCase()+e.substr(1))),e},"stemmer"),u.stopWordFilter=function(e){return e&&!0!==u.stopWordFilter.stopWords[e]?e:void 0},u.clearStopWords=function(){u.stopWordFilter.stopWords={}},u.addStopWords=function(e){null!=e&&!1!==Array.isArray(e)&&e.forEach(function(e){u.stopWordFilter.stopWords[e]=!0},this)},u.resetStopWords=function(){u.stopWordFilter.stopWords=u.defaultStopWords},u.stopWordFilter.stopWords=u.defaultStopWords={"":!0,a:!0,able:!0,about:!0,across:!0,after:!0,all:!0,almost:!0,also:!0,am:!0,among:!0,an:!0,and:!0,any:!0,are:!0,as:!0,at:!0,be:!0,because:!0,been:!0,but:!0,by:!0,can:!0,cannot:!0,could:!0,dear:!0,did:!0,do:!0,does:!0,either:!0,else:!0,ever:!0,every:!0,for:!0,from:!0,get:!0,got:!0,had:!0,has:!0,have:!0,he:!0,her:!0,hers:!0,him:!0,his:!0,how:!0,however:!0,i:!0,if:!0,in:!0,into:!0,is:!0,it:!0,its:!0,just:!0,least:!0,let:!0,like:!0,likely:!0,may:!0,me:!0,might:!0,most:!0,must:!0,my:!0,neither:!0,no:!0,nor:!0,not:!0,of:!0,off:!0,often:!0,on:!0,only:!0,or:!0,other:!0,our:!0,own:!0,rather:!0,said:!0,say:!0,says:!0,she:!0,should:!0,since:!0,so:!0,some:!0,than:!0,that:!0,the:!0,their:!0,them:!0,then:!0,there:!0,these:!0,they:!0,this:!0,tis:!0,to:!0,too:!0,twas:!0,us:!0,wants:!0,was:!0,we:!0,were:!0,what:!0,when:!0,where:!0,which:!0,while:!0,who:!0,whom:!0,why:!0,will:!0,with:!0,would:!0,yet:!0,you:!0,your:!0},u.Pipeline.registerFunction(u.stopWordFilter,"stopWordFilter"),u.Pipeline.registerFunction(u.trimmer=function(e){if(null==e)throw new Error("token should not be undefined");return e.replace(/^\W+/,"").replace(/\W+$/,"")},"trimmer"),(u.InvertedIndex=function(){this.root={docs:{},df:0}}).load=function(e){var d=new this;return d.root=e.root,d},u.InvertedIndex.prototype.addToken=function(e,d,t){for(var t=t||this.root,r=0;r<=e.length-1;){var o=e[r];o in t||(t[o]={docs:{},df:0}),r+=1,t=t[o]}var s=d.ref;t.docs[s]?t.docs[s]={tf:d.tf}:(t.docs[s]={tf:d.tf},t.df+=1)},u.InvertedIndex.prototype.hasToken=function(e){if(!e)return!1;for(var d=this.root,t=0;t<e.length;t++){if(!d[e[t]])return!1;d=d[e[t]]}return!0},u.InvertedIndex.prototype.getNode=function(e){if(!e)return null;for(var d=this.root,t=0;t<e.length;t++){if(!d[e[t]])return null;d=d[e[t]]}return d},u.InvertedIndex.prototype.getDocs=function(e){e=this.getNode(e);return null==e?{}:e.docs},u.InvertedIndex.prototype.getTermFrequency=function(e,d){e=this.getNode(e);return null!=e&&d in e.docs?e.docs[d].tf:0},u.InvertedIndex.prototype.getDocFreq=function(e){e=this.getNode(e);return null==e?0:e.df},u.InvertedIndex.prototype.removeToken=function(e,d){e&&null!=(e=this.getNode(e))&&d in e.docs&&(delete e.docs[d],--e.df)},u.InvertedIndex.prototype.expandToken=function(e,d,t){if(null==e||""==e)return[];d=d||[];if(null!=t||null!=(t=this.getNode(e)))for(var r in 0<t.df&&d.push(e),t)"docs"!==r&&"df"!==r&&this.expandToken(e+r,d,t[r]);return d},u.InvertedIndex.prototype.toJSON=function(){return{root:this.root}},(u.Configuration=function(e,d){var t,e=e||"";if(null==d)throw new Error("fields should not be null");this.config={};try{t=JSON.parse(e),this.buildUserConfig(t,d)}catch(e){u.utils.warn("user configuration parse failed, will use default configuration"),this.buildDefaultConfig(d)}}).prototype.buildDefaultConfig=function(e){this.reset(),e.forEach(function(e){this.config[e]={boost:1,bool:"OR",expand:!1}},this)},u.Configuration.prototype.buildUserConfig=function(e,d){var t,r,o="OR",s=!1;if(this.reset(),"bool"in e&&(o=e.bool||o),"expand"in e&&(s=e.expand||s),"fields"in e)for(var l in e.fields)-1<d.indexOf(l)?(r=s,null!=(t=e.fields[l]).expand&&(r=t.expand),this.config[l]={boost:t.boost||0===t.boost?t.boost:1,bool:t.bool||o,expand:r}):u.utils.warn("field name in user configuration not found in index instance fields");else this.addAllFields2UserConfig(o,s,d)},u.Configuration.prototype.addAllFields2UserConfig=function(d,t,e){e.forEach(function(e){this.config[e]={boost:1,bool:d,expand:t}},this)},u.Configuration.prototype.get=function(){return this.config},u.Configuration.prototype.reset=function(){this.config={}},lunr.SortedSet=function(){this.length=0,this.elements=[]},lunr.SortedSet.load=function(e){var d=new this;return d.elements=e,d.length=e.length,d},lunr.SortedSet.prototype.add=function(){for(var e,d=0;d<arguments.length;d++)~this.indexOf(e=arguments[d])||this.elements.splice(this.locationFor(e),0,e);this.length=this.elements.length},lunr.SortedSet.prototype.toArray=function(){return this.elements.slice()},lunr.SortedSet.prototype.map=function(e,d){return this.elements.map(e,d)},lunr.SortedSet.prototype.forEach=function(e,d){return this.elements.forEach(e,d)},lunr.SortedSet.prototype.indexOf=function(e){for(var d=0,t=this.elements.length,r=t-d,o=d+Math.floor(r/2),s=this.elements[o];1<r;){if(s===e)return o;r=(t=e<s?o:t)-(d=s<e?o:d),o=d+Math.floor(r/2),s=this.elements[o]}return s===e?o:-1},lunr.SortedSet.prototype.locationFor=function(e){for(var d=0,t=this.elements.length,r=t-d,o=d+Math.floor(r/2),s=this.elements[o];1<r;)r=(t=e<s?o:t)-(d=s<e?o:d),o=d+Math.floor(r/2),s=this.elements[o];return e<s?o:s<e?o+1:void 0},lunr.SortedSet.prototype.intersect=function(e){for(var d=new lunr.SortedSet,t=0,r=0,o=this.length,s=e.length,l=this.elements,n=e.elements;!(o-1<t||s-1<r);)l[t]!==n[r]?l[t]<n[r]?t++:l[t]>n[r]&&r++:(d.add(l[t]),t++,r++);return d},lunr.SortedSet.prototype.clone=function(){var e=new lunr.SortedSet;return e.elements=this.toArray(),e.length=e.elements.length,e},lunr.SortedSet.prototype.union=function(e){for(var d,e=this.length>=e.length?(d=this,e):(d=e,this),t=d.clone(),r=0,o=e.toArray();r<o.length;r++)t.add(o[r]);return t},lunr.SortedSet.prototype.toJSON=function(){return this.toArray()},d=this,e=function(){return u},"function"==typeof define&&define.amd?define(e):"object"==typeof exports?module.exports=u:d.elasticlunr=u}(),window.onload=function(){document.body.contains(document.goSearch)&&(document.goSearch.onsubmit=function(){return goSearchNow()})};var suggestions=document.getElementById("suggestions"),searchinput=document.getElementById("searchinput");function closeAllLists(e){for(var d=document.getElementById("suggestions");d.firstChild;)d.removeChild(d.firstChild)}function inputFocus(d){191===d.keyCode&&"INPUT"!==document.activeElement.tagName&&"TEXTAREA"!==document.activeElement.tagName&&(d.preventDefault(),searchinput.focus(),suggestions.classList.remove("d-none")),27===d.keyCode&&(searchinput.blur(),suggestions.classList.add("d-none"),closeAllLists());var t=suggestions.querySelectorAll("a");if(!suggestions.classList.contains("d-none")&&0!==t.length){var r=[...t],o=r.indexOf(document.activeElement);let e=0;38===d.keyCode?(d.preventDefault(),t[e=0<o?o-1:0].focus()):40===d.keyCode&&(d.preventDefault(),t[e=o+1<r.length?o+1:o].focus())}}function substringByByte(e,d){for(var t="",r=!1,o=0,s=0,l=0,n=0;n<e.length;n++){var a=e.codePointAt(n).toString(16);if(r=4<a.length&&++n+1<e.length?"200d"==e.codePointAt(n+1).toString(16):r){if(o+=getByteByHex(a),n==e.length-1){if(!((s+=o)<=d))break;t+=e.substr(l,n-l+1)}}else if(0!=o){if(!((s=(s+=o)+getByteByHex(a))<=d))break;t+=e.substr(l,n-l+1),l=n+1,o=0}else{if(!((s+=getByteByHex(a))<=d))break;a.length<=4?t+=e[n]:t+=e[n-1]+e[n],l=n+1}}return t}function getByteByBinary(e){return[0,1,2,3,4][Math.ceil(e.length/8)]}function getByteByHex(e){return getByteByBinary(parseInt(e,16).toString(2))}document.addEventListener("keydown",inputFocus),document.addEventListener("click",function(e){suggestions.contains(e.target)||suggestions.classList.add("d-none")}),function(){var i=elasticlunr.Index.load(window.searchIndex);searchinput.addEventListener("input",function(){var r,e=this.value.trim(),o=i.search(e,{bool:"OR",fields:{title:{boost:2},body:{boost:1}}}),s=suggestions.childNodes,l=o.length,n=e.split(/\s+/);suggestions.classList.remove("d-none"),o.forEach(function(e){""!==e.doc.body&&((r=document.createElement("div")).innerHTML="<a href><span></span><span></span></a>",a=r.querySelector("a"),t=r.querySelector("span:first-child"),d=r.querySelector("span:nth-child(2)"),a.href=e.ref,t.textContent=e.doc.title,d.innerHTML=function(e,d){var t=d.map(function(e){return elasticlunr.stemmer(e.toLowerCase())}),r=!1,o=0,s=[],l=e.toLowerCase().split(". ");for(v in l){var n,a=l[v].split(/[\s\n]/),i=8;for(n in a){if(0<(_=a[n]).length){for(var f in t)elasticlunr.stemmer(_).startsWith(t[f])&&(i=40,r=!0);s.push([_,i,o]),i=2}o=o+_.length+1}o+=1}if(0===s.length)return void 0!==e.length&&300<e.length?e.substring(0,300)+"...":e;for(var c=[],h=Math.min(s.length,30),b=0,v=0;v<h;v++)b+=s[v][1];c.push(b);for(v=0;v<s.length-h;v++)b=(b-=s[v][1])+s[v+h][1],c.push(b);var g=0;if(r)for(var u=0,v=c.length-1;0<=v;v--)u<c[v]&&(u=c[v],g=v);for(var p=[],k=s[g][2],v=g;v<g+h;v++){var _,m;k<(_=s[v])[2]&&(p.push(e.substring(k,_[2])),k=_[2]),40===_[1]&&p.push("<b>"),k=_[2]+_[0].length;40!==_[1]&&12<=_[0].length&&!/^[\x00-\xff]+$/.test(_[0])?(m=substringByByte(e.substring(_[2],k),12),p.push(m)):p.push(e.substring(_[2],k)),40===_[1]&&p.push("</b>")}return p.push("…"),p.join("")}(e.doc.body,n),suggestions.appendChild(r))});for(;s.length>l;)suggestions.removeChild(s[0])},!0),suggestions.addEventListener("click",function(){for(;suggestions.lastChild;)suggestions.removeChild(suggestions.lastChild);return!1},!0),document.body.contains(document.goSearch)&&(document.goSearch.onsubmit=function(){return goSearchNow()})}();